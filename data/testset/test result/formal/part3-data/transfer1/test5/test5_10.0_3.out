number of service arcs=225
number of holding arcs=75

================ Solution ================
BAP terminated with objective : 31858
Total Number of iterations: 1848
Total Number of processed nodes: 179
Total Time spent on master problems: 89301 Total time spent on pricing problems: 3368
Best bound : 31858.0
[54, 60, 62, 65, 67, 69, 70, 73, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 106, 112, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 142, 145, 147, 149, 157, 158, 159, 168, 169, 171, 173, 175, 178, 195, 197, 200, 201, 204, 206, 208, 210, 212, 213, 214, 217, 224]
The number of service edges used= 64

Solution is optimal: true
Columns (only non-zero columns are returned):
artificial: false set: [178, 261, 281, 217, 106, 282] start node= 2 start time= 6 capacity type= 0
(1,1)->(2,6)->(2,7)->(3,11)->(3,12)->(3,13)->(1,1):1.0
Fix cost= 100 variable cost= 48

artificial: false set: [278, 214, 279, 119, 253, 175] start node= 1 start time= 13 capacity type= 1
(2,4)->(3,8)->(3,9)->(3,10)->(1,13)->(1,14)->(2,4):2.0
Fix cost= 200 variable cost= 48

artificial: false set: [256, 115, 212, 249, 171, 255] start node= 1 start time= 9 capacity type= 1
(2,0)->(2,1)->(2,2)->(3,6)->(1,9)->(1,10)->(2,0):2.0
Fix cost= 200 variable cost= 48

artificial: false set: [224, 112, 246, 168, 267, 268] start node= 1 start time= 6 capacity type= 1
(3,3)->(1,6)->(1,7)->(2,12)->(2,13)->(2,14)->(3,3):9.0
Fix cost= 200 variable cost= 48

artificial: false set: [210, 115, 247, 248, 169, 249] start node= 1 start time= 7 capacity type= 1
(2,0)->(3,4)->(1,7)->(1,8)->(1,9)->(1,10)->(2,0):3.0
Fix cost= 200 variable cost= 48

artificial: false set: [277, 213, 118, 251, 252, 173] start node= 1 start time= 11 capacity type= 1
(2,3)->(3,7)->(3,8)->(1,11)->(1,12)->(1,13)->(2,3):2.0
Fix cost= 200 variable cost= 48

artificial: false set: [96, 288, 289, 290, 131, 286, 287] start node= 4 start time= 1 capacity type= 1
(4,1)->(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(0,11)->(4,1):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [288, 97, 289, 290, 291, 132, 287] start node= 4 start time= 2 capacity type= 1
(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(4,7)->(0,12)->(4,2):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [289, 290, 99, 291, 292, 293, 134] start node= 4 start time= 4 capacity type= 1
(4,4)->(4,5)->(4,6)->(4,7)->(4,8)->(4,9)->(0,14)->(4,4):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [290, 291, 100, 292, 293, 294, 120] start node= 4 start time= 5 capacity type= 1
(0,0)->(4,5)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(0,0):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [291, 292, 101, 293, 294, 295, 121] start node= 4 start time= 6 capacity type= 1
(0,1)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(4,11)->(0,1):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [294, 295, 104, 296, 297, 298, 124] start node= 4 start time= 9 capacity type= 1
(0,4)->(4,9)->(4,10)->(4,11)->(4,12)->(4,13)->(4,14)->(0,4):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [295, 296, 297, 90, 298, 299, 125] start node= 4 start time= 10 capacity type= 1
(4,0)->(0,5)->(4,10)->(4,11)->(4,12)->(4,13)->(4,14)->(4,0):2.0
Fix cost= 150 variable cost= 40

artificial: false set: [296, 297, 298, 91, 299, 285, 126] start node= 4 start time= 11 capacity type= 1
(4,0)->(4,1)->(0,6)->(4,11)->(4,12)->(4,13)->(4,14)->(4,0):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [297, 298, 299, 92, 285, 286, 127] start node= 4 start time= 12 capacity type= 1
(4,0)->(4,1)->(4,2)->(0,7)->(4,12)->(4,13)->(4,14)->(4,0):1.0
Fix cost= 150 variable cost= 40

artificial: false set: [128, 298, 299, 93, 285, 286, 287] start node= 4 start time= 13 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(0,8)->(4,13)->(4,14)->(4,0):2.0
Fix cost= 150 variable cost= 40

artificial: false set: [145, 65, 195, 244] start node= 4 start time= 0 capacity type= 1
(4,0)->(1,4)->(1,5)->(3,10)->(4,0):2.0
Fix cost= 150 variable cost= 56

artificial: false set: [147, 67, 197, 246] start node= 4 start time= 2 capacity type= 1
(4,2)->(1,6)->(1,7)->(3,12)->(4,2):1.0
Fix cost= 150 variable cost= 56

artificial: false set: [295, 140, 60, 206] start node= 4 start time= 10 capacity type= 1
(1,0)->(3,5)->(4,10)->(4,11)->(1,0):1.0
Fix cost= 150 variable cost= 56

artificial: false set: [208, 297, 142, 62] start node= 4 start time= 12 capacity type= 1
(1,2)->(3,7)->(4,12)->(4,13)->(1,2):2.0
Fix cost= 150 variable cost= 56

artificial: false set: [130, 197, 246, 157, 285, 286] start node= 4 start time= 0 capacity type= 1
(4,0)->(4,1)->(4,2)->(1,6)->(1,7)->(0,10)->(4,0):1.0
Fix cost= 150 variable cost= 48

artificial: false set: [132, 197, 246, 247, 248, 159] start node= 4 start time= 2 capacity type= 1
(4,2)->(1,6)->(1,7)->(1,8)->(1,9)->(0,12)->(4,2):1.0
Fix cost= 150 variable cost= 48

artificial: false set: [290, 70, 135, 201] start node= 4 start time= 5 capacity type= 1
(3,0)->(4,5)->(4,6)->(1,10)->(3,0):4.0
Fix cost= 150 variable cost= 56

artificial: false set: [293, 73, 138, 204] start node= 4 start time= 8 capacity type= 1
(3,3)->(4,8)->(4,9)->(1,13)->(3,3):1.0
Fix cost= 150 variable cost= 56

artificial: false set: [289, 149, 69, 200] start node= 4 start time= 4 capacity type= 1
(4,4)->(4,5)->(1,9)->(3,14)->(4,4):1.0
Fix cost= 150 variable cost= 56

artificial: false set: [131, 197, 246, 247, 158, 286] start node= 4 start time= 1 capacity type= 1
(4,1)->(4,2)->(1,6)->(1,7)->(1,8)->(0,11)->(4,1):1.0
Fix cost= 150 variable cost= 48

artificial: false set: [288, 289, 54, 200, 299, 285, 286, 287] start node= 4 start time= 5 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(4,4)->(4,5)->(1,9)->(4,14)->(4,0):1.0
Fix cost= 150 variable cost= 36

artificial: false set: [120, 235, 236, 237, 238, 239, 95] start node= 4 start time= 5 capacity type= 1
(0,0)->(4,5)->(0,10)->(0,11)->(0,12)->(0,13)->(0,14)->(0,0):1.0
Fix cost= 150 variable cost= 40

fix cost+variable cost+commodity cost= 8050+2284+21524.0=31858.0

vehicle dowork= 28190 commodity dowork= 21524.0
no load ratio= 0.23646683221000356

Total vehicles used= 48

vehicleCoverServiceEdge information:
{128=2, 130=1, 131=2, 132=2, 134=1, 135=4, 138=1, 140=1, 142=2, 145=2, 147=1, 149=1, 157=1, 158=1, 159=1, 168=9, 169=3, 171=2, 173=2, 175=2, 178=1, 54=1, 60=1, 62=2, 65=2, 195=2, 67=1, 197=4, 69=1, 70=4, 200=2, 201=4, 73=1, 204=1, 206=1, 208=2, 210=3, 212=2, 213=2, 214=2, 217=1, 90=2, 91=1, 92=1, 93=2, 95=1, 224=9, 96=1, 97=1, 99=1, 100=1, 101=1, 104=1, 106=1, 112=9, 115=5, 118=2, 119=2, 120=2, 121=1, 124=1, 125=2, 126=1, 127=1}

commodityFlowIntoTerminal information:
50 50 0 0 50 100 50 50 100 0 66 50 50 0 50 
50 0 100 0 100 0 199 0 0 100 198 0 0 48 0 
250 0 0 100 100 0 20 0 0 0 0 0 447 0 0 
0 0 0 450 150 0 100 100 94 0 0 20 0 0 0 
150 100 150 0 81 295 50 0 50 50 141 50 144 100 0 

vehicle pattern information:
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
Common edge information:
size0= 80 size1= 64 # of common edges= 42
common edge ratio= 0.525
Common pattern information:
size of pattrenSet0= 6 size of patternSet1= 5 # of common patterns= 4
common pattern ratio= 0.6666666666666666

Total time= 147213
