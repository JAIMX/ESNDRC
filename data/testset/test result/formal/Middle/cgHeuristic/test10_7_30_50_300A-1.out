number of service arcs=1500
number of holding arcs=350

Yes
1500

Time of first LP solve= 8804580

There are 10638 columns added to the model.

Tried aggregator 2 times.
MIP Presolve eliminated 25652 rows and 43 columns.
Aggregator did 3379 substitutions.
Reduced MIP has 77490 rows, 371853 columns, and 1091554 nonzeros.
Reduced MIP has 1727 binaries, 8889 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.65 sec. (510.21 ticks)
Probing time = 0.21 sec. (66.94 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 234 rows and 1134 columns.
Reduced MIP has 77256 rows, 370719 columns, and 1088371 nonzeros.
Reduced MIP has 1727 binaries, 8889 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.83 sec. (457.26 ticks)
Probing time = 0.44 sec. (85.47 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 312.38 sec. (126108.51 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                        77466.0000   -17755.0000           122.92%
*     0+    0                        68317.0000   -17755.0000           125.99%
*     0+    0                        64913.0000   -17755.0000           127.35%
*     0+    0                        63641.0000   -17755.0000           127.90%
*     0+    0                        63212.0000   -17755.0000           128.09%
*     0+    0                        62434.0000   -17755.0000           128.44%
      0     0    51483.0100   165    62434.0000    51483.0100    81094   17.54%
      0     0    51483.0100   172    62434.0000    Cuts: 1582   110062   17.54%
      0     0    51483.0100   176    62434.0000    Cuts: 1425   141312   17.54%
Heuristic still looking.
Heuristic still looking.
Heuristic still looking.
      0     2    51483.0100   176    62434.0000    51483.0100   141312   17.54%
Elapsed time = 1789.01 sec. (825625.43 ticks, tree = 0.00 MB, solutions = 6)
      1     3    51483.0100   136    62434.0000    51483.0100   184468   17.54%
      2     4    51483.0100   147    62434.0000    51483.0100   205568   17.54%
      3     5    51483.0100   141    62434.0000    51483.0100   229210   17.54%
      5     7    51483.0100   147    62434.0000    51483.0100   276410   17.54%
      6     8    51483.0100   141    62434.0000    51483.0100   295162   17.54%
      7     9    51483.0100   174    62434.0000    51483.0100   398609   17.54%
      9    11    51483.0100   174    62434.0000    51483.0100   558890   17.54%
     10    12    51483.0100   157    62434.0000    51483.0100   661000   17.54%
     11    13    51483.0100   155    62434.0000    51483.0100   916435   17.54%
     12    14    51483.0100   138    62434.0000    51483.0100  1125591   17.54%
Elapsed time = 5184.54 sec. (2272102.26 ticks, tree = 0.00 MB, solutions = 6)
     13    15    51483.0100   175    62434.0000    51483.0100  1398429   17.54%
     14    16    51483.0100   168    62434.0000    51483.0100  1672954   17.54%
     15    17    51483.0100   181    62434.0000    51483.0100  1735791   17.54%
     17    19    51483.0100   161    62434.0000    51483.0100  1875598   17.54%
     19    21    51483.0100    99    62434.0000    51483.0100  1961920   17.54%
     20    22    51483.0100    62    62434.0000    51483.0100  1979387   17.54%
     23    25    51483.0100   140    62434.0000    51483.0100  2010360   17.54%

Mixed integer rounding cuts applied:  1265
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             = 1788.80 sec. (825534.06 ticks)
Parallel b&c, 4 threads:
  Real time             = 5411.43 sec. (2021029.31 ticks)
  Sync time (average)   = 1039.81 sec.
  Wait time (average)   = 1039.89 sec.
                          ------------
Total (root+branch&cut) = 7200.23 sec. (2846563.37 ticks)
optimal objective= 62434.0

artificial: false set: [707, 262, 1168, 1523, 1524, 1588, 1589, 1590, 343, 1591, 983, 1656, 1400, 1592, 125] start node= 4 start time= 33 capacity type= 1
(6,0)->(3,6)->(3,7)->(1,12)->(5,18)->(0,23)->(0,24)->(0,25)->(4,33)->(1,38)->(1,39)->(1,40)->(1,41)->(1,42)->(1,43)->(6,0):1

artificial: false set: [128, 707, 262, 1736, 1737, 1168, 1523, 1524, 1525, 1526, 1527, 343, 1656, 1400, 988] start node= 4 start time= 37 capacity type= 1
(6,0)->(3,6)->(3,7)->(1,12)->(5,18)->(0,23)->(0,24)->(0,25)->(0,26)->(0,27)->(0,28)->(4,36)->(4,37)->(4,38)->(1,43)->(6,0):2

artificial: false set: [1667, 1411, 1668, 1828, 1669, 1445, 870, 1810, 1651, 1843, 852, 1844, 885, 1429] start node= 6 start time= 28 capacity type= 1
(3,1)->(3,2)->(6,10)->(6,11)->(3,17)->(3,18)->(3,19)->(3,20)->(6,28)->(6,29)->(3,35)->(6,43)->(6,44)->(6,45)->(3,1):1

artificial: false set: [753, 1097, 233, 1226, 540, 1118, 511] start node= 5 start time= 26 capacity type= 0
(3,3)->(2,11)->(4,18)->(5,26)->(1,33)->(2,40)->(4,47)->(3,3):5

artificial: false set: [1709, 1453, 1168, 1523, 1588, 1524, 1589, 1590, 1110, 1591, 983, 1592, 1593, 1594, 346, 1595, 125] start node= 1 start time= 46 capacity type= 1
(6,3)->(4,9)->(4,10)->(5,18)->(0,23)->(0,24)->(0,25)->(4,33)->(1,38)->(1,39)->(1,40)->(1,41)->(1,42)->(1,43)->(1,44)->(1,45)->(1,46)->(6,3):1

artificial: false set: [481, 1025, 194, 116, 1161, 155, 1724, 1150, 687] start node= 4 start time= 24 capacity type= 1
(5,0)->(0,5)->(5,11)->(0,16)->(4,24)->(4,25)->(2,31)->(3,37)->(0,44)->(5,0):1

artificial: false set: [1185, 179, 661, 1174, 455, 40, 168, 248, 1596, 1597] start node= 1 start time= 46 capacity type= 0
(2,5)->(3,11)->(0,18)->(5,24)->(0,29)->(5,35)->(0,40)->(1,46)->(1,47)->(1,48)->(2,5):2

artificial: false set: [993, 835, 1011, 1429, 567, 1322, 348, 1455] start node= 1 start time= 48 capacity type= 2
(6,5)->(4,11)->(2,17)->(5,22)->(6,29)->(3,35)->(4,43)->(1,48)->(6,5):1

artificial: false set: [1600, 961, 1601, 1602, 1603, 1680, 1424, 1649, 1681, 1394, 1682, 1843, 1683, 1684, 885, 504, 317, 1566] start node= 2 start time= 0 capacity type= 0
(2,0)->(2,1)->(2,2)->(2,3)->(2,4)->(4,11)->(1,16)->(1,17)->(6,24)->(3,30)->(3,31)->(3,32)->(3,33)->(3,34)->(3,35)->(6,43)->(6,44)->(2,49)->(2,0):2

artificial: false set: [802, 1061, 1638, 1096, 1032, 539, 525, 1710, 767] start node= 4 start time= 10 capacity type= 1
(3,2)->(4,10)->(4,11)->(3,17)->(2,25)->(4,32)->(2,38)->(2,39)->(4,46)->(3,2):1

artificial: false set: [640, 802, 1426, 1110, 1446, 1319, 1768, 782] start node= 5 start time= 19 capacity type= 2
(3,2)->(4,10)->(5,18)->(5,19)->(6,26)->(3,32)->(2,40)->(6,46)->(3,2):1

artificial: false set: [1521, 1346, 22, 664, 1640, 328, 1353, 1385, 458, 591] start node= 1 start time= 28 capacity type= 1
(6,3)->(2,8)->(3,14)->(0,21)->(0,22)->(1,28)->(6,35)->(2,40)->(2,41)->(5,46)->(6,3):1

artificial: false set: [1747, 1076, 1748, 1013, 805, 519, 1099, 540, 782] start node= 4 start time= 47 capacity type= 1
(3,5)->(4,13)->(2,19)->(4,26)->(3,32)->(2,40)->(4,47)->(4,48)->(4,49)->(3,5):1

artificial: false set: [1809, 1666, 1410, 851, 1095, 1032, 538, 525, 767] start node= 6 start time= 9 capacity type= 0
(3,1)->(6,9)->(6,10)->(3,16)->(3,17)->(2,25)->(4,32)->(2,38)->(4,45)->(3,1):1

artificial: false set: [80, 993, 673, 835, 68, 363, 1612, 1357, 349, 1598, 1806] start node= 1 start time= 49 capacity type= 2
(6,6)->(6,7)->(2,12)->(2,13)->(0,18)->(3,23)->(0,30)->(3,35)->(4,43)->(1,48)->(1,49)->(6,6):1

artificial: false set: [1708, 1709, 1710, 1617, 1618, 83, 371, 1619, 1011, 1396, 1620, 501, 1526, 1527, 888, 1528, 1529, 1530, 1531, 1532] start node= 4 start time= 8 capacity type= 0
(2,1)->(4,8)->(4,9)->(4,10)->(4,11)->(2,17)->(2,18)->(2,19)->(2,20)->(2,21)->(0,26)->(0,27)->(0,28)->(0,29)->(0,30)->(0,31)->(0,32)->(0,33)->(3,38)->(6,46)->(2,1):3

artificial: false set: [1600, 1649, 1058, 1043, 501, 1622, 1030, 536, 523, 764] start node= 4 start time= 30 capacity type= 1
(2,0)->(2,1)->(4,8)->(3,14)->(2,22)->(2,23)->(4,30)->(2,36)->(4,43)->(2,49)->(2,0):1

artificial: false set: [864, 441, 201, 1386, 458, 878, 1422, 1550, 1598, 1599] start node= 1 start time= 48 capacity type= 1
(1,0)->(1,1)->(2,8)->(3,14)->(6,22)->(3,28)->(6,36)->(2,41)->(1,48)->(1,49)->(1,0):1

artificial: false set: [1744, 705, 945, 1266, 50, 260, 631, 571, 1276, 1487, 1743] start node= 4 start time= 43 capacity type= 1
(0,0)->(3,5)->(1,10)->(5,16)->(2,21)->(5,26)->(2,31)->(6,37)->(4,43)->(4,44)->(4,45)->(0,0):1

artificial: false set: [563, 1268, 1479, 1735, 1736, 937, 1258, 747, 252, 92, 623] start node= 4 start time= 35 capacity type= 1
(1,2)->(5,8)->(2,13)->(5,18)->(2,23)->(6,29)->(4,35)->(4,36)->(4,37)->(0,42)->(3,47)->(1,2):1

artificial: false set: [961, 843, 1680, 1424, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1566, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 317] start node= 4 start time= 1 capacity type= 0
(4,1)->(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(4,11)->(1,16)->(1,17)->(6,24)->(3,30)->(3,31)->(3,32)->(3,33)->(3,34)->(3,35)->(3,36)->(3,37)->(3,38)->(3,39)->(3,40)->(3,41)->(3,42)->(3,43)->(4,1):1

artificial: false set: [577, 1809, 1282, 1362, 1810, 387, 1811, 567, 1272, 747, 92, 302] start node= 6 start time= 9 capacity type= 0
(1,2)->(6,9)->(6,10)->(6,11)->(6,12)->(2,17)->(5,22)->(2,27)->(5,32)->(2,37)->(0,42)->(3,47)->(1,2):1

artificial: false set: [339, 564, 1269, 374, 1846, 1399, 1847, 1848, 554, 1259, 734, 79] start node= 6 start time= 46 capacity type= 0
(2,4)->(5,9)->(2,14)->(5,19)->(2,24)->(0,29)->(3,34)->(1,39)->(6,46)->(6,47)->(6,48)->(6,49)->(2,4):2

artificial: false set: [1504, 1393, 1025, 581, 1336, 1818, 155, 1469, 398, 1311, 1503] start node= 0 start time= 3 capacity type= 1
(0,3)->(0,4)->(0,5)->(5,11)->(6,18)->(6,19)->(4,25)->(2,31)->(5,36)->(6,43)->(2,48)->(0,3):1

artificial: false set: [1760, 1392, 884, 374, 1623, 1368, 154, 398, 1503, 1647, 79, 1311] start node= 5 start time= 11 capacity type= 1
(0,3)->(0,4)->(5,10)->(5,11)->(6,18)->(2,23)->(2,24)->(0,29)->(3,34)->(6,42)->(2,47)->(2,48)->(0,3):2

artificial: false set: [1377, 1458, 1620, 1014, 632, 746, 621, 301, 1838, 1695, 1439] start node= 1 start time= 1 capacity type= 2
(1,1)->(6,8)->(4,14)->(2,20)->(2,21)->(6,27)->(2,32)->(6,38)->(6,39)->(3,45)->(3,46)->(1,1):1

artificial: false set: [864, 545, 1642, 458, 1002, 1643, 1387, 1644, 1678, 1422, 879] start node= 4 start time= 2 capacity type= 1
(4,2)->(2,8)->(3,14)->(6,22)->(3,28)->(3,29)->(6,37)->(2,42)->(2,43)->(2,44)->(2,45)->(4,2):1

artificial: false set: [1552, 1696, 1440, 304, 1553, 1825, 882, 1426, 867, 1411, 747] start node= 1 start time= 4 capacity type= 1
(1,2)->(1,3)->(1,4)->(6,11)->(3,17)->(6,25)->(6,26)->(3,32)->(6,40)->(3,46)->(3,47)->(1,2):1

artificial: false set: [1168, 1523, 707, 1524, 1525, 262, 1734, 1656, 1400, 126, 1343, 1135] start node= 4 start time= 34 capacity type= 1
(6,0)->(3,6)->(3,7)->(1,12)->(5,18)->(0,23)->(0,24)->(0,25)->(0,26)->(4,34)->(4,35)->(5,43)->(6,0):3

artificial: false set: [1744, 1745, 835, 1684, 1428, 870, 1414, 1046, 552, 1307, 1743] start node= 4 start time= 46 capacity type= 1
(2,2)->(5,7)->(6,14)->(3,20)->(6,28)->(3,34)->(3,35)->(4,43)->(4,44)->(4,45)->(4,46)->(2,2):1

artificial: false set: [1698, 1442, 1682, 899, 1683, 884, 1076, 613, 1469, 1725, 1358, 1807] start node= 4 start time= 25 capacity type= 1
(6,7)->(6,8)->(2,13)->(6,19)->(4,25)->(4,26)->(3,32)->(3,33)->(3,34)->(6,42)->(3,48)->(3,49)->(6,7):1

Column Generation Based Heuristic Time= 16007308
================ Solution ================
BAP terminated with objective : 62434
Total Number of iterations: 25
Total Number of processed nodes: 0
Total Time spent on master problems: 8826791 Total time spent on pricing problems: 1364
Best bound : 62434.0
[22, 40, 50, 68, 79, 80, 83, 92, 116, 125, 126, 128, 154, 155, 168, 179, 194, 201, 233, 248, 252, 260, 262, 301, 302, 304, 317, 328, 339, 343, 346, 348, 349, 363, 371, 374, 387, 398, 441, 455, 458, 481, 501, 504, 511, 519, 523, 525, 536, 538, 539, 540, 545, 552, 554, 563, 564, 567, 571, 577, 581, 591, 613, 621, 623, 631, 632, 640, 661, 664, 673, 687, 705, 707, 734, 746, 747, 753, 764, 767, 782, 802, 805, 835, 843, 851, 852, 864, 867, 870, 878, 879, 882, 884, 885, 888, 899, 937, 945, 961, 983, 988, 993, 1002, 1011, 1013, 1014, 1025, 1030, 1032, 1043, 1046, 1058, 1061, 1076, 1095, 1096, 1097, 1099, 1110, 1118, 1135, 1150, 1161, 1168, 1174, 1185, 1226, 1258, 1259, 1266, 1268, 1269, 1272, 1276, 1282, 1307, 1311, 1319, 1322, 1336, 1343, 1346, 1353, 1357, 1358, 1362, 1368, 1377, 1385, 1386, 1387, 1392, 1393, 1394, 1396, 1399, 1400, 1410, 1411, 1414, 1422, 1424, 1426, 1428, 1429, 1439, 1440, 1442, 1445, 1446, 1453, 1455, 1458, 1469, 1479, 1487]
The number of service edges used= 177

Solution is optimal: true
Columns (only non-zero columns are returned):
artificial: false set: [707, 262, 1168, 1523, 1524, 1588, 1589, 1590, 343, 1591, 983, 1656, 1400, 1592, 125] start node= 4 start time= 33 capacity type= 1
(6,0)->(3,6)->(3,7)->(1,12)->(5,18)->(0,23)->(0,24)->(0,25)->(4,33)->(1,38)->(1,39)->(1,40)->(1,41)->(1,42)->(1,43)->(6,0):1.0
Fix cost= 150 variable cost= 168

artificial: false set: [128, 707, 262, 1736, 1737, 1168, 1523, 1524, 1525, 1526, 1527, 343, 1656, 1400, 988] start node= 4 start time= 37 capacity type= 1
(6,0)->(3,6)->(3,7)->(1,12)->(5,18)->(0,23)->(0,24)->(0,25)->(0,26)->(0,27)->(0,28)->(4,36)->(4,37)->(4,38)->(1,43)->(6,0):2.0
Fix cost= 150 variable cost= 168

artificial: false set: [1667, 1411, 1668, 1828, 1669, 1445, 870, 1810, 1651, 1843, 852, 1844, 885, 1429] start node= 6 start time= 28 capacity type= 1
(3,1)->(3,2)->(6,10)->(6,11)->(3,17)->(3,18)->(3,19)->(3,20)->(6,28)->(6,29)->(3,35)->(6,43)->(6,44)->(6,45)->(3,1):1.0
Fix cost= 300 variable cost= 168

artificial: false set: [753, 1097, 233, 1226, 540, 1118, 511] start node= 5 start time= 26 capacity type= 0
(3,3)->(2,11)->(4,18)->(5,26)->(1,33)->(2,40)->(4,47)->(3,3):5.0
Fix cost= 75 variable cost= 200

artificial: false set: [1709, 1453, 1168, 1523, 1588, 1524, 1589, 1590, 1110, 1591, 983, 1592, 1593, 1594, 346, 1595, 125] start node= 1 start time= 46 capacity type= 1
(6,3)->(4,9)->(4,10)->(5,18)->(0,23)->(0,24)->(0,25)->(4,33)->(1,38)->(1,39)->(1,40)->(1,41)->(1,42)->(1,43)->(1,44)->(1,45)->(1,46)->(6,3):1.0
Fix cost= 200 variable cost= 156

artificial: false set: [481, 1025, 194, 116, 1161, 155, 1724, 1150, 687] start node= 4 start time= 24 capacity type= 1
(5,0)->(0,5)->(5,11)->(0,16)->(4,24)->(4,25)->(2,31)->(3,37)->(0,44)->(5,0):1.0
Fix cost= 150 variable cost= 196

artificial: false set: [1185, 179, 661, 1174, 455, 40, 168, 248, 1596, 1597] start node= 1 start time= 46 capacity type= 0
(2,5)->(3,11)->(0,18)->(5,24)->(0,29)->(5,35)->(0,40)->(1,46)->(1,47)->(1,48)->(2,5):2.0
Fix cost= 150 variable cost= 192

artificial: false set: [993, 835, 1011, 1429, 567, 1322, 348, 1455] start node= 1 start time= 48 capacity type= 2
(6,5)->(4,11)->(2,17)->(5,22)->(6,29)->(3,35)->(4,43)->(1,48)->(6,5):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [1600, 961, 1601, 1602, 1603, 1680, 1424, 1649, 1681, 1394, 1682, 1843, 1683, 1684, 885, 504, 317, 1566] start node= 2 start time= 0 capacity type= 0
(2,0)->(2,1)->(2,2)->(2,3)->(2,4)->(4,11)->(1,16)->(1,17)->(6,24)->(3,30)->(3,31)->(3,32)->(3,33)->(3,34)->(3,35)->(6,43)->(6,44)->(2,49)->(2,0):2.0
Fix cost= 100 variable cost= 152

artificial: false set: [802, 1061, 1638, 1096, 1032, 539, 525, 1710, 767] start node= 4 start time= 10 capacity type= 1
(3,2)->(4,10)->(4,11)->(3,17)->(2,25)->(4,32)->(2,38)->(2,39)->(4,46)->(3,2):1.0
Fix cost= 150 variable cost= 192

artificial: false set: [640, 802, 1426, 1110, 1446, 1319, 1768, 782] start node= 5 start time= 19 capacity type= 2
(3,2)->(4,10)->(5,18)->(5,19)->(6,26)->(3,32)->(2,40)->(6,46)->(3,2):1.0
Fix cost= 350 variable cost= 196

artificial: false set: [1521, 1346, 22, 664, 1640, 328, 1353, 1385, 458, 591] start node= 1 start time= 28 capacity type= 1
(6,3)->(2,8)->(3,14)->(0,21)->(0,22)->(1,28)->(6,35)->(2,40)->(2,41)->(5,46)->(6,3):1.0
Fix cost= 200 variable cost= 192

artificial: false set: [1747, 1076, 1748, 1013, 805, 519, 1099, 540, 782] start node= 4 start time= 47 capacity type= 1
(3,5)->(4,13)->(2,19)->(4,26)->(3,32)->(2,40)->(4,47)->(4,48)->(4,49)->(3,5):1.0
Fix cost= 150 variable cost= 192

artificial: false set: [1809, 1666, 1410, 851, 1095, 1032, 538, 525, 767] start node= 6 start time= 9 capacity type= 0
(3,1)->(6,9)->(6,10)->(3,16)->(3,17)->(2,25)->(4,32)->(2,38)->(4,45)->(3,1):1.0
Fix cost= 100 variable cost= 192

artificial: false set: [80, 993, 673, 835, 68, 363, 1612, 1357, 349, 1598, 1806] start node= 1 start time= 49 capacity type= 2
(6,6)->(6,7)->(2,12)->(2,13)->(0,18)->(3,23)->(0,30)->(3,35)->(4,43)->(1,48)->(1,49)->(6,6):1.0
Fix cost= 300 variable cost= 188

artificial: false set: [1708, 1709, 1710, 1617, 1618, 83, 371, 1619, 1011, 1396, 1620, 501, 1526, 1527, 888, 1528, 1529, 1530, 1531, 1532] start node= 4 start time= 8 capacity type= 0
(2,1)->(4,8)->(4,9)->(4,10)->(4,11)->(2,17)->(2,18)->(2,19)->(2,20)->(2,21)->(0,26)->(0,27)->(0,28)->(0,29)->(0,30)->(0,31)->(0,32)->(0,33)->(3,38)->(6,46)->(2,1):3.0
Fix cost= 50 variable cost= 144

artificial: false set: [1600, 1649, 1058, 1043, 501, 1622, 1030, 536, 523, 764] start node= 4 start time= 30 capacity type= 1
(2,0)->(2,1)->(4,8)->(3,14)->(2,22)->(2,23)->(4,30)->(2,36)->(4,43)->(2,49)->(2,0):1.0
Fix cost= 150 variable cost= 188

artificial: false set: [864, 441, 201, 1386, 458, 878, 1422, 1550, 1598, 1599] start node= 1 start time= 48 capacity type= 1
(1,0)->(1,1)->(2,8)->(3,14)->(6,22)->(3,28)->(6,36)->(2,41)->(1,48)->(1,49)->(1,0):1.0
Fix cost= 200 variable cost= 188

artificial: false set: [1744, 705, 945, 1266, 50, 260, 631, 571, 1276, 1487, 1743] start node= 4 start time= 43 capacity type= 1
(0,0)->(3,5)->(1,10)->(5,16)->(2,21)->(5,26)->(2,31)->(6,37)->(4,43)->(4,44)->(4,45)->(0,0):1.0
Fix cost= 150 variable cost= 192

artificial: false set: [563, 1268, 1479, 1735, 1736, 937, 1258, 747, 252, 92, 623] start node= 4 start time= 35 capacity type= 1
(1,2)->(5,8)->(2,13)->(5,18)->(2,23)->(6,29)->(4,35)->(4,36)->(4,37)->(0,42)->(3,47)->(1,2):1.0
Fix cost= 150 variable cost= 192

artificial: false set: [961, 843, 1680, 1424, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1566, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 317] start node= 4 start time= 1 capacity type= 0
(4,1)->(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(4,11)->(1,16)->(1,17)->(6,24)->(3,30)->(3,31)->(3,32)->(3,33)->(3,34)->(3,35)->(3,36)->(3,37)->(3,38)->(3,39)->(3,40)->(3,41)->(3,42)->(3,43)->(4,1):1.0
Fix cost= 50 variable cost= 104

artificial: false set: [577, 1809, 1282, 1362, 1810, 387, 1811, 567, 1272, 747, 92, 302] start node= 6 start time= 9 capacity type= 0
(1,2)->(6,9)->(6,10)->(6,11)->(6,12)->(2,17)->(5,22)->(2,27)->(5,32)->(2,37)->(0,42)->(3,47)->(1,2):1.0
Fix cost= 100 variable cost= 188

artificial: false set: [339, 564, 1269, 374, 1846, 1399, 1847, 1848, 554, 1259, 734, 79] start node= 6 start time= 46 capacity type= 0
(2,4)->(5,9)->(2,14)->(5,19)->(2,24)->(0,29)->(3,34)->(1,39)->(6,46)->(6,47)->(6,48)->(6,49)->(2,4):2.0
Fix cost= 100 variable cost= 188

artificial: false set: [1504, 1393, 1025, 581, 1336, 1818, 155, 1469, 398, 1311, 1503] start node= 0 start time= 3 capacity type= 1
(0,3)->(0,4)->(0,5)->(5,11)->(6,18)->(6,19)->(4,25)->(2,31)->(5,36)->(6,43)->(2,48)->(0,3):1.0
Fix cost= 300 variable cost= 188

artificial: false set: [1760, 1392, 884, 374, 1623, 1368, 154, 398, 1503, 1647, 79, 1311] start node= 5 start time= 11 capacity type= 1
(0,3)->(0,4)->(5,10)->(5,11)->(6,18)->(2,23)->(2,24)->(0,29)->(3,34)->(6,42)->(2,47)->(2,48)->(0,3):2.0
Fix cost= 200 variable cost= 184

artificial: false set: [1377, 1458, 1620, 1014, 632, 746, 621, 301, 1838, 1695, 1439] start node= 1 start time= 1 capacity type= 2
(1,1)->(6,8)->(4,14)->(2,20)->(2,21)->(6,27)->(2,32)->(6,38)->(6,39)->(3,45)->(3,46)->(1,1):1.0
Fix cost= 300 variable cost= 188

artificial: false set: [864, 545, 1642, 458, 1002, 1643, 1387, 1644, 1678, 1422, 879] start node= 4 start time= 2 capacity type= 1
(4,2)->(2,8)->(3,14)->(6,22)->(3,28)->(3,29)->(6,37)->(2,42)->(2,43)->(2,44)->(2,45)->(4,2):1.0
Fix cost= 150 variable cost= 184

artificial: false set: [1552, 1696, 1440, 304, 1553, 1825, 882, 1426, 867, 1411, 747] start node= 1 start time= 4 capacity type= 1
(1,2)->(1,3)->(1,4)->(6,11)->(3,17)->(6,25)->(6,26)->(3,32)->(6,40)->(3,46)->(3,47)->(1,2):1.0
Fix cost= 200 variable cost= 184

artificial: false set: [1168, 1523, 707, 1524, 1525, 262, 1734, 1656, 1400, 126, 1343, 1135] start node= 4 start time= 34 capacity type= 1
(6,0)->(3,6)->(3,7)->(1,12)->(5,18)->(0,23)->(0,24)->(0,25)->(0,26)->(4,34)->(4,35)->(5,43)->(6,0):3.0
Fix cost= 150 variable cost= 180

artificial: false set: [1744, 1745, 835, 1684, 1428, 870, 1414, 1046, 552, 1307, 1743] start node= 4 start time= 46 capacity type= 1
(2,2)->(5,7)->(6,14)->(3,20)->(6,28)->(3,34)->(3,35)->(4,43)->(4,44)->(4,45)->(4,46)->(2,2):1.0
Fix cost= 150 variable cost= 184

artificial: false set: [1698, 1442, 1682, 899, 1683, 884, 1076, 613, 1469, 1725, 1358, 1807] start node= 4 start time= 25 capacity type= 1
(6,7)->(6,8)->(2,13)->(6,19)->(4,25)->(4,26)->(3,32)->(3,33)->(3,34)->(6,42)->(3,48)->(3,49)->(6,7):1.0
Fix cost= 150 variable cost= 180

fix cost+variable cost+commodity cost= 6775+7940+47719.0=62434.0
Total time= 24837401
