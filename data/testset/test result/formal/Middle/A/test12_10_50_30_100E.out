number of service arcs=1500
number of holding arcs=300

javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:479)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceA_M.runBranchAndPrice(BranchAndPriceA_M.java:278)
	at SNDRCSolver.<init>(SNDRCSolver.java:117)
	at SNDRCSolver.main(SNDRCSolver.java:302)
================ Solution ================
BAP terminated with objective : 21577
Total Number of iterations: 379
Total Number of processed nodes: 18
Total Time spent on master problems: 7788023 Total time spent on pricing problems: 10565
Best bound : 19218.74104350183
[38, 52, 55, 74, 111, 122, 135, 160, 167, 197, 212, 223, 248, 258, 266, 272, 285, 290, 340, 351, 369, 383, 389, 403, 418, 431, 442, 449, 470, 477, 483, 492, 493, 496, 508, 567, 570, 608, 632, 638, 649, 654, 664, 668, 689, 715, 729, 753, 754, 762, 777, 800, 819, 823, 903, 916, 964, 965, 979, 981, 985, 1029, 1049, 1052, 1063, 1071, 1081, 1107, 1112, 1132, 1153, 1161, 1171, 1207, 1215, 1250, 1287, 1299, 1307, 1318, 1342, 1384, 1394, 1416, 1437, 1459, 1486, 1497]
The number of service edges used= 88

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [418, 979, 403, 1572, 964, 1643, 638, 654] start node= 4 start time= 24 capacity type= 0
(6,4)->(4,8)->(2,12)->(2,13)->(6,19)->(4,23)->(4,24)->(2,28)->(6,4):1.0
Fix cost= 50 variable cost= 112

artificial: false set: [1537, 1538, 1539, 483, 1540, 1541, 389, 1542, 649, 1583, 1584, 1585, 1586, 1587, 1588, 223] start node= 4 start time= 19 capacity type= 1
(3,3)->(1,7)->(1,8)->(1,9)->(1,10)->(1,11)->(1,12)->(1,13)->(4,19)->(2,23)->(2,24)->(2,25)->(2,26)->(2,27)->(2,28)->(2,29)->(3,3):1.0
Fix cost= 150 variable cost= 72

artificial: false set: [1029, 1318, 1112, 1161, 1307] start node= 7 start time= 2 capacity type= 1
(7,2)->(6,9)->(8,17)->(7,21)->(8,28)->(7,2):1.0
Fix cost= 110 variable cost= 120

artificial: false set: [449, 1384, 1486, 431, 1071] start node= 7 start time= 21 capacity type= 1
(9,4)->(2,11)->(9,16)->(7,21)->(2,29)->(9,4):1.0
Fix cost= 110 variable cost= 120

artificial: false set: [753, 1063, 248, 442, 1722, 1437, 1581] start node= 7 start time= 12 capacity type= 1
(5,3)->(1,8)->(7,12)->(7,13)->(2,21)->(2,22)->(9,27)->(5,3):1.0
Fix cost= 110 variable cost= 112

artificial: false set: [819, 1107, 916, 664, 111] start node= 7 start time= 27 capacity type= 1
(4,4)->(5,9)->(6,16)->(0,21)->(7,27)->(4,4):1.0
Fix cost= 110 variable cost= 120

artificial: false set: [1700, 981, 823, 1081, 715, 668] start node= 7 start time= 1 capacity type= 1
(7,1)->(4,8)->(5,13)->(6,20)->(6,21)->(4,25)->(7,1):1.0
Fix cost= 110 variable cost= 116

artificial: false set: [965, 470, 55, 729, 570, 1215] start node= 8 start time= 15 capacity type= 1
(3,0)->(6,5)->(4,9)->(8,15)->(3,20)->(0,25)->(3,0):1.0
Fix cost= 120 variable cost= 120

artificial: false set: [496, 290, 1603, 1604, 1605, 38, 903, 1287] start node= 8 start time= 27 capacity type= 1
(6,3)->(0,8)->(3,13)->(3,14)->(3,15)->(3,16)->(1,20)->(8,27)->(6,3):1.0
Fix cost= 120 variable cost= 108

artificial: false set: [258, 1207, 1049, 1546, 1547, 1132, 492] start node= 8 start time= 7 capacity type= 1
(8,7)->(3,12)->(1,16)->(1,17)->(1,18)->(7,22)->(6,29)->(8,7):1.0
Fix cost= 120 variable cost= 112

artificial: false set: [340, 1497, 1052, 285, 1342] start node= 1 start time= 15 capacity type= 2
(7,2)->(2,10)->(1,15)->(8,22)->(9,27)->(7,2):1.0
Fix cost= 300 variable cost= 120

artificial: false set: [160, 689, 754, 1459, 1539, 135, 985] start node= 1 start time= 9 capacity type= 2
(5,4)->(1,9)->(1,10)->(0,15)->(9,19)->(6,25)->(4,29)->(5,4):1.0
Fix cost= 300 variable cost= 116

artificial: false set: [1568, 369, 197, 567, 632, 493, 1566, 1567, 383] start node= 1 start time= 17 capacity type= 2
(4,2)->(2,6)->(2,7)->(2,8)->(2,9)->(3,13)->(1,17)->(2,23)->(3,27)->(4,2):1.0
Fix cost= 300 variable cost= 108

artificial: false set: [52, 167, 1416, 762, 122, 477] start node= 1 start time= 17 capacity type= 2
(0,2)->(9,6)->(5,12)->(1,17)->(0,22)->(3,27)->(0,2):1.0
Fix cost= 300 variable cost= 120

artificial: false set: [272, 1153, 1250, 1299, 777] start node= 1 start time= 2 capacity type= 2
(1,2)->(8,9)->(7,13)->(8,20)->(5,27)->(1,2):1.0
Fix cost= 300 variable cost= 120

artificial: false set: [608, 800, 212, 74, 508] start node= 5 start time= 20 capacity type= 2
(1,2)->(4,8)->(0,14)->(5,20)->(3,28)->(1,2):1.0
Fix cost= 350 variable cost= 120

artificial: false set: [1394, 1779, 1171, 1780, 1781, 1782, 1783, 266, 1710, 351] start node= 9 start time= 13 capacity type= 2
(7,0)->(7,1)->(9,9)->(9,10)->(9,11)->(9,12)->(9,13)->(9,14)->(2,21)->(1,26)->(7,0):1.0
Fix cost= 350 variable cost= 96

fix cost+variable cost+commodity cost= 3310+1912+16355.0=21577.0
Total time= 36400918
