number of service arcs=750
number of holding arcs=250

javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:479)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceA_M.runBranchAndPrice(BranchAndPriceA_M.java:278)
	at SNDRCSolver.<init>(SNDRCSolver.java:117)
	at SNDRCSolver.main(SNDRCSolver.java:302)
================ Solution ================
BAP terminated with objective : 18930
Total Number of iterations: 132
Total Number of processed nodes: 9
Total Time spent on master problems: 11170495 Total time spent on pricing problems: 2423
Best bound : 18283.247058823526
[2, 5, 38, 42, 79, 89, 108, 117, 120, 129, 135, 156, 161, 166, 175, 197, 202, 242, 244, 252, 259, 274, 288, 296, 300, 330, 334, 352, 359, 361, 366, 371, 372, 378, 381, 384, 394, 424, 437, 462, 470, 484, 498, 506, 519, 525, 531, 547, 555, 561, 564, 569, 573, 582, 589, 596, 605, 614, 617, 626, 635, 649, 658, 672, 691, 693, 699, 712, 727]
The number of service edges used= 69

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [288, 484, 614, 108, 561, 274, 498, 691, 244, 117, 470, 727, 252, 381, 605] start node= 1 start time= 44 capacity type= 2
(1,2)->(4,5)->(0,8)->(3,11)->(4,14)->(0,17)->(3,20)->(1,24)->(4,27)->(2,31)->(3,34)->(1,38)->(4,41)->(1,44)->(3,48)->(1,2):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [129, 2, 38, 582, 649, 617, 361, 242, 626, 596, 564, 120, 635, 156, 573] start node= 1 start time= 6 capacity type= 2
(0,2)->(1,6)->(2,11)->(3,14)->(4,17)->(0,20)->(3,23)->(4,26)->(0,29)->(3,32)->(4,35)->(0,38)->(1,42)->(3,46)->(4,49)->(0,2):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [384, 166, 359, 296, 424, 202, 42, 462, 79, 371, 437, 506, 699] start node= 1 start time= 16 capacity type= 2
(1,2)->(3,6)->(2,9)->(3,12)->(1,16)->(2,21)->(3,24)->(0,29)->(2,34)->(3,37)->(0,42)->(1,46)->(4,49)->(1,2):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [992, 672, 352, 161, 197, 135, 938, 330, 555, 589, 846, 366, 175, 658, 693, 569] start node= 1 start time= 47 capacity type= 2
(2,2)->(3,5)->(4,8)->(1,11)->(2,16)->(3,19)->(4,22)->(1,25)->(2,30)->(0,35)->(3,38)->(3,39)->(4,42)->(4,43)->(1,46)->(1,47)->(2,2):1.0
Fix cost= 300 variable cost= 188

artificial: false set: [547, 259, 5, 519, 712, 394, 300, 525, 334, 366, 531, 372, 89, 378] start node= 1 start time= 9 capacity type= 2
(2,0)->(0,5)->(1,9)->(4,12)->(2,16)->(3,19)->(2,22)->(3,25)->(2,28)->(3,31)->(2,34)->(0,39)->(2,44)->(3,47)->(2,0):1.0
Fix cost= 300 variable cost= 200

fix cost+variable cost+commodity cost= 1500+988+16442.0=18930.0
Total time= 39229835
