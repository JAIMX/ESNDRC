number of service arcs=750
number of holding arcs=250

javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:479)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceA_M.runBranchAndPrice(BranchAndPriceA_M.java:278)
	at SNDRCSolver.<init>(SNDRCSolver.java:117)
	at SNDRCSolver.main(SNDRCSolver.java:302)
================ Solution ================
BAP terminated with objective : 46126
Total Number of iterations: 38
Total Number of processed nodes: 5
Total Time spent on master problems: 4233576 Total time spent on pricing problems: 873
Best bound : 45350.12000000001
[3, 10, 12, 14, 19, 23, 26, 33, 34, 35, 40, 46, 51, 61, 78, 86, 94, 100, 102, 103, 109, 119, 121, 122, 130, 139, 141, 148, 156, 167, 172, 180, 196, 199, 201, 202, 209, 213, 221, 222, 226, 229, 230, 238, 243, 256, 264, 267, 283, 288, 295, 302, 313, 315, 326, 330, 336, 337, 343, 355, 359, 363, 368, 376, 384, 389, 392, 397, 398, 406, 412, 417, 421, 425, 430, 433, 439, 445, 450, 456, 459, 461, 466, 470, 480, 483, 486, 487, 488, 491, 498, 499, 509, 517, 522, 526, 529, 541, 548, 555, 567, 572, 585, 594, 604, 606, 617, 623, 625, 630, 641, 643, 657, 663, 684, 690, 702, 706, 713, 719, 726, 734, 745, 747]
The number of service edges used= 124

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [643, 486, 359, 617, 555, 139, 529, 148, 726, 313, 122, 283, 702] start node= 1 start time= 33 capacity type= 2
(4,2)->(3,5)->(2,9)->(1,13)->(4,17)->(0,22)->(4,26)->(3,29)->(1,33)->(3,36)->(0,39)->(4,43)->(0,48)->(4,2):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [229, 456, 488, 713, 745, 172, 109, 141, 433, 466, 498, 19, 51, 26] start node= 1 start time= 22 capacity type= 2
(0,1)->(3,6)->(0,9)->(4,13)->(3,16)->(0,19)->(1,22)->(0,26)->(1,29)->(2,33)->(3,38)->(0,41)->(4,45)->(3,48)->(0,1):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [256, 450, 3, 487, 40, 330, 747, 459, 12, 719, 343, 376, 315, 572, 734] start node= 1 start time= 6 capacity type= 2
(3,0)->(0,3)->(1,6)->(3,9)->(0,12)->(1,15)->(4,19)->(3,22)->(2,26)->(1,30)->(4,34)->(3,37)->(0,40)->(1,43)->(4,47)->(3,0):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [336, 480, 657, 33, 450, 690, 517, 103, 425, 412, 445, 221] start node= 1 start time= 21 capacity type= 2
(3,0)->(0,3)->(4,7)->(2,12)->(3,17)->(1,21)->(2,25)->(3,30)->(0,33)->(1,36)->(4,40)->(2,45)->(3,0):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [288, 35, 548, 326, 295, 202, 267, 461, 14, 630, 470, 406, 23, 541] start node= 1 start time= 45 capacity type= 2
(1,2)->(2,6)->(3,11)->(0,14)->(1,17)->(3,20)->(0,23)->(1,26)->(4,30)->(0,35)->(1,38)->(3,41)->(1,45)->(3,48)->(1,2):1.0
Fix cost= 300 variable cost= 200

artificial: false set: [384, 368, 100, 196, 230, 663, 392, 376, 604, 109, 238, 222] start node= 4 start time= 13 capacity type= 2
(0,0)->(4,4)->(0,9)->(4,13)->(2,18)->(1,22)->(2,26)->(1,30)->(2,34)->(1,38)->(2,42)->(1,46)->(0,0):1.0
Fix cost= 400 variable cost= 200

artificial: false set: [625, 209, 130, 355, 243, 389, 167, 121, 201, 363, 684, 397] start node= 4 start time= 34 capacity type= 2
(1,1)->(2,5)->(1,9)->(2,13)->(1,17)->(0,21)->(4,25)->(0,30)->(4,34)->(2,39)->(1,43)->(2,47)->(1,1):1.0
Fix cost= 400 variable cost= 200

artificial: false set: [417, 594, 226, 706, 213, 439, 585, 522, 509, 302, 398, 430] start node= 4 start time= 6 capacity type= 2
(1,2)->(4,6)->(3,9)->(1,13)->(2,17)->(3,22)->(1,26)->(2,30)->(3,35)->(2,39)->(3,44)->(2,48)->(1,2):1.0
Fix cost= 400 variable cost= 200

artificial: false set: [466, 499, 483, 102, 86, 119, 491, 61, 606, 94, 78, 623] start node= 4 start time= 23 capacity type= 2
(0,2)->(4,6)->(0,11)->(3,16)->(0,19)->(4,23)->(0,28)->(3,33)->(0,36)->(3,41)->(0,44)->(3,49)->(0,2):1.0
Fix cost= 400 variable cost= 200

artificial: false set: [641, 34, 3, 421, 199, 264, 10, 813, 526, 46, 337, 180, 567, 156] start node= 4 start time= 41 capacity type= 2
(0,3)->(1,6)->(0,10)->(1,13)->(1,14)->(3,17)->(2,21)->(3,26)->(1,30)->(0,34)->(1,37)->(4,41)->(0,46)->(1,49)->(0,3):1.0
Fix cost= 400 variable cost= 196

fix cost+variable cost+commodity cost= 3500+1996+40630.0=46126.0
Total time= 36002139
