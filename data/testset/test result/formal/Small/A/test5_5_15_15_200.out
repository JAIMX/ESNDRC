number of service arcs=225
number of holding arcs=75

================ Solution ================
BAP terminated with objective : 32900
Total Number of iterations: 1491
Total Number of processed nodes: 155
Total Time spent on master problems: 74229 Total time spent on pricing problems: 4821
Best bound : 32900.0
[11, 30, 33, 60, 61, 62, 67, 70, 72, 73, 91, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 147, 152, 154, 158, 166, 167, 168, 171, 173, 174, 175, 176, 177, 197, 198, 200, 201, 203, 204, 206, 207, 208, 212, 214, 215, 216, 217, 218, 219, 221, 223, 224]
The number of service edges used= 84

Solution is optimal: true
Columns (only non-zero columns are returned):
artificial: false set: [256, 33, 257, 116, 248, 249, 250] start node= 2 start time= 1 capacity type= 0
(2,1)->(2,2)->(2,3)->(1,8)->(1,9)->(1,10)->(1,11)->(2,1):1.0

artificial: false set: [291, 292, 293, 294, 295, 136, 11, 270] start node= 4 start time= 6 capacity type= 0
(3,0)->(3,1)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(4,11)->(3,0):1.0

artificial: false set: [115, 245, 246, 247, 248, 249, 30] start node= 1 start time= 5 capacity type= 1
(2,0)->(1,5)->(1,6)->(1,7)->(1,8)->(1,9)->(1,10)->(2,0):1.0

artificial: false set: [240, 177, 241, 242, 218, 108] start node= 1 start time= 0 capacity type= 1
(1,0)->(1,1)->(1,2)->(1,3)->(2,8)->(3,12)->(1,0):1.0

artificial: false set: [166, 283, 219, 284, 109, 270] start node= 1 start time= 4 capacity type= 1
(3,0)->(3,1)->(1,4)->(2,9)->(3,13)->(3,14)->(3,0):1.0

artificial: false set: [245, 167, 221, 270, 271, 111] start node= 1 start time= 5 capacity type= 1
(3,0)->(3,1)->(3,2)->(1,5)->(1,6)->(2,11)->(3,0):4.0

artificial: false set: [224, 114, 246, 247, 168, 248] start node= 1 start time= 6 capacity type= 1
(3,3)->(1,6)->(1,7)->(1,8)->(1,9)->(2,14)->(3,3):2.0

artificial: false set: [212, 117, 249, 250, 171, 251] start node= 1 start time= 9 capacity type= 1
(2,2)->(3,6)->(1,9)->(1,10)->(1,11)->(1,12)->(2,2):2.0

artificial: false set: [214, 119, 251, 252, 173, 253] start node= 1 start time= 11 capacity type= 1
(2,4)->(3,8)->(1,11)->(1,12)->(1,13)->(1,14)->(2,4):3.0

artificial: false set: [215, 105, 252, 253, 174, 254] start node= 1 start time= 12 capacity type= 1
(1,0)->(2,5)->(3,9)->(1,12)->(1,13)->(1,14)->(1,0):1.0

artificial: false set: [240, 216, 106, 253, 254, 175] start node= 1 start time= 13 capacity type= 1
(1,0)->(1,1)->(2,6)->(3,10)->(1,13)->(1,14)->(1,0):2.0

artificial: false set: [176, 240, 241, 217, 107, 254] start node= 1 start time= 14 capacity type= 1
(1,0)->(1,1)->(1,2)->(2,7)->(3,11)->(1,14)->(1,0):1.0

artificial: false set: [272, 113, 246, 247, 168, 223] start node= 1 start time= 6 capacity type= 1
(3,2)->(3,3)->(1,6)->(1,7)->(1,8)->(2,13)->(3,2):1.0

artificial: false set: [288, 289, 130, 285, 286, 95, 287] start node= 4 start time= 0 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(4,4)->(4,5)->(0,10)->(4,0):1.0

artificial: false set: [288, 97, 289, 290, 291, 132, 287] start node= 4 start time= 2 capacity type= 1
(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(4,7)->(0,12)->(4,2):1.0

artificial: false set: [288, 289, 98, 290, 291, 292, 133] start node= 4 start time= 3 capacity type= 1
(4,3)->(4,4)->(4,5)->(4,6)->(4,7)->(4,8)->(0,13)->(4,3):1.0

artificial: false set: [290, 291, 100, 292, 293, 294, 120] start node= 4 start time= 5 capacity type= 1
(0,0)->(4,5)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(0,0):2.0

artificial: false set: [291, 292, 101, 293, 294, 295, 121] start node= 4 start time= 6 capacity type= 1
(0,1)->(4,6)->(4,7)->(4,8)->(4,9)->(4,10)->(4,11)->(0,1):1.0

artificial: false set: [292, 293, 102, 294, 295, 296, 122] start node= 4 start time= 7 capacity type= 1
(0,2)->(4,7)->(4,8)->(4,9)->(4,10)->(4,11)->(4,12)->(0,2):1.0

artificial: false set: [293, 294, 103, 295, 296, 297, 123] start node= 4 start time= 8 capacity type= 1
(0,3)->(4,8)->(4,9)->(4,10)->(4,11)->(4,12)->(4,13)->(0,3):2.0

artificial: false set: [294, 295, 104, 296, 297, 298, 124] start node= 4 start time= 9 capacity type= 1
(0,4)->(4,9)->(4,10)->(4,11)->(4,12)->(4,13)->(4,14)->(0,4):1.0

artificial: false set: [296, 297, 298, 91, 299, 285, 126] start node= 4 start time= 11 capacity type= 1
(4,0)->(4,1)->(0,6)->(4,11)->(4,12)->(4,13)->(4,14)->(4,0):1.0

artificial: false set: [128, 298, 299, 93, 285, 286, 287] start node= 4 start time= 13 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(0,8)->(4,13)->(4,14)->(4,0):2.0

artificial: false set: [292, 72, 137, 203] start node= 4 start time= 7 capacity type= 1
(3,2)->(4,7)->(4,8)->(1,12)->(3,2):2.0

artificial: false set: [293, 73, 138, 204] start node= 4 start time= 9 capacity type= 1
(3,3)->(4,8)->(4,9)->(1,13)->(3,3):1.0

artificial: false set: [295, 140, 60, 206] start node= 4 start time= 10 capacity type= 1
(1,0)->(3,5)->(4,10)->(4,11)->(1,0):2.0

artificial: false set: [240, 141, 61, 206] start node= 4 start time= 11 capacity type= 1
(1,0)->(1,1)->(3,6)->(4,11)->(1,0):1.0

artificial: false set: [147, 67, 198, 287] start node= 4 start time= 2 capacity type= 1
(4,2)->(4,3)->(1,7)->(3,12)->(4,2):2.0

artificial: false set: [70, 135, 200, 249] start node= 4 start time= 5 capacity type= 1
(3,0)->(4,5)->(1,9)->(1,10)->(3,0):2.0

artificial: false set: [70, 136, 201, 270] start node= 4 start time= 6 capacity type= 1
(3,0)->(3,1)->(4,6)->(1,10)->(3,0):1.0

artificial: false set: [241, 295, 152, 296, 125, 207] start node= 4 start time= 10 capacity type= 1
(1,1)->(1,2)->(0,5)->(4,10)->(4,11)->(4,12)->(1,1):1.0

artificial: false set: [208, 242, 243, 297, 154, 127] start node= 4 start time= 13 capacity type= 1
(1,2)->(1,3)->(1,4)->(0,7)->(4,12)->(4,13)->(1,2):1.0

artificial: false set: [208, 297, 142, 62] start node= 4 start time= 12 capacity type= 1
(1,2)->(3,7)->(4,12)->(4,13)->(1,2):2.0

artificial: false set: [131, 197, 246, 247, 286, 158] start node= 4 start time= 2 capacity type= 1
(4,1)->(4,2)->(1,6)->(1,7)->(1,8)->(0,11)->(4,1):1.0

Total time= 138936
