Sovle for test8_7_30_30_200A.txt
Colmun limit=1000
number of service arcs=900
number of holding arcs=210

root node bound= 43439.44000000002
Before intensification, we have 17218 columns
After pick up:
==================Intensification===================
We add 500 columns to cplex.
Tried aggregator 3 times.
MIP Presolve eliminated 19315 rows and 19349 columns.
Aggregator did 3442 substitutions.
Reduced MIP has 20584 rows, 66484 columns, and 204495 nonzeros.
Reduced MIP has 4 binaries, 496 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.22 sec. (128.14 ticks)
Probing time = 0.08 sec. (2.18 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 310 rows and 1059 columns.
Reduced MIP has 20274 rows, 65425 columns, and 201281 nonzeros.
Reduced MIP has 4 binaries, 496 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.16 sec. (78.89 ticks)
Probing time = 0.10 sec. (2.14 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 13.00 sec. (3899.69 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    43467.4400    45                  43467.4400    21453         
      0     0    43495.1596    47                   Cuts: 898    25445         
      0     0    43527.9296    39                   Cuts: 950    28519         
      0     0    43544.3252    49                   Cuts: 889    31043         
*     0+    0                        67739.0000    43544.3252            35.72%
      0     0    43557.2596    48    67739.0000 MIRcuts: 1160    34000   35.70%
*     0+    0                        51518.0000    43557.2596            15.45%
*     0+    0                        49002.0000    43557.2596            11.11%
*     0+    0                        48988.0000    43557.2596            11.09%
*     0+    0                        48691.0000    43557.2596            10.54%
*     0+    0                        48688.0000    43557.2596            10.54%
      0     0    43568.9792    50    48688.0000    Cuts: 1197    36661   10.51%
      0     0    43579.6998    52    48688.0000 MIRcuts: 1035    38779   10.49%
      0     0    43592.0431    51    48688.0000    Cuts: 1211    40830   10.47%
      0     0    43601.3544    51    48688.0000 MIRcuts: 1193    43787   10.45%
      0     0    43616.4849    57    48688.0000 MIRcuts: 1214    46887   10.42%
      0     0    43623.9475    48    48688.0000 MIRcuts: 1425    48638   10.40%
      0     0    43638.3053    52    48688.0000 MIRcuts: 1237    51817   10.37%
      0     0    43641.8879    47    48688.0000 MIRcuts: 1616    53667   10.36%
      0     0    43644.1573    47    48688.0000 MIRcuts: 1412    55632   10.36%
Heuristic still looking.
      0     2    43644.1573    47    48688.0000    43644.1573    55632   10.36%
Elapsed time = 162.59 sec. (82422.92 ticks, tree = 0.00 MB, solutions = 6)
      1     3    43646.2422    51    48688.0000    43644.1573    57752   10.36%
      2     4    43645.8276    45    48688.0000    43644.1573    59627   10.36%
      3     5    43650.6280    49    48688.0000    43645.8276    61554   10.36%
      4     6    43654.7297    45    48688.0000    43645.8276    64347   10.36%
      7     9    43803.8078    47    48688.0000    43645.8276    84963   10.36%
      9    11    43654.7297    43    48688.0000    43645.8276    91061   10.36%
     10    12    43660.0345    48    48688.0000    43645.8663   127241   10.36%
     11    13    43676.9853    49    48688.0000    43645.8663   169136   10.36%
*    13+   13                        47039.0000    43645.8663             7.21%
*    13+   13                        46976.0000    43645.8663             7.09%
*    13+   13                        46148.0000    43645.8663             5.42%
*    13+   13                        46019.0000    43645.8663             5.16%
     13    15    43660.2906    53    46019.0000    43645.8663   244645    5.16%
     14    16    43658.5324    47    46019.0000    43645.9486   257846    5.16%
Elapsed time = 274.89 sec. (129566.62 ticks, tree = 0.00 MB, solutions = 10)
     18    20    43680.6979    45    46019.0000    43645.9486   302508    5.16%
     19    21    43672.1555    46    46019.0000    43650.7079   306724    5.15%
     23    25    43670.0568    45    46019.0000    43650.7079   319991    5.15%
     25    27    43683.5008    50    46019.0000    43650.7079   330352    5.15%
     29    31    43682.5829    51    46019.0000    43650.7079   341802    5.15%
     33    35    43695.9395    44    46019.0000    43650.7079   356096    5.15%
     37    39    43711.4380    44    46019.0000    43650.7079   372211    5.15%
     45    47    43685.8824    43    46019.0000    43650.7079   393099    5.15%
     46    48    43703.7143    39    46019.0000    43650.7079   396453    5.15%
     47    49    43723.1155    47    46019.0000    43650.7079   402451    5.15%
Elapsed time = 391.78 sec. (169758.51 ticks, tree = 0.00 MB, solutions = 10)
     48    50    43728.0319    50    46019.0000    43650.7079   410089    5.15%
     51    53    43714.5032    48    46019.0000    43650.7079   417955    5.15%
     52    54    43808.2561    42    46019.0000    43650.7079   426727    5.15%
     56    58    43812.9522    40    46019.0000    43650.7079   443013    5.15%
     60    62    43815.9494    40    46019.0000    43650.7079   462547    5.15%
     64    66    43820.7952    37    46019.0000    43650.7079   479105    5.15%
     69    71    43900.3564    40    46019.0000    43650.7079   507183    5.15%
     73    75    43948.8367    35    46019.0000    43650.7079   522367    5.15%
     77    79    43959.2133    39    46019.0000    43650.7079   539106    5.15%
     81    83    43961.2642    33    46019.0000    43650.7079   552671    5.15%
Elapsed time = 572.61 sec. (220054.76 ticks, tree = 0.00 MB, solutions = 10)
    101   103    43967.0640    30    46019.0000    43650.7079   617912    5.15%
    105   107    43982.9037    26    46019.0000    43650.7079   644671    5.15%
    109   111    43985.3523    31    46019.0000    43650.7079   660536    5.15%
*   114+  114                        45877.0000    43650.7079             4.85%
    114   116    44157.2826    23    45877.0000    43650.7079   685207    4.85%
*   116+  116                        45856.0000    43650.7079             4.81%
*   116+  116                        45667.0000    43650.7079             4.42%
    116   118    44329.8125    31    45667.0000    43650.7079   693361    4.42%
*   123+  123                        45345.0000    43650.7079             3.74%
*   123+  123                        45016.0000    43650.7079             3.03%
    124   126    44180.1697    31    45016.0000    43650.7079   722444    3.03%
    128   130    44182.7157    30    45016.0000    43650.7079   739017    3.03%
    132   134    44188.1374    26    45016.0000    43650.7079   753010    3.03%
    136   138    44198.8470    28    45016.0000    43650.7079   767599    3.03%
    140   142    44232.0581    28    45016.0000    43650.7079   779331    3.03%
Elapsed time = 762.00 sec. (265222.86 ticks, tree = 0.41 MB, solutions = 10)
*   224+  216                        44445.0000    43650.7079             1.79%
    237   203    43694.6468    42    44445.0000    43650.7079   977346    1.79%
    283   243    43663.8967    46    44445.0000    43650.7079  1100964    1.79%
    325   257    43711.0860    49    44445.0000    43650.7079  1153677    1.79%
    326   258    43703.9393    46    44445.0000    43650.7079  1161714    1.79%
    328   260    43702.2582    39    44445.0000    43650.7079  1174322    1.79%
    330   262    43867.3777    48    44445.0000    43650.7079  1192697    1.79%
    334   266    43713.4995    46    44445.0000    43650.7079  1217602    1.79%
    338   270    43868.2849    44    44445.0000    43650.7079  1253476    1.79%
    346   278    43684.9069    60    44445.0000    43650.7079  1304306    1.79%
    376   290    43721.6739    44    44445.0000    43650.7079  1382854    1.79%
Elapsed time = 1064.00 sec. (332303.33 ticks, tree = 7.45 MB, solutions = 17)
    379   293    43691.2055    55    44445.0000    43650.7079  1388209    1.79%
    383   295    43696.3642    51    44445.0000    43650.7079  1396832    1.79%
    387   297    43704.2233    58    44445.0000    43650.7079  1402453    1.79%
    391   301    43703.5540    49    44445.0000    43650.7079  1409957    1.79%
    395   303    43731.1058    44    44445.0000    43650.7079  1418606    1.79%
    434   334    43821.0455    35    44445.0000    43657.2923  1481108    1.77%
    435   335    43863.0501    40    44445.0000    43657.2923  1483555    1.77%
    436   336    44154.5323    25    44445.0000    43657.2923  1487849    1.77%
    440   340    44007.3154    22    44445.0000    43657.2923  1498952    1.77%
    445   345    43794.0297    43    44445.0000    43657.2923  1510063    1.77%
Elapsed time = 1205.07 sec. (374834.65 ticks, tree = 14.14 MB, solutions = 17)
    446   346    43889.7713    30    44445.0000    43657.2923  1511622    1.77%
    458   358    43967.3743    31    44445.0000    43657.2923  1527820    1.77%
    466   366    44018.0725    29    44445.0000    43657.2923  1540269    1.77%
    474   374    43943.2290    29    44445.0000    43657.2923  1549012    1.77%
    482   382    44079.0107    27    44445.0000    43657.2923  1567939    1.77%
    511   409    43882.5853    34    44445.0000    43657.2923  1596051    1.77%
    513   411    44199.4997    20    44445.0000    43657.2923  1598775    1.77%
    517   415    44202.8015    22    44445.0000    43657.2923  1602334    1.77%
    518   416    44315.8351    15    44445.0000    43657.2923  1603508    1.77%
    521   419    44344.6098    21    44445.0000    43657.2923  1613013    1.77%
Elapsed time = 1320.93 sec. (409910.55 ticks, tree = 32.52 MB, solutions = 17)
    529   425    44333.0099    20    44445.0000    43657.2923  1621475    1.77%
    533   429    44410.6285    17    44445.0000    43657.2923  1627114    1.77%
    548   444    44015.8681    23    44445.0000    43657.2923  1633106    1.77%
    556   450    43942.1003    23    44445.0000    43657.2923  1640343    1.77%
    560   454    44028.1430    23    44445.0000    43657.2923  1646776    1.77%
    564   458    43949.7585    25    44445.0000    43657.2923  1650308    1.77%
    568   462    44414.8563    23    44445.0000    43657.2923  1652960    1.77%
    572   464    43955.3528    23    44445.0000    43657.2923  1655640    1.77%
    580   470    43957.8984    24    44445.0000    43657.2923  1664201    1.77%
    588   476    43959.3129    20    44445.0000    43657.2923  1666267    1.77%
Elapsed time = 1397.56 sec. (433204.21 ticks, tree = 32.52 MB, solutions = 17)
    592   480    44058.0427    21    44445.0000    43657.2923  1668410    1.77%
    604   486    44009.2927    19    44445.0000    43657.2923  1679024    1.77%
    629   500    43705.8916    43    44445.0000    43662.2810  1709825    1.76%
    635   506    44044.6649    20    44445.0000    43662.2810  1712309    1.76%
    639   508    44300.6706    18    44445.0000    43662.2810  1716042    1.76%
    647   516    44248.1065    19    44445.0000    43662.2810  1724753    1.76%
    648   517    44232.2082    15    44445.0000    43662.2810  1727185    1.76%
    661   530    43737.6817    43    44445.0000    43662.2810  1733752    1.76%
    669   534    43742.5186    42    44445.0000    43662.2810  1740367    1.76%
    677   540    43778.2253    41    44445.0000    43662.2810  1747757    1.76%
Elapsed time = 1534.21 sec. (472434.15 ticks, tree = 56.19 MB, solutions = 17)
    829   591    43780.1536    38    44445.0000    43662.2810  1803477    1.76%
    830   592    43667.8981    56    44445.0000    43662.2810  1806133    1.76%
    834   596    43669.2069    52    44445.0000    43662.2810  1807557    1.76%
    842   602    43669.4961    53    44445.0000    43662.2810  1811200    1.76%
    849   605    43816.0682    40    44445.0000    43662.2810  1811488    1.76%
    878   624    43675.8880    53    44445.0000    43662.2810  1826202    1.76%
    886   630    43677.9189    53    44445.0000    43662.2810  1833298    1.76%
    890   632    43681.9305    55    44445.0000    43662.2810  1836569    1.76%
    898   636    43713.0233    48    44445.0000    43662.2810  1839836    1.76%
    973   683    44086.3121    32    44445.0000    43662.2810  1878176    1.76%
Elapsed time = 1691.83 sec. (518187.15 ticks, tree = 95.49 MB, solutions = 17)
    988   698    44193.9705    43    44445.0000    43662.2810  1898919    1.76%
    990   700    43718.4737    48    44445.0000    43662.2810  1899470    1.76%
   1016   726    43973.5278    44    44445.0000    43662.2810  1927622    1.76%
   1024   734    44061.0026    43    44445.0000    43662.2810  1938634    1.76%
   1099   799    43807.9335    46    44445.0000    43662.2810  1975804    1.76%
   1107   807    43832.7150    37    44445.0000    43662.2810  1985182    1.76%
   1110   808    43834.7587    34    44445.0000    43662.2810  1985980    1.76%
   1134   828    43848.0648    34    44445.0000    43662.2810  2001378    1.76%
   1199   886    44285.6915    23    44445.0000    43663.8967  2061585    1.76%
   1223   906    44332.6128    22    44445.0000    43663.8967  2079442    1.76%
Elapsed time = 1941.52 sec. (592828.15 ticks, tree = 144.74 MB, solutions = 17)
   1258   935    44270.2859    26    44445.0000    43663.8967  2094738    1.76%
   1263   938    43685.3334    51    44445.0000    43663.8967  2100719    1.76%
   1265   940    43722.4088    42    44445.0000    43663.8967  2103115    1.76%
   1289   962    43741.1801    43    44445.0000    43663.8967  2116425    1.76%
   1358  1019    43797.9302    37    44445.0000    43663.8967  2157543    1.76%
   1372  1029    43775.8554    39    44445.0000    43663.8967  2167338    1.76%
   1382  1037    43833.7571    38    44445.0000    43663.8967  2175419    1.76%
   1390  1045    43869.5885    37    44445.0000    43663.8967  2183113    1.76%
   1400  1053    43793.7307    39    44445.0000    43663.8967  2192183    1.76%
   1424  1075    43803.7563    33    44445.0000    43663.8967  2204468    1.76%
Elapsed time = 2159.66 sec. (657138.68 ticks, tree = 154.94 MB, solutions = 17)
   1468  1115    43816.5738    36    44445.0000    43663.8967  2222447    1.76%
   1525  1164    43739.5364    49    44445.0000    43663.8967  2261762    1.76%
   1545  1180    43709.8599    44    44445.0000    43663.8967  2271141    1.76%
   1561  1192    43729.1168    45    44445.0000    43663.8967  2279488    1.76%
   1569  1200    43751.3754    44    44445.0000    43663.8967  2288370    1.76%
   1589  1218    43760.9300    45    44445.0000    43663.8967  2301604    1.76%
   1645  1266    43766.6488    38    44445.0000    43663.8967  2336057    1.76%
   1673  1292    43814.9237    35    44445.0000    43663.8967  2352415    1.76%
   1699  1318    43881.9054    38    44445.0000    43663.8967  2369329    1.76%
   1715  1332    43897.8360    37    44445.0000    43663.8967  2382529    1.76%
Elapsed time = 2321.93 sec. (706721.57 ticks, tree = 158.92 MB, solutions = 17)
   1748  1359    44410.3852    23    44445.0000    43663.8967  2399748    1.76%
   1767  1378    43987.3218    31    44445.0000    43664.0998  2413496    1.76%
   1784  1391    43942.0911    34    44445.0000    43664.0998  2420539    1.76%
   1796  1403    44064.3190    40    44445.0000    43664.0998  2438441    1.76%
   1808  1413    44103.8754    38    44445.0000    43664.0998  2446656    1.76%
   1820  1425    44336.1623    29    44445.0000    43664.0998  2458162    1.76%
   1876  1469    44362.5656    26    44445.0000    43664.0998  2480797    1.76%
   1904  1490    44396.6585    27    44445.0000    43664.0998  2500971    1.76%
   1925  1507    43805.0909    40    44445.0000    43664.0998  2520481    1.76%
   1945  1525    43811.9907    38    44445.0000    43664.0998  2530332    1.76%
Elapsed time = 2493.92 sec. (755573.41 ticks, tree = 160.62 MB, solutions = 17)
   1977  1553    43851.2228    46    44445.0000    43664.0998  2550529    1.76%
   1992  1564    43769.4221    45    44445.0000    43664.0998  2560843    1.76%
   2018  1586    44069.8646    37    44445.0000    43664.0998  2580229    1.76%
   2030  1598    44235.9490    34    44445.0000    43664.0998  2587663    1.76%
   2042  1610    44287.6497    31    44445.0000    43664.0998  2598970    1.76%
   2054  1622    44309.7270    34    44445.0000    43664.0998  2612060    1.76%
   2071  1635    43960.8007    33    44445.0000    43664.0998  2619818    1.76%
   2091  1653    43986.7639    28    44445.0000    43664.0998  2636583    1.76%
   2118  1678    44380.9370    31    44445.0000    43664.0998  2652653    1.76%
   2178  1728    44135.4880    37    44445.0000    43664.0998  2699412    1.76%
Elapsed time = 2679.44 sec. (811626.77 ticks, tree = 168.98 MB, solutions = 17)
   2183  1731    44162.0292    39    44445.0000    43668.0380  2706230    1.75%
   2199  1745    44170.1877    42    44445.0000    43668.0380  2720349    1.75%
   2207  1751    44188.2977    38    44445.0000    43668.0380  2726613    1.75%
   2215  1757    44224.3414    39    44445.0000    43668.0380  2732137    1.75%
   2227  1761    44380.0337    36    44445.0000    43668.0380  2740190    1.75%
   2255  1777    44440.5244    38    44445.0000    43668.0380  2749967    1.75%
   2295  1795    44075.4729    56    44445.0000    43668.0380  2768746    1.75%
   2335  1824    44089.6365    48    44445.0000    43668.0380  2804230    1.75%
   2375  1864    44121.5292    47    44445.0000    43668.0380  2842781    1.75%
   2416  1897    43700.5043    48    44445.0000    43700.5043  2942539    1.68%
Elapsed time = 3138.11 sec. (1033432.29 ticks, tree = 256.98 MB, solutions = 17)
   2419  1899    43739.1951    49    44445.0000    43700.5043  2948640    1.68%
   2420  1900    43739.2580    51    44445.0000    43700.5043  2949371    1.68%
   2421  1900    43702.3813    54    44445.0000    43700.5043  2952003    1.68%
   2423  1901    44100.7945    42    44445.0000    43700.5043  2959839    1.68%
   2424  1901    43719.2209    49    44445.0000    43700.5043  2968086    1.68%
   2425  1902    43822.8869    49    44445.0000    43700.5043  2982768    1.68%
   2428  1904    43702.6086    50    44445.0000    43700.5043  3007367    1.68%
   2431  1905    43886.2285    44    44445.0000    43700.5043  3052195    1.68%
   2436  1908    43705.0885    53    44445.0000    43700.5043  3098264    1.68%
   2440  1910    43794.0979    40    44445.0000    43700.5043  3122376    1.68%
Elapsed time = 3331.28 sec. (1118501.84 ticks, tree = 255.49 MB, solutions = 17)
   2445  1912    43707.1499    52    44445.0000    43700.5043  3136758    1.68%
   2446  1913    43769.1264    48    44445.0000    43700.5043  3144210    1.68%
   2450  1916    43763.4880    43    44445.0000    43700.5043  3167602    1.68%
   2454  1918    44136.7861    41    44445.0000    43700.5043  3216562    1.68%
   2456  1920    43721.3655    44    44445.0000    43700.5043  3240894    1.68%
   2461  1922    43787.2489    44    44445.0000    43700.5043  3251906    1.68%
   2466  1925    44372.8476    28    44445.0000    43700.5043  3272977    1.68%
   2476  1929    43779.7116    43    44445.0000    43700.5043  3294017    1.68%
   2490  1935    43788.5530    44    44445.0000    43700.5043  3325480    1.68%
   2492  1936    44189.2183    40    44445.0000    43700.5043  3333164    1.68%
Elapsed time = 3681.96 sec. (1236153.22 ticks, tree = 252.10 MB, solutions = 17)
   2514  1946    43797.0590    44    44445.0000    43700.5043  3409103    1.68%
   2530  1933    43757.2192    42    44445.0000    43700.5043  3425655    1.68%
   2534  1932    43817.3964    42    44445.0000    43700.5043  3433712    1.68%
   2542  1916    43760.7602    44    44445.0000    43700.5043  3448098    1.68%
   2546  1918    43782.8944    41    44445.0000    43700.5043  3461265    1.68%
   2562  1909    43785.1308    40    44445.0000    43700.5043  3489354    1.68%
   2595  1895    43852.7598    39    44445.0000    43700.5043  3522146    1.68%
   2601  1896    43764.7192    38    44445.0000    43700.5043  3528036    1.68%
   2605  1897    43784.0174    41    44445.0000    43700.5043  3543126    1.68%
   2613  1902    43810.6056    39    44445.0000    43700.5043  3557329    1.68%
Elapsed time = 3890.55 sec. (1300140.70 ticks, tree = 238.13 MB, solutions = 17)
   2621  1907    43831.0289    35    44445.0000    43700.5043  3568018    1.68%
   2629  1899    43861.5776    40    44445.0000    43700.5043  3581858    1.68%
   2677  1893    43847.3708    44    44445.0000    43700.5043  3623886    1.68%
   2693  1898    43853.5865    40    44445.0000    43700.5043  3639911    1.68%
   2701  1902    43933.9653    43    44445.0000    43700.5043  3650005    1.68%
   2709  1904    43876.6329    46    44445.0000    43700.5043  3656901    1.68%
   2716  1909    43839.2461    33    44445.0000    43700.5043  3669331    1.68%
   2724  1914    43867.0793    39    44445.0000    43700.5043  3682568    1.68%
   2759  1880    43883.3944    38    44445.0000    43716.6115  3709633    1.64%
   2763  1882    43919.3225    34    44445.0000    43716.6115  3717850    1.64%
Elapsed time = 4089.94 sec. (1361007.80 ticks, tree = 251.11 MB, solutions = 17)
   2771  1888    44055.8528    33    44445.0000    43716.6115  3736512    1.64%
   2779  1894    44055.2344    29    44445.0000    43716.6115  3752586    1.64%
   2787  1898    43925.3742    35    44445.0000    43716.6115  3762632    1.64%
   2791  1901    44024.4089    29    44445.0000    43716.6115  3772828    1.64%
   2826  1923    43778.6245    43    44445.0000    43716.6115  3820432    1.64%
   2834  1930    43875.8906    41    44445.0000    43716.6115  3826791    1.64%
   2847  1936    44228.3543    38    44445.0000    43716.6115  3842875    1.64%
   2851  1939    44223.5871    37    44445.0000    43716.6115  3848550    1.64%
   2863  1948    44299.2314    40    44445.0000    43716.6115  3865452    1.64%
   2875  1950    44232.9298    37    44445.0000    43716.6115  3877985    1.64%
Elapsed time = 4283.93 sec. (1419766.18 ticks, tree = 261.10 MB, solutions = 17)
   2887  1955    44342.7972    37    44445.0000    43716.6115  3896750    1.64%
   2915  1971    43801.7103    38    44445.0000    43716.6115  3923093    1.64%
   2925  1972    44428.1571    32    44445.0000    43716.6115  3932729    1.64%
   2931  1976    43881.3448    33    44445.0000    43716.6115  3942969    1.64%
   2947  1969    43818.0756    34    44445.0000    43716.6115  3955658    1.64%
   2959  1974    44082.6839    35    44445.0000    43716.6115  3964652    1.64%
   2967  1978    44082.1634    35    44445.0000    43716.6115  3971224    1.64%
   2991  1971    43841.7632    32    44445.0000    43716.6115  3986493    1.64%
   3051  1940    43736.3433    49    44445.0000    43716.6115  4021533    1.64%
   3062  1947    43991.6452    34    44445.0000    43716.6115  4030324    1.64%
Elapsed time = 4454.61 sec. (1470666.07 ticks, tree = 286.05 MB, solutions = 17)
   3071  1953    43769.3982    46    44445.0000    43716.6115  4043928    1.64%
   3086  1958    43859.3579    35    44445.0000    43716.6115  4060636    1.64%
   3102  1965    43860.0543    36    44445.0000    43716.6115  4074257    1.64%
   3126  1973    43860.7745    30    44445.0000    43716.6115  4096180    1.64%
   3160  1980    43823.3773    42    44445.0000    43716.6115  4118302    1.64%
   3168  1985    43837.6808    43    44445.0000    43716.6115  4123632    1.64%
   3180  1991    43847.2201    42    44445.0000    43716.6115  4132086    1.64%
   3181  1992    43873.8610    31    44445.0000    43716.6115  4132330    1.64%
   3227  2009    43947.9926    43    44445.0000    43716.6115  4193366    1.64%
   3254  2024    43860.0302    40    44445.0000    43716.6115  4204231    1.64%
Elapsed time = 4715.54 sec. (1548387.72 ticks, tree = 315.13 MB, solutions = 17)
   3266  2031    43863.0086    44    44445.0000    43716.6115  4218655    1.64%
   3283  2040    43959.9130    37    44445.0000    43716.6115  4229973    1.64%
   3286  2042    43906.8450    47    44445.0000    43716.6115  4239200    1.64%
   3292  2041    43894.5464    29    44445.0000    43716.6115  4242766    1.64%
   3307  2048    43994.3622    29    44445.0000    43716.6115  4258368    1.64%
   3323  2047    43996.4256    28    44445.0000    43716.6115  4270264    1.64%
   3335  2049    44077.6237    24    44445.0000    43716.6115  4282791    1.64%
   3381  2053    44025.8592    28    44445.0000    43716.6115  4312199    1.64%
   3391  2058    44231.3455    34    44445.0000    43716.6115  4324659    1.64%
   3397  2059    43906.3022    32    44445.0000    43716.6115  4329958    1.64%
Elapsed time = 4943.27 sec. (1614878.02 ticks, tree = 337.39 MB, solutions = 17)
   3429  2077    43931.4597    34    44445.0000    43716.6115  4344814    1.64%
   3452  2087    44235.1420    24    44445.0000    43716.6115  4354747    1.64%
   3471  2094    44338.0647    33    44445.0000    43716.6115  4377162    1.64%
   3531  2095    44244.4859    40    44445.0000    43716.6115  4402572    1.64%
   3555  2107    44409.1732    28    44445.0000    43716.6115  4416365    1.64%
   3571  2108    44265.8683    37    44445.0000    43716.6115  4427408    1.64%
   3591  2117    44371.5961    23    44445.0000    43716.6115  4446000    1.64%
   3607  2120    44357.9712    35    44445.0000    43716.6115  4457532    1.64%
   3623  2128    44270.3815    29    44445.0000    43716.6115  4467832    1.64%
   3631  2131    44271.5778    35    44445.0000    43716.6115  4476863    1.64%
Elapsed time = 5106.55 sec. (1663671.77 ticks, tree = 358.06 MB, solutions = 17)
   3643  2134    44272.4508    33    44445.0000    43716.6115  4484195    1.64%
   3663  2135    44399.1203    22    44445.0000    43716.6115  4496717    1.64%
   3727  2137    43765.8368    48    44445.0000    43716.6115  4533989    1.64%
   3735  2140    43765.8644    47    44445.0000    43716.6115  4535470    1.64%
   3747  2149    43781.2926    46    44445.0000    43716.6115  4545152    1.64%
   3759  2154    43796.4226    52    44445.0000    43716.6115  4550506    1.64%
   3779  2163    43802.7936    49    44445.0000    43716.6115  4559193    1.64%
   3811  2178    43816.5523    48    44445.0000    43716.6115  4579480    1.64%
   3819  2183    43864.9126    38    44445.0000    43716.6115  4586922    1.64%
   3902  2212    43856.0862    30    44445.0000    43720.9427  4640818    1.63%
Elapsed time = 5303.26 sec. (1723768.53 ticks, tree = 419.46 MB, solutions = 17)
   3903  2213    43825.9434    42    44445.0000    43720.9427  4642212    1.63%
   3910  2217    43859.6780    34    44445.0000    43720.9427  4648351    1.63%
   3926  2227    44320.2620    30    44445.0000    43720.9427  4665751    1.63%
   3951  2241    44083.4968    39    44445.0000    43720.9427  4682532    1.63%
   3963  2245    43963.9941    33    44445.0000    43720.9427  4697232    1.63%
   4001  2259    43830.9840    42    44445.0000    43720.9427  4725607    1.63%
   4009  2264    43854.0928    44    44445.0000    43720.9427  4738074    1.63%
   4028  2270    44074.8576    32    44445.0000    43720.9427  4751785    1.63%
   4036  2272    44282.2446    37    44445.0000    43720.9427  4760128    1.63%
   4068  2285    44269.7905    34    44445.0000    43720.9427  4781325    1.63%
Elapsed time = 5550.44 sec. (1798119.52 ticks, tree = 434.62 MB, solutions = 17)
   4080  2289    43988.7169    31    44445.0000    43720.9427  4800432    1.63%
   4092  2296    44172.4192    37    44445.0000    43720.9427  4814724    1.63%
   4099  2301    44094.3398    40    44445.0000    43720.9427  4827807    1.63%
   4111  2308    43916.1607    36    44445.0000    43720.9427  4837145    1.63%
   4119  2315    43940.0870    34    44445.0000    43720.9427  4852998    1.63%
   4184  2354    43998.3129    36    44445.0000    43721.0295  4892748    1.63%
   4196  2359    44123.4457    39    44445.0000    43721.0295  4909945    1.63%
   4212  2368    44142.8569    39    44445.0000    43721.0295  4926813    1.63%
   4232  2375    44223.6274    35    44445.0000    43721.0295  4944156    1.63%
   4248  2382    44133.0799    28    44445.0000    43721.0295  4964749    1.63%
Elapsed time = 5750.62 sec. (1857569.29 ticks, tree = 469.55 MB, solutions = 17)
   4296  2391    44291.2475    39    44445.0000    43721.0295  4996231    1.63%
   4316  2399    44299.5134    29    44445.0000    43721.0295  5007533    1.63%
   4332  2406    44383.4395    33    44445.0000    43721.0295  5017138    1.63%
   4391  2415    44417.9686    25    44445.0000    43721.7943  5057906    1.63%
   4403  2418    44408.5279    33    44445.0000    43721.7943  5073479    1.63%
   4411  2421    44430.4883    27    44445.0000    43721.7943  5082370    1.63%
   4426  2420    43775.4912    56    44445.0000    43721.7943  5092457    1.63%
   4446  2427    43783.2371    49    44445.0000    43721.7943  5101606    1.63%
   4466  2427    43785.4814    48    44445.0000    43721.7943  5113853    1.63%
   4482  2428    43790.7138    51    44445.0000    43721.7943  5122169    1.63%
Elapsed time = 5999.03 sec. (1931719.39 ticks, tree = 497.92 MB, solutions = 17)
   4498  2430    43941.1679    43    44445.0000    43721.7943  5137598    1.63%
   4582  2432    43819.5965    50    44445.0000    43721.7943  5181014    1.63%
   4591  2438    43844.0951    51    44445.0000    43721.7943  5193152    1.63%
   4606  2440    43845.1375    46    44445.0000    43721.7943  5202583    1.63%
   4624  2449    43793.5628    46    44445.0000    43721.7943  5217960    1.63%
   4640  2459    43821.4018    52    44445.0000    43721.7943  5226765    1.63%
   4648  2464    43842.6748    41    44445.0000    43721.7943  5237172    1.63%
   4660  2473    43896.5810    37    44445.0000    43721.7943  5244900    1.63%
   4668  2478    43899.4246    42    44445.0000    43721.7943  5249906    1.63%
   4672  2479    43914.7550    45    44445.0000    43721.7943  5253284    1.63%
Elapsed time = 6221.60 sec. (1998822.26 ticks, tree = 515.40 MB, solutions = 17)
   4800  2546    43903.7804    38    44445.0000    43721.7943  5348205    1.63%
   4805  2549    43928.2475    32    44445.0000    43723.7021  5351927    1.62%
   4810  2552    43950.2204    39    44445.0000    43723.7021  5362721    1.62%
   4826  2558    43927.2167    36    44445.0000    43723.7021  5377893    1.62%
   4838  2558    44045.2162    31    44445.0000    43723.7021  5394821    1.62%
   4846  2556    43995.5529    28    44445.0000    43723.7021  5401085    1.62%
   4854  2559    44052.3313    32    44445.0000    43723.7021  5412620    1.62%
   4866  2561    44278.2031    27    44445.0000    43723.7021  5429615    1.62%
   4874  2564    43992.0049    35    44445.0000    43723.7021  5442742    1.62%
   4890  2570    44069.2231    30    44445.0000    43723.7021  5458202    1.62%
Elapsed time = 6420.94 sec. (2060279.08 ticks, tree = 562.22 MB, solutions = 17)
   4914  2588    44009.2884    34    44445.0000    43723.7021  5476981    1.62%
   4980  2623    44078.4734    39    44445.0000    43723.7021  5532151    1.62%
   4988  2629    44111.6230    39    44445.0000    43723.7021  5538990    1.62%
   5008  2640    44092.3887    41    44445.0000    43723.7021  5562535    1.62%
   5015  2644    44285.3977    33    44445.0000    43723.7021  5569440    1.62%
   5044  2654    44035.5253    39    44445.0000    43723.7021  5593692    1.62%
   5046  2656    43917.9296    46    44445.0000    43723.7021  5602349    1.62%
   5194  2688    43757.5731    46    44445.0000    43723.7021  5691630    1.62%
   5206  2689    43761.7280    50    44445.0000    43723.7021  5702269    1.62%
   5210  2690    43779.1116    48    44445.0000    43723.7021  5707408    1.62%
Elapsed time = 6725.43 sec. (2150418.95 ticks, tree = 630.30 MB, solutions = 17)
   5216  2693    44362.2605    27    44445.0000    43723.7021  5713707    1.62%
   5238  2703    43807.1822    47    44445.0000    43723.7021  5730605    1.62%
   5246  2705    43810.8405    42    44445.0000    43723.7021  5738599    1.62%
   5254  2710    43844.2242    47    44445.0000    43723.7021  5744216    1.62%
   5282  2714    43874.1146    44    44445.0000    43723.7021  5758527    1.62%
*  5303+ 2608                        44442.0000    43723.7021             1.62%
   5303  2609    44441.4732    20    44442.0000    43723.7021  5766597    1.62%
   5315  2613    43770.2132    46    44442.0000    43723.7021  5785863    1.62%
   5326  2616    44124.1606    43    44442.0000    43723.7021  5802230    1.62%
   5350  2629    44408.1096    40    44442.0000    43723.7021  5818270    1.62%
   5400  2661    43902.9654    36    44442.0000    43723.7021  5846702    1.62%
Elapsed time = 6924.49 sec. (2210368.47 ticks, tree = 604.80 MB, solutions = 17)
*  5406+ 2602                        44426.0000    43723.7021             1.58%
   5427  2569    43835.4563    45    44426.0000    43725.3682  5854669    1.58%
   5439  2577    44217.4716    34    44426.0000    43725.3682  5862794    1.58%
   5448  2584    43906.3011    34    44426.0000    43725.3682  5866690    1.58%
   5496  2594    43909.4342    39    44426.0000    43725.3682  5900520    1.58%
   5520  2600    43922.4461    36    44426.0000    43725.3682  5916714    1.58%
   5536  2609    44069.6068    36    44426.0000    43725.3682  5931088    1.58%
   5560  2619    44087.4480    37    44426.0000    43725.3682  5948270    1.58%
   5608  2627    44104.3228    29    44426.0000    43725.3682  5966725    1.58%
   5657  2646    44122.4471    41    44426.0000    43725.3682  5992134    1.58%
   5673  2659    44232.4512    36    44426.0000    43725.3682  6000139    1.58%
Elapsed time = 7161.02 sec. (2280026.18 ticks, tree = 616.87 MB, solutions = 19)
   5705  2683    44242.2171    36    44426.0000    43725.3682  6019169    1.58%
   5757  2715    43784.4259    42    44426.0000    43727.3327  6057862    1.57%

Mixed integer rounding cuts applied:  4280
Lift and project cuts applied:  8
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =  162.54 sec. (82412.90 ticks)
Parallel b&c, 4 threads:
  Real time             = 7037.51 sec. (2210146.27 ticks)
  Sync time (average)   =  242.36 sec.
  Wait time (average)   =  242.65 sec.
                          ------------
Total (root+branch&cut) = 7200.05 sec. (2292559.16 ticks)
We use intensification finding a better solution: 44426.0
================ Solution ================
BAP terminated with objective : 44426
Total Number of iterations: 92
Total Number of processed nodes: 4
Total Time spent on master problems: 785359 Total time spent on pricing problems: 13910
Best bound : 43465.899999999965
[6, 23, 28, 47, 52, 67, 94, 109, 131, 148, 159, 161, 172, 185, 202, 213, 214, 224, 233, 238, 244, 285, 297, 306, 317, 323, 328, 329, 333, 337, 344, 381, 419, 433, 434, 458, 479, 486, 518, 525, 540, 561, 564, 581, 599, 604, 609, 623, 629, 630, 645, 652, 671, 677, 695, 699, 703, 710, 731, 736, 742, 774, 778, 781, 791, 796, 803, 809, 810, 836, 853, 869, 876, 881, 885, 889, 896]
The number of service edges used= 77

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false edgeIndexset: [433, 306, 951, 202, 479] start node= 1 start time= 21 capacity type= 2 ifChargeSet: []
(2,6)->(3,13)->(1,21)->(1,22)->(3,29)->(2,6):1.0
Fix cost= 300 variable cost= 116

artificial: false edgeIndexset: [323, 731, 876, 540, 47] start node= 5 start time= 11 capacity type= 2 ifChargeSet: []
(3,0)->(6,6)->(5,11)->(0,17)->(2,23)->(3,0):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [836, 581, 214, 1030, 109] start node= 4 start time= 10 capacity type= 2 ifChargeSet: []
(1,4)->(4,10)->(4,11)->(0,19)->(6,26)->(1,4):1.0
Fix cost= 400 variable cost= 116

artificial: false edgeIndexset: [1042, 344, 604, 238, 159, 623] start node= 4 start time= 22 capacity type= 1 ifChargeSet: []
(4,4)->(1,9)->(2,14)->(4,22)->(4,23)->(1,28)->(4,4):1.0
Fix cost= 150 variable cost= 116

artificial: false edgeIndexset: [434, 185, 297, 1002, 1003, 172] start node= 1 start time= 22 capacity type= 2 ifChargeSet: []
(1,5)->(3,12)->(3,13)->(3,14)->(1,22)->(2,27)->(1,5):1.0
Fix cost= 300 variable cost= 112

artificial: false edgeIndexset: [803, 244, 629, 677, 791] start node= 5 start time= 11 capacity type= 2 ifChargeSet: []
(1,4)->(5,11)->(4,17)->(5,23)->(4,29)->(1,4):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [486, 774, 889, 329, 703] start node= 5 start time= 24 capacity type= 2 ifChargeSet: []
(3,6)->(4,13)->(6,19)->(5,24)->(2,29)->(3,6):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [881, 419, 1018, 652, 796, 94] start node= 5 start time= 16 capacity type= 2 ifChargeSet: []
(0,4)->(6,11)->(5,16)->(4,22)->(3,28)->(3,29)->(0,4):1.0
Fix cost= 350 variable cost= 116

artificial: false edgeIndexset: [131, 148, 6, 23, 919, 920, 921, 922] start node= 1 start time= 28 capacity type= 2 ifChargeSet: []
(0,6)->(1,11)->(0,19)->(0,20)->(0,21)->(0,22)->(0,23)->(1,28)->(0,6):1.0
Fix cost= 300 variable cost= 104

artificial: false edgeIndexset: [67, 803, 599, 1003, 1004, 525] start node= 5 start time= 23 capacity type= 2 ifChargeSet: []
(0,7)->(3,13)->(3,14)->(3,15)->(5,23)->(4,29)->(0,7):1.0
Fix cost= 350 variable cost= 112

artificial: false edgeIndexset: [736, 995, 996, 52, 997, 518, 328] start node= 5 start time= 16 capacity type= 2 ifChargeSet: []
(3,5)->(3,6)->(3,7)->(3,8)->(5,16)->(0,22)->(2,28)->(3,5):1.0
Fix cost= 350 variable cost= 108

artificial: false edgeIndexset: [337, 561, 1107, 1108, 869, 645] start node= 4 start time= 15 capacity type= 1 ifChargeSet: []
(2,7)->(4,15)->(3,21)->(6,27)->(6,28)->(6,29)->(2,7):1.0
Fix cost= 150 variable cost= 112

artificial: false edgeIndexset: [996, 997, 630, 1049, 233, 458, 285] start node= 1 start time= 23 capacity type= 2 ifChargeSet: []
(4,0)->(3,6)->(3,7)->(3,8)->(2,15)->(1,23)->(4,29)->(4,0):1.0
Fix cost= 300 variable cost= 108

artificial: false edgeIndexset: [885, 213, 742, 699, 28, 1070, 1071] start node= 5 start time= 20 capacity type= 2 ifChargeSet: []
(1,3)->(4,9)->(6,15)->(5,20)->(5,21)->(5,22)->(0,28)->(1,3):1.0
Fix cost= 350 variable cost= 112

artificial: false edgeIndexset: [1091, 1092, 853, 695, 809, 381] start node= 5 start time= 29 capacity type= 2 ifChargeSet: []
(4,5)->(6,11)->(6,12)->(6,13)->(2,21)->(5,29)->(4,5):1.0
Fix cost= 350 variable cost= 112

artificial: false edgeIndexset: [896, 224, 609, 1027, 1028, 710, 781] start node= 4 start time= 8 capacity type= 1 ifChargeSet: []
(5,1)->(4,7)->(4,8)->(4,9)->(1,14)->(4,20)->(6,26)->(5,1):1.0
Fix cost= 150 variable cost= 112

artificial: false edgeIndexset: [976, 161, 564, 810, 938, 939, 940, 317] start node= 1 start time= 8 capacity type= 2 ifChargeSet: []
(6,0)->(1,8)->(1,9)->(1,10)->(1,11)->(2,16)->(2,17)->(3,24)->(6,0):1.0
Fix cost= 300 variable cost= 104

artificial: false edgeIndexset: [778, 1067, 1068, 333, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 671] start node= 5 start time= 17 capacity type= 0 ifChargeSet: []
(2,3)->(4,11)->(5,17)->(5,18)->(5,19)->(5,20)->(5,21)->(5,22)->(5,23)->(5,24)->(5,25)->(5,26)->(5,27)->(5,28)->(2,3):1.0
Fix cost= 75 variable cost= 76

fix cost+variable cost+commodity cost= 5225+1996+37205.0=44426.0

vehicle dowork= 44130 commodity dowork= 37205.0
no load ratio= 0.1569227283027419

Total vehicles used= 18

vehicleCoverServiceEdge information:
{896=1, 131=1, 645=1, 774=1, 6=1, 518=1, 778=1, 652=1, 525=1, 781=1, 148=1, 791=1, 23=1, 540=1, 796=1, 28=1, 285=1, 159=1, 671=1, 161=1, 803=2, 419=1, 677=1, 297=1, 809=1, 810=1, 172=1, 47=1, 433=1, 561=1, 306=1, 434=1, 52=1, 564=1, 695=1, 185=1, 699=1, 317=1, 703=1, 323=1, 67=1, 836=1, 581=1, 710=1, 328=1, 329=1, 202=1, 458=1, 333=1, 337=1, 213=1, 853=1, 214=1, 599=1, 344=1, 731=1, 604=1, 94=1, 479=1, 736=1, 224=1, 609=1, 869=1, 486=1, 742=1, 233=1, 876=1, 109=1, 238=1, 623=1, 881=1, 244=1, 629=1, 885=1, 630=1, 889=1, 381=1}

commodityFlowIntoTerminal information:
0 0 0 0 51 0 100 0 0 0 0 0 0 0 0 0 0 86 0 126 0 0 90 0 0 0 0 0 90 0 
0 0 0 100 162 48 0 0 100 20 0 83 0 0 47 0 0 0 0 0 0 100 97 43 0 0 0 0 148 0 
0 0 0 2 0 0 100 50 0 0 0 0 0 0 50 95 100 0 0 0 0 100 0 71 0 0 0 100 73 100 
46 0 0 0 0 100 122 0 0 0 0 0 62 160 0 0 0 0 0 0 0 50 0 0 92 0 0 0 66 97 
0 0 0 0 50 100 0 50 0 100 100 20 0 94 0 47 0 80 0 0 50 0 135 0 0 0 0 0 0 300 
0 50 0 0 0 0 0 0 0 0 0 157 0 0 0 0 168 20 0 0 100 0 0 195 45 0 0 0 0 62 
100 0 0 0 0 0 100 0 0 0 0 191 0 0 0 100 0 0 0 100 0 0 0 0 0 0 148 50 0 0 

vehicle pattern information:
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1]
[2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
x[0]:4,29->1,4= 22.0 5
total cost= 110.0

x[1]:0,23->1,28= 13.0 5
x[1]:0,28->1,3= 12.0 5
x[1]:1,4->4,10= 12.0 6
x[1]:1,28->4,4= 13.0 6
total cost= 275.0

x[2]:0,4->6,11= 25.0 7
total cost= 175.0

x[3]:0,23->1,28= 9.0 5
x[3]:0,28->1,3= 6.0 5
total cost= 75.0

x[4]:3,13->1,21= 20.0 8
total cost= 160.0

x[5]:1,22->3,29= 21.0 7
total cost= 147.0

x[6]:4,20->6,26= 21.0 6
x[6]:5,11->4,17= 21.0 6
total cost= 252.0

x[7]:5,24->2,29= 26.0 5
total cost= 130.0

x[8]:5,11->0,17= 17.0 6
x[8]:6,19->5,24= 17.0 5
total cost= 187.0

x[9]:4,0->3,6= 18.0 6
total cost= 108.0

x[10]:0,19->6,26= 27.0 7
total cost= 189.0

x[11]:4,22->3,28= 20.0 6
x[11]:5,16->4,22= 20.0 6
total cost= 240.0

x[12]:0,6->1,11= 20.0 5
total cost= 100.0

x[13]:3,8->2,15= 10.0 7
x[13]:3,29->2,6= 19.0 7
total cost= 203.0

x[14]:1,3->4,9= 30.0 6
x[14]:4,9->6,15= 30.0 6
total cost= 360.0

x[15]:5,16->0,22= 22.0 6
x[15]:6,11->5,16= 22.0 5
total cost= 242.0

x[16]:0,28->1,3= 20.0 5
x[16]:1,4->5,11= 20.0 7
total cost= 240.0

x[17]:4,22->3,28= 28.0 6
x[17]:5,16->4,22= 28.0 6
total cost= 336.0

x[18]:1,11->2,16= 14.0 5
x[18]:1,22->2,27= 7.0 5
total cost= 105.0

x[19]:5,1->4,7= 30.0 6
x[19]:6,26->5,1= 30.0 5
total cost= 330.0

x[20]:5,11->4,17= 5.0 6
x[20]:5,23->4,29= 24.0 6
total cost= 174.0

x[21]:3,24->6,0= 23.0 6
x[21]:2,17->3,24= 23.0 7
total cost= 299.0

x[22]:3,0->6,6= 24.0 6
total cost= 144.0

x[23]:1,14->4,20= 6.0000000000000355 6
x[23]:1,23->4,29= 12.999999999999964 6
total cost= 114.0

x[24]:4,29->1,4= 21.0 5
total cost= 105.0

x[25]:1,23->4,29= 18.0 6
total cost= 108.0

x[26]:2,3->4,11= 6.0000000000000355 8
x[26]:2,7->4,15= 23.999999999999964 8
total cost= 240.0

x[27]:1,11->0,19= 12.0 8
x[27]:1,22->3,29= 6.0 7
x[27]:3,29->0,4= 6.0 5
total cost= 168.0

x[28]:1,22->3,29= 4.9999999999999645 7
x[28]:1,23->4,29= 23.000000000000036 6
x[28]:3,0->6,6= 4.9999999999999645 6
x[28]:4,5->6,11= 23.000000000000036 6
total cost= 341.0

x[29]:0,19->6,26= 15.0 7
x[29]:4,20->6,26= 7.0 6
x[29]:5,11->0,17= 15.0 6
x[29]:5,11->4,17= 7.0 6
total cost= 279.0

x[30]:4,0->3,6= 26.0 6
total cost= 156.0

x[31]:2,6->3,13= 7.0 7
x[31]:2,28->3,5= 21.0 7
total cost= 196.0

x[32]:3,24->6,0= 16.0 6
total cost= 96.0

x[33]:1,23->4,29= 23.0 6
x[33]:4,5->6,11= 1.9999999999999645 6
x[33]:4,13->6,19= 21.000000000000036 6
total cost= 276.0

x[34]:2,21->5,29= 18.0 8
total cost= 144.0

x[35]:6,0->1,8= 4.5 8
x[35]:6,26->1,4= 21.5 8
total cost= 208.0

x[36]:0,17->2,23= 29.0 6
total cost= 174.0

x[37]:4,5->6,11= 29.0 6
total cost= 174.0

x[38]:5,16->4,22= 18.0 6
x[38]:6,6->5,11= 12.0 5
x[38]:6,11->5,16= 6.0 5
total cost= 198.0

x[39]:2,28->3,5= 20.0 7
total cost= 140.0

x[40]:4,11->0,19= 26.0 8
total cost= 208.0

x[41]:0,7->3,13= 19.0 6
total cost= 114.0

x[42]:3,21->6,27= 19.0 6
x[42]:3,24->6,0= 7.0 6
total cost= 156.0

x[43]:1,3->4,9= 23.0 6
total cost= 138.0

x[44]:6,26->1,4= 27.0 8
total cost= 216.0

x[45]:0,17->2,23= 25.000000000000007 6
total cost= 150.00000000000006

x[46]:4,9->1,14= 25.0 5
x[46]:5,23->4,29= 25.0 6
total cost= 275.0

x[47]:3,14->1,22= 23.0 8
total cost= 184.0

x[48]:3,21->6,27= 20.0 6
total cost= 120.0

x[49]:5,23->4,29= 9.0 6
x[49]:5,29->4,5= 14.0 6
total cost= 138.0

x[50]:1,5->3,12= 28.0 7
x[50]:6,26->1,4= 28.0 8
total cost= 420.0

x[51]:1,28->0,6= 26.0 8
total cost= 208.0

x[52]:3,8->2,15= 15.000000000000004 7
total cost= 105.00000000000003

x[53]:3,8->2,15= 19.0 7
total cost= 133.0

x[54]:1,11->0,19= 17.0 8
total cost= 136.0

x[55]:5,16->0,22= 19.0 6
x[55]:6,6->5,11= 19.0 5
total cost= 209.0

x[56]:3,0->6,6= 16.000000000000036 6
x[56]:4,13->6,19= 13.999999999999964 6
x[56]:2,23->3,0= 16.000000000000036 7
x[56]:2,3->4,11= 13.999999999999964 8
total cost= 403.99999999999994

x[57]:4,17->5,23= 23.0 6
total cost= 138.0

x[58]:2,7->4,15= 24.0 8
total cost= 192.0

x[59]:1,28->0,6= 29.0 8
total cost= 232.0

x[60]:3,6->4,13= 24.999999999999964 7
total cost= 174.99999999999974

x[61]:4,9->6,15= 17.0 6
total cost= 102.0

x[62]:5,16->0,22= 30.0 6
x[62]:6,11->5,16= 30.0 5
total cost= 330.0

x[63]:0,7->3,13= 16.0 6
total cost= 96.0

x[64]:6,13->2,21= 25.0 8
total cost= 200.0

x[65]:3,24->6,0= 19.0 6
x[65]:2,17->3,24= 19.0 7
total cost= 247.0

x[66]:4,20->6,26= 22.0 6
x[66]:5,11->4,17= 22.0 6
total cost= 264.0

x[67]:5,22->0,28= 30.0 6
x[67]:6,11->5,16= 14.0 5
x[67]:6,15->5,20= 16.0 5
total cost= 330.0

x[68]:0,28->1,3= 27.0 5
x[68]:1,4->4,10= 27.0 6
total cost= 297.0

x[69]:3,15->5,23= 28.0 8
total cost= 224.0

x[70]:4,9->6,15= 17.0 6
x[70]:5,23->4,29= 17.0 6
total cost= 204.0

x[71]:1,22->2,27= 23.0 5
total cost= 115.0

x[72]:5,23->4,29= 26.0 6
total cost= 156.0

x[73]:6,13->2,21= 25.0 8
total cost= 200.0

x[74]:3,0->6,6= 8.0 6
x[74]:3,24->6,0= 19.0 6
total cost= 162.0

x[75]:1,22->3,29= 17.0 7
x[75]:3,0->6,6= 17.0 6
total cost= 221.0

x[76]:6,13->2,21= 9.0 8
x[76]:6,29->2,7= 16.0 8
total cost= 200.0

x[77]:2,27->1,5= 30.0 8
total cost= 240.0

x[78]:2,28->3,5= 30.0 7
total cost= 210.0

x[79]:0,6->1,11= 29.0 5
total cost= 145.0

x[80]:3,0->6,6= 30.0 6
x[80]:2,23->3,0= 30.0 7
total cost= 390.0

x[81]:5,11->0,17= 30.0 6
total cost= 180.0

x[82]:0,17->2,23= 17.0 6
total cost= 102.0

x[83]:3,8->2,15= 24.0 7
total cost= 168.0

x[84]:4,23->1,28= 19.0 5
total cost= 95.0

x[85]:3,29->0,4= 27.99999999999998 5
total cost= 139.9999999999999

x[86]:0,4->6,11= 21.0 7
total cost= 147.0

x[87]:0,23->1,28= 17.0 5
x[87]:0,19->6,26= 10.0 7
x[87]:1,4->5,11= 17.0 7
x[87]:6,26->5,1= 10.0 5
total cost= 324.0

x[88]:3,13->1,21= 10.0 8
x[88]:3,14->1,22= 14.0 8
total cost= 192.0

x[89]:4,15->3,21= 17.0 6
x[89]:4,22->3,28= 1.0 6
total cost= 108.0

x[90]:3,15->5,23= 20.0 8
total cost= 160.0

x[91]:2,27->1,5= 18.0 8
total cost= 144.0

x[92]:0,22->2,28= 29.0 6
total cost= 174.0

x[93]:1,22->3,29= 20.0 7
total cost= 140.0

x[94]:5,22->0,28= 15.0 6
x[94]:6,15->5,20= 15.0 5
total cost= 165.0

x[95]:1,23->4,29= 23.0 6
total cost= 138.0

x[96]:0,7->3,13= 17.0 6
total cost= 102.0

x[97]:4,5->6,11= 28.0 6
x[97]:5,23->4,29= 28.0 6
total cost= 336.0

x[98]:0,23->1,28= 17.0 5
total cost= 85.0

x[99]:4,15->3,21= 10.0 6
x[99]:5,1->4,7= 10.0 6
x[99]:2,17->3,24= 18.0 7
x[99]:6,29->2,7= 18.0 8
x[99]:6,26->5,1= 10.0 5
total cost= 440.0

x[100]:6,0->1,8= 20.0 8
total cost= 160.0

x[101]:2,6->3,13= 19.0 7
total cost= 133.0

x[102]:3,13->1,21= 15.0 8
total cost= 120.0

x[103]:0,19->6,26= 21.0 7
total cost= 147.0

x[104]:0,22->2,28= 28.0 6
total cost= 168.0

x[105]:5,24->2,29= 28.0 5
x[105]:5,28->2,3= 1.0 5
total cost= 145.0

x[106]:3,13->1,21= 10.0 8
x[106]:3,14->1,22= 14.0 8
total cost= 192.0

x[107]:1,22->3,29= 29.0 7
total cost= 203.0

x[108]:2,28->3,5= 29.0 7
total cost= 203.0

x[109]:1,4->4,10= 16.0 6
x[109]:4,13->6,19= 16.0 6
total cost= 192.0

x[110]:1,11->2,16= 20.0 5
x[110]:3,8->2,15= 3.0 7
x[110]:4,4->1,9= 20.0 5
x[110]:4,0->3,6= 3.0 6
total cost= 239.0

x[111]:6,0->1,8= 30.0 8
total cost= 240.0

x[112]:0,7->3,13= 24.0 6
total cost= 144.0

x[113]:5,24->2,29= 17.0 5
total cost= 85.0

x[114]:1,3->4,9= 3.0 6
x[114]:1,4->4,10= 15.0 6
total cost= 108.0

x[115]:0,23->1,28= 22.0 5
x[115]:1,3->4,9= 22.0 6
total cost= 242.0

x[116]:6,0->1,8= 4.5 8
x[116]:6,26->1,4= 21.5 8
total cost= 208.0

x[117]:5,22->0,28= 30.0 6
x[117]:6,15->5,20= 30.0 5
total cost= 330.0

x[118]:3,6->4,13= 21.000000000000036 7
total cost= 147.00000000000026

x[119]:3,14->1,22= 20.0 8
total cost= 160.0

x[120]:4,17->5,23= 29.0 6
total cost= 174.0

x[121]:1,22->2,27= 15.0 5
total cost= 75.0

x[122]:3,6->4,13= 25.0 7
total cost= 175.0

x[123]:3,14->1,22= 26.0 8
total cost= 208.0

x[124]:0,4->6,11= 21.0 7
total cost= 147.0

x[125]:3,15->5,23= 18.0 8
total cost= 144.0

x[126]:6,13->2,21= 15.0 8
total cost= 120.0

x[127]:0,22->2,28= 16.0 6
total cost= 96.0

x[128]:3,8->2,15= 24.0 7
x[128]:4,0->3,6= 24.0 6
x[128]:4,17->5,23= 4.0 6
x[128]:5,24->2,29= 4.0 5
total cost= 356.0

x[129]:4,9->6,15= 16.0 6
x[129]:4,13->6,19= 9.0 6
x[129]:5,1->4,7= 10.0 6
x[129]:5,29->4,5= 15.0 6
total cost= 300.0

x[130]:5,11->4,17= 25.0 6
x[130]:6,6->5,11= 25.0 5
total cost= 275.0

x[131]:4,9->6,15= 20.0 6
x[131]:5,29->4,5= 20.0 6
total cost= 240.0

x[132]:1,11->2,16= 19.0 5
x[132]:4,29->1,4= 19.0 5
total cost= 190.0

x[133]:5,11->0,17= 24.0 6
total cost= 144.0

x[134]:1,9->2,14= 21.0 5
total cost= 105.0

x[135]:3,15->5,23= 29.0 8
total cost= 232.0

x[136]:0,4->6,11= 16.0 7
total cost= 112.0

x[137]:5,16->0,22= 19.0 6
x[137]:6,6->5,11= 19.0 5
total cost= 209.0

x[138]:4,13->6,19= 21.0 6
total cost= 126.0

x[139]:5,22->0,28= 15.0 6
x[139]:6,15->5,20= 15.0 5
total cost= 165.0

x[140]:2,6->3,13= 19.0 7
total cost= 133.0

x[141]:1,22->2,27= 17.0 5
total cost= 85.0

x[142]:1,22->2,27= 22.0 5
x[142]:4,9->1,14= 22.0 5
total cost= 220.0

x[143]:3,24->6,0= 16.0 6
x[143]:2,17->3,24= 16.0 7
total cost= 208.0

x[144]:2,29->3,6= 22.0 7
total cost= 154.0

x[145]:5,23->4,29= 26.0 6
total cost= 156.0

x[146]:3,8->5,16= 25.0 8
total cost= 200.0

x[147]:3,13->1,21= 23.0 8
total cost= 184.0

x[148]:1,28->0,6= 30.0 8
total cost= 240.0

x[149]:3,8->5,16= 22.0 8
total cost= 176.0

x[150]:1,11->2,16= 24.0 5
total cost= 120.0

x[151]:1,11->0,19= 15.0 8
total cost= 120.0

x[152]:2,21->5,29= 24.0 8
total cost= 192.0

x[153]:1,11->2,16= 23.0 5
total cost= 115.0

x[154]:3,6->4,13= 23.000000000000036 7
total cost= 161.00000000000026

x[155]:5,24->2,29= 25.0 5
total cost= 125.0

x[156]:1,11->0,19= 14.0 8
x[156]:1,28->0,6= 15.0 8
total cost= 232.0

x[157]:0,7->3,13= 24.0 6
total cost= 144.0

x[158]:1,11->0,19= 17.0 8
total cost= 136.0

x[159]:1,22->2,27= 16.0 5
total cost= 80.0

x[160]:1,14->4,20= 23.0 6
total cost= 138.0

x[161]:0,19->6,26= 25.0 7
total cost= 175.0

x[162]:1,5->3,12= 21.0 7
total cost= 147.0

x[163]:3,29->2,6= 30.0 7
total cost= 210.0

x[164]:4,0->3,6= 29.0 6
total cost= 174.0

x[165]:5,16->4,22= 25.0 6
x[165]:6,6->5,11= 25.0 5
total cost= 275.0

x[166]:2,21->5,29= 20.0 8
total cost= 160.0

x[167]:4,11->5,17= 17.0 6
total cost= 102.0

x[168]:5,23->4,29= 21.0 6
total cost= 126.0

x[169]:0,28->1,3= 15.0 5
total cost= 75.0

x[170]:4,11->5,17= 3.0 6
x[170]:4,17->5,23= 26.0 6
total cost= 174.0

x[171]:1,28->4,4= 19.0 6
x[171]:4,13->6,19= 19.0 6
total cost= 228.0

x[172]:0,6->1,11= 30.0 5
total cost= 150.0

x[173]:5,23->4,29= 24.0 6
x[173]:6,15->5,20= 24.0 5
total cost= 264.0

x[174]:6,0->1,8= 22.0 8
total cost= 176.0

x[175]:2,15->1,23= 16.0 8
total cost= 128.0

x[176]:4,22->3,28= 17.0 6
total cost= 102.0

x[177]:0,6->1,11= 4.0 5
x[177]:0,23->1,28= 22.0 5
x[177]:1,3->4,9= 22.0 6
x[177]:1,14->4,20= 4.0 6
total cost= 286.0

x[178]:2,14->4,22= 25.0 8
total cost= 200.0

x[179]:1,11->0,19= 25.0 8
total cost= 200.0

x[180]:1,14->4,20= 17.0 6
total cost= 102.0

x[181]:6,13->2,21= 26.0 8
total cost= 208.0

x[182]:1,5->3,12= 11.0 7
x[182]:1,28->4,4= 18.0 6
x[182]:3,21->6,27= 11.0 6
x[182]:4,5->6,11= 18.0 6
total cost= 359.0

x[183]:2,6->3,13= 15.0 7
total cost= 105.0

x[184]:2,15->1,23= 27.0 8
total cost= 216.0

x[185]:4,17->5,23= 17.0 6
total cost= 102.0

x[186]:6,0->1,8= 19.0 8
total cost= 152.0

x[187]:2,14->4,22= 19.0 8
total cost= 152.0

x[188]:5,29->4,5= 28.0 6
x[188]:6,19->5,24= 28.0 5
total cost= 308.0

x[189]:6,11->5,16= 20.0 5
total cost= 100.0

x[190]:3,29->2,6= 23.0 7
total cost= 161.0

x[191]:3,8->5,16= 21.0 8
total cost= 168.0

x[192]:3,29->2,6= 28.0 7
total cost= 196.0

x[193]:4,15->3,21= 23.0 6
x[193]:5,29->4,5= 23.0 6
total cost= 276.0

x[194]:1,5->3,12= 2.0 7
x[194]:2,17->3,24= 16.0 7
x[194]:6,26->1,4= 2.0 8
x[194]:6,29->2,7= 16.0 8
total cost= 270.0

x[195]:1,4->4,10= 30.0 6
total cost= 180.0

x[196]:3,29->0,4= 17.00000000000002 5
total cost= 85.00000000000011

x[197]:3,13->1,21= 22.0 8
total cost= 176.0

x[198]:1,9->2,14= 29.0 5
x[198]:4,23->1,28= 29.0 5
x[198]:4,17->5,23= 1.0 6
x[198]:5,28->2,3= 1.0 5
total cost= 301.0

x[199]:0,28->1,3= 20.0 5
x[199]:0,4->6,11= 8.0 7
x[199]:1,4->5,11= 20.0 7
x[199]:6,11->5,16= 8.0 5
total cost= 336.0

Total time= 8003870

Sovle for test8_7_30_30_200C.txt
Colmun limit=1000
number of service arcs=900
number of holding arcs=210

root node bound= 41757.219999999994
Before intensification, we have 18661 columns
After pick up:
==================Intensification===================
We add 500 columns to cplex.
Tried aggregator 2 times.
MIP Presolve eliminated 20057 rows and 17346 columns.
Aggregator did 3557 substitutions.
Reduced MIP has 19727 rows, 61973 columns, and 191088 nonzeros.
Reduced MIP has 10 binaries, 490 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.19 sec. (106.68 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.13 sec. (2.56 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 115 rows and 365 columns.
Reduced MIP has 19612 rows, 61608 columns, and 190001 nonzeros.
Reduced MIP has 10 binaries, 490 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.15 sec. (73.38 ticks)
Probing time = 0.10 sec. (2.08 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 16.27 sec. (5103.21 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    41757.2200    54                  41757.2200    19648         
      0     0    41760.7667    59                  Cuts: 1055    23428         
      0     0    41761.6915    51                  Cuts: 1127    26980         
*     0+    0                        71665.0000    41761.6915            41.73%
      0     0    41824.3076    48    71665.0000    Cuts: 1098    33874   41.64%
*     0+    0                        47886.0000    41824.3076            12.66%
*     0+    0                        47514.0000    41824.3076            11.97%
*     0+    0                        47495.0000    41824.3076            11.94%
      0     0    41869.8339    45    47495.0000 MIRcuts: 1064    37174   11.84%
      0     0    41915.6123    49    47495.0000     Cuts: 860    41139   11.75%
      0     0    41965.2778    48    47495.0000 MIRcuts: 1268    44934   11.64%
      0     0    42012.4795    50    47495.0000    Cuts: 1111    50585   11.54%
      0     0    42048.0561    49    47495.0000 MIRcuts: 1286    53755   11.47%
      0     0    42062.3457    50    47495.0000 MIRcuts: 1069    58638   11.44%
      0     0    42072.1486    50    47495.0000 MIRcuts: 1087    61705   11.42%
      0     0    42079.3768    46    47495.0000 MIRcuts: 1143    63499   11.40%
      0     0    42100.2445    50    47495.0000 MIRcuts: 1210    67411   11.36%
      0     0    42107.6560    45    47495.0000  MIRcuts: 969    69042   11.34%
      0     0    42115.3477    42    47495.0000 MIRcuts: 1122    70486   11.33%
      0     0    42115.5783    41    47495.0000  MIRcuts: 921    71322   11.33%
*     0+    0                        44855.0000    42115.5783             6.11%
      0     0    42121.6655    48    44855.0000  MIRcuts: 654    73110    6.09%
Heuristic still looking.
Heuristic still looking.
*     0+    0                        44552.0000    42121.6655             5.46%
      0     2    42121.6655    48    44552.0000    42121.6655    73110    5.46%
Elapsed time = 211.96 sec. (109543.37 ticks, tree = 0.00 MB, solutions = 6)
      1     3    42146.6289    35    44552.0000    42121.6655    77242    5.46%
      2     4    42134.4940    44    44552.0000    42121.6655    78244    5.46%
      3     5    42155.8123    41    44552.0000    42134.4940    80794    5.43%
      4     6    42138.1558    39    44552.0000    42134.4940    84050    5.43%
      7     9    42142.2689    41    44552.0000    42134.4940    89423    5.43%
      9    11    42161.3520    38    44552.0000    42134.4940    98889    5.43%
     11    13    42160.1135    43    44552.0000    42142.6417   106923    5.41%
     12    14    42227.5840    42    44552.0000    42142.6417   112414    5.41%
*    14+   14                        44005.0000    42142.6417             4.23%
*    14+   14                        43771.0000    42142.6417             3.72%
*    14+   14                        43770.0000    42142.6417             3.72%
     14    16    42209.3652    45    43770.0000    42142.6417   120899    3.72%
     17    19    42157.1038    38    43770.0000    42145.3057   129675    3.71%
Elapsed time = 279.51 sec. (142663.69 ticks, tree = 0.00 MB, solutions = 9)
     20    22    42246.4098    42    43770.0000    42145.3057   143288    3.71%
     25    27    42342.8530    43    43770.0000    42145.3057   159781    3.71%
     28    30    42209.1676    39    43770.0000    42153.3366   166704    3.69%
     32    34    42211.3540    37    43770.0000    42153.3366   175292    3.69%
     35    37    42234.3426    43    43770.0000    42153.3366   185553    3.69%
     39    41    42347.2073    43    43770.0000    42153.3366   194812    3.69%
     43    45    42177.1613    41    43770.0000    42153.3366   217673    3.69%
     47    49    42181.2107    42    43770.0000    42153.3366   225479    3.69%
     51    53    42229.0569    45    43770.0000    42153.3366   241237    3.69%
     55    57    42184.4794    40    43770.0000    42153.3366   249698    3.69%
Elapsed time = 377.47 sec. (173389.71 ticks, tree = 0.00 MB, solutions = 9)
     59    61    42188.2552    40    43770.0000    42153.3366   261722    3.69%
     62    64    42396.3102    32    43770.0000    42153.3366   269477    3.69%
     64    66    42334.2457    35    43770.0000    42153.3366   278808    3.69%
     65    67    42186.0441    39    43770.0000    42153.3366   279635    3.69%
     66    68    42389.1722    38    43770.0000    42153.3366   281452    3.69%
     69    71    42186.1611    40    43770.0000    42153.3366   286760    3.69%
     70    72    42420.8728    38    43770.0000    42153.3366   291343    3.69%
     71    73    42261.6349    29    43770.0000    42153.3366   298650    3.69%
     79    81    42243.9265    30    43770.0000    42153.3366   328777    3.69%
     83    85    42260.6003    25    43770.0000    42153.3366   338490    3.69%
Elapsed time = 456.59 sec. (198121.25 ticks, tree = 0.00 MB, solutions = 9)
     91    93    42222.9467    39    43770.0000    42153.3366   360046    3.69%
     92    94    42223.9115    37    43770.0000    42153.3366   362789    3.69%
     93    95    42442.4720    35    43770.0000    42153.3366   367998    3.69%
     96    98    42228.4700    42    43770.0000    42153.3366   380122    3.69%
     97    99    42486.7394    35    43770.0000    42153.3366   388078    3.69%
    100   102    42261.3794    39    43770.0000    42153.3366   414058    3.69%
    103   105    42520.8994    32    43770.0000    42153.3366   425302    3.69%
    104   106    42292.7428    44    43770.0000    42153.3366   431505    3.69%
    108   110    42278.6072    37    43770.0000    42153.3366   450542    3.69%
    116   118    42786.8597    27    43770.0000    42153.3366   481751    3.69%
Elapsed time = 554.59 sec. (229145.14 ticks, tree = 0.60 MB, solutions = 9)
    117   119    42283.1588    39    43770.0000    42153.3366   484467    3.69%
    118   120    42575.2203    33    43770.0000    42153.3366   484730    3.69%
    143   145    42393.7924    29    43770.0000    42153.3366   702102    3.69%
    147   149    42404.1914    35    43770.0000    42153.3366   706998    3.69%
    151   153    42449.1696    32    43770.0000    42153.3366   718632    3.69%
    155   157    42450.9164    31    43770.0000    42153.3366   730139    3.69%
    159   161    42453.1832    34    43770.0000    42153.3366   736767    3.69%
    163   165    42759.2131    33    43770.0000    42153.3366   763483    3.69%
    167   169    42526.4228    29    43770.0000    42153.3366   776836    3.69%
    171   173    42541.3985    28    43770.0000    42153.3366   791814    3.69%
Elapsed time = 786.07 sec. (296432.18 ticks, tree = 1.92 MB, solutions = 9)
    175   177    42547.0071    33    43770.0000    42153.3366   802104    3.69%
    179   181    42706.4669    21    43770.0000    42153.3366   827614    3.69%
    201   203    42710.7887    21    43770.0000    42153.3366   894459    3.69%
    205   207    43001.9687    22    43770.0000    42153.3366   908679    3.69%
    209   211    42724.1384    25    43770.0000    42153.3366   926819    3.69%
    213   215    42949.7281    23    43770.0000    42153.3366   943683    3.69%
    221   223    42748.4389    23    43770.0000    42153.3366   965863    3.69%
    225   227    42805.7551    22    43770.0000    42153.3366   978715    3.69%
    229   231    42765.6241    25    43770.0000    42153.3366   989940    3.69%
    233   235    42960.5435    21    43770.0000    42153.3366  1009760    3.69%
Elapsed time = 934.38 sec. (339454.22 ticks, tree = 5.11 MB, solutions = 9)
    237   239    42779.3311    29    43770.0000    42153.3366  1015164    3.69%
    257   259    42771.9948    25    43770.0000    42153.3366  1082069    3.69%
    261   263    42786.2157    25    43770.0000    42153.3366  1087552    3.69%
    264   266    43587.8437    10    43770.0000    42153.3366  1093802    3.69%
    265   267    42915.1904    24    43770.0000    42153.3366  1097735    3.69%
    269   271    42793.2812    24    43770.0000    42153.3366  1101075    3.69%
    273   275    42808.3031    28    43770.0000    42153.3366  1106200    3.69%
    277   279    42966.6384    23    43770.0000    42153.3366  1120064    3.69%
    281   283    42975.7461    24    43770.0000    42153.3366  1126835    3.69%
    285   287    43298.5586    21    43770.0000    42153.3366  1143893    3.69%
Elapsed time = 1041.64 sec. (368510.99 ticks, tree = 6.02 MB, solutions = 9)
    289   291    42993.8831    22    43770.0000    42153.3366  1148776    3.69%
    293   295    43044.8273    21    43770.0000    42153.3366  1160752    3.69%
    297   299    43065.5238    24    43770.0000    42153.3366  1167671    3.69%
*   359+  333                        43675.0000    42153.3366             3.48%
    442   342    42178.4693    51    43675.0000    42153.3366  1232838    3.48%
    443   339    43046.2158    19    43675.0000    42155.8123  1233588    3.48%
    444   340    42187.7598    45    43675.0000    42155.8123  1235680    3.48%
    451   347    43299.2342    19    43675.0000    42155.8123  1243441    3.48%
    452   348    42272.4140    45    43675.0000    42155.8123  1251363    3.48%
    460   354    42274.5223    48    43675.0000    42155.8123  1266038    3.48%
    463   357    43560.5274    23    43675.0000    42155.8123  1273728    3.48%
Elapsed time = 1158.23 sec. (403648.85 ticks, tree = 23.39 MB, solutions = 10)
    468   360    42533.6923    37    43675.0000    42155.8123  1280686    3.48%
    471   361    43575.2049    19    43675.0000    42155.8123  1289147    3.48%
    475   365    43094.2518    19    43675.0000    42155.8123  1291020    3.48%
    483   371    43196.9306    21    43675.0000    42155.8123  1305887    3.48%
    487   375    43135.6188    22    43675.0000    42155.8123  1317145    3.48%
    491   379    43198.4393    18    43675.0000    42155.8123  1323455    3.48%
    495   381    42694.8590    30    43675.0000    42155.8123  1333270    3.48%
*   507+  389                        43648.0000    42155.8123             3.42%
    542   396    43203.4238    18    43648.0000    42155.8123  1371120    3.42%
    546   400    43350.2352    15    43648.0000    42155.8123  1375155    3.42%
    547   401    42700.0497    30    43648.0000    42155.8123  1375648    3.42%
Elapsed time = 1263.32 sec. (434761.25 ticks, tree = 24.26 MB, solutions = 11)
    551   403    42908.1104    37    43648.0000    42155.8123  1386419    3.42%
    559   411    42719.0061    30    43648.0000    42155.8123  1391254    3.42%
    563   413    42857.2510    33    43648.0000    42155.8123  1401334    3.42%
    567   413    43070.3407    36    43648.0000    42155.8123  1407487    3.42%
    579   423    42907.2965    36    43648.0000    42155.8123  1416940    3.42%
    623   441    42889.1724    21    43648.0000    42155.8123  1444729    3.42%
    707   469    42484.4020    48    43648.0000    42155.8123  1485322    3.42%
    708   470    43280.8202    33    43648.0000    42155.8123  1491857    3.42%
    710   472    42210.4148    39    43648.0000    42155.8123  1493038    3.42%
    714   476    42305.7768    31    43648.0000    42155.8123  1498983    3.42%
Elapsed time = 1407.31 sec. (475508.39 ticks, tree = 38.95 MB, solutions = 11)
    730   492    42337.5963    35    43648.0000    42155.8123  1522867    3.42%
    746   508    42299.2985    39    43648.0000    42155.8123  1546924    3.42%
    789   551    42758.4135    40    43648.0000    42155.8123  1594685    3.42%
    792   554    42443.9510    39    43648.0000    42155.8123  1602982    3.42%
    801   563    42805.9687    27    43648.0000    42155.8123  1613344    3.42%
    809   571    42986.2336    33    43648.0000    42155.8123  1626194    3.42%
    817   579    42853.9777    31    43648.0000    42155.8123  1637162    3.42%
    828   590    42513.9171    36    43648.0000    42155.8123  1660338    3.42%
    848   610    42278.6553    35    43648.0000    42155.8123  1681663    3.42%
    888   642    42169.8041    43    43648.0000    42155.8123  1720188    3.42%
Elapsed time = 1602.60 sec. (531714.74 ticks, tree = 79.83 MB, solutions = 11)
    897   651    42826.0880    11    43648.0000    42155.8123  1733730    3.42%
    908   662    42175.6617    42    43648.0000    42155.8123  1744280    3.42%
    940   694    42180.5826    46    43648.0000    42155.8123  1779730    3.42%
    966   720    42583.8221    36    43648.0000    42155.8123  1814400    3.42%
*   983+  733                        43368.0000    42155.8123             2.80%
    983   735    43302.1383    19    43368.0000    42155.8123  1825835    2.80%
    993   745    42463.9914    35    43368.0000    42155.8123  1838040    2.80%
   1009   675    42460.8704    35    43368.0000    42155.8123  1849289    2.80%
   1025   685    42310.0129    38    43368.0000    42155.8123  1858065    2.80%
   1037   694    42320.7761    38    43368.0000    42155.8123  1869285    2.80%
   1045   702    42333.6263    37    43368.0000    42155.8123  1874160    2.80%
Elapsed time = 1801.99 sec. (589844.46 ticks, tree = 85.73 MB, solutions = 12)
   1057   710    42457.7157    39    43368.0000    42155.8123  1883750    2.80%
   1065   718    42677.6538    37    43368.0000    42155.8123  1894307    2.80%
   1077   724    42716.5444    38    43368.0000    42155.8123  1909857    2.80%
   1093   738    42524.8544    37    43368.0000    42155.8123  1923861    2.80%
   1197   814    42179.5901    50    43368.0000    42179.5901  2023455    2.74%
   1198   815    42180.2194    50    43368.0000    42179.5901  2024305    2.74%
   1199   816    42184.9655    50    43368.0000    42179.7437  2028969    2.74%
   1200   817    42316.3325    47    43368.0000    42179.7437  2038250    2.74%
   1203   820    42476.2672    39    43368.0000    42179.7437  2047148    2.74%
   1205   821    42329.5711    45    43368.0000    42181.5506  2058585    2.74%
Elapsed time = 2212.79 sec. (764219.39 ticks, tree = 151.54 MB, solutions = 12)
   1206   822    42464.6873    48    43368.0000    42181.5506  2071613    2.74%
   1211   824    42635.7428    39    43368.0000    42181.5506  2100828    2.74%
   1215   826    42477.2989    53    43368.0000    42181.5506  2127184    2.74%
   1222   828    42188.0445    48    43368.0000    42181.5506  2136630    2.74%
   1232   834    42492.1506    43    43368.0000    42181.5506  2165713    2.74%
   1241   838    42344.6726    44    43368.0000    42181.5506  2181883    2.74%
   1245   842    42345.2539    41    43368.0000    42181.5506  2224194    2.74%
   1249   844    42206.1770    42    43368.0000    42181.5506  2248239    2.74%
   1257   850    42206.6916    40    43368.0000    42181.5506  2256881    2.74%
   1265   853    42217.8190    36    43368.0000    42181.5506  2285828    2.74%
Elapsed time = 2445.19 sec. (841928.50 ticks, tree = 146.31 MB, solutions = 12)
   1269   856    42220.1997    42    43368.0000    42181.5506  2295177    2.74%
   1277   861    42362.7973    38    43368.0000    42181.5506  2308735    2.74%
   1291   869    42499.9758    38    43368.0000    42181.5506  2334802    2.74%
   1294   872    42686.7212    39    43368.0000    42181.5506  2343949    2.74%
   1323   891    42255.6131    38    43368.0000    42181.5506  2407512    2.74%
   1331   895    42285.8418    34    43368.0000    42181.5506  2419365    2.74%
   1341   902    42805.7878    35    43368.0000    42181.5506  2435009    2.74%
   1353   908    42520.8083    46    43368.0000    42181.5506  2448655    2.74%
   1361   914    42681.7612    31    43368.0000    42181.5506  2477568    2.74%
   1376   923    42270.2597    38    43368.0000    42181.5506  2516876    2.74%
Elapsed time = 2749.30 sec. (942278.90 ticks, tree = 146.71 MB, solutions = 12)
   1383   928    42603.6605    34    43368.0000    42181.5506  2527811    2.74%
*  1391+  684                        43355.0000    42181.5506             2.71%
   1391   686    42566.3425    36    43355.0000    42181.5506  2533452    2.71%
   1400   690    42274.3030    40    43355.0000    42181.5506  2540747    2.71%
   1428   704    42748.3528    37    43355.0000    42181.5506  2567974    2.71%
   1444   715    42442.6013    32    43355.0000    42181.5506  2578905    2.71%
   1461   727    42767.6491    33    43355.0000    42181.5506  2592252    2.71%
   1475   735    42287.8737    36    43355.0000    42181.5506  2607695    2.71%
   1487   741    42332.7056    36    43355.0000    42181.5506  2620184    2.71%
   1507   750    42600.8835    26    43355.0000    42181.5506  2644494    2.71%
   1525   758    42715.9164    31    43355.0000    42181.5506  2659588    2.71%
Elapsed time = 2966.19 sec. (1012747.67 ticks, tree = 122.57 MB, solutions = 13)
   1531   763    42947.1188    30    43355.0000    42181.5506  2665634    2.71%
   1547   771    42658.7972    32    43355.0000    42181.5506  2688549    2.71%
   1552   774    42502.4569    32    43355.0000    42181.5506  2698242    2.71%
   1556   776    42551.6152    39    43355.0000    42181.5506  2706084    2.71%
   1581   788    43313.8587    29    43355.0000    42181.5506  2731100    2.71%
   1590   792    43100.5658    27    43355.0000    42181.5506  2739241    2.71%
   1597   793    42266.0555    50    43355.0000    42181.5506  2745934    2.71%
   1619   803    42525.8595    32    43355.0000    42181.5506  2771985    2.71%
   1633   811    42273.6363    48    43355.0000    42181.5506  2787404    2.71%
   1655   822    42696.5406    29    43355.0000    42181.5506  2813385    2.71%
Elapsed time = 3152.71 sec. (1066905.91 ticks, tree = 145.48 MB, solutions = 13)
   1667   824    42667.2836    28    43355.0000    42181.5506  2826071    2.71%
   1679   825    42589.0060    28    43355.0000    42181.5506  2844383    2.71%
   1687   829    42572.8833    32    43355.0000    42181.5506  2851108    2.71%
   1702   834    43273.1080    18    43355.0000    42181.5506  2868313    2.71%
   1714   838    42261.0791    43    43355.0000    42181.5506  2885357    2.71%
   1731   847    42307.7104    42    43355.0000    42181.5506  2905198    2.71%
   1784   878    43138.8434    27    43355.0000    42181.5506  2958747    2.71%
   1792   883    42954.7269    27    43355.0000    42181.5506  2966326    2.71%
   1812   897    43154.1880    23    43355.0000    42181.5506  2992371    2.71%
   1827   904    42411.3646    40    43355.0000    42181.5506  3013277    2.71%
Elapsed time = 3431.24 sec. (1154052.70 ticks, tree = 156.38 MB, solutions = 13)
   1839   911    42555.5874    33    43355.0000    42181.5506  3025079    2.71%
   1859   918    42435.4123    35    43355.0000    42181.5506  3039866    2.71%
   1890   923    42427.3460    30    43355.0000    42181.5506  3069788    2.71%
   1899   926    42455.6763    40    43355.0000    42181.5506  3077111    2.71%
   1915   930    42607.7367    27    43355.0000    42181.5506  3085174    2.71%
   1931   937    42490.1865    35    43355.0000    42181.5506  3097188    2.71%
   1951   941    42586.0816    32    43355.0000    42181.5506  3109758    2.71%
   1979   952    42632.7528    32    43355.0000    42181.5506  3132413    2.71%
   2012   962    42359.9576    43    43355.0000    42182.0135  3164261    2.71%
   2020   968    42377.1354    44    43355.0000    42182.0135  3183686    2.71%
Elapsed time = 3694.96 sec. (1233484.19 ticks, tree = 190.13 MB, solutions = 13)
   2088  1006    42472.0456    43    43355.0000    42182.0135  3266625    2.71%
   2105  1018    42554.8655    34    43355.0000    42182.0135  3292284    2.71%
   2117  1023    42555.0690    31    43355.0000    42182.0135  3308293    2.71%
   2125  1024    42568.8045    29    43355.0000    42182.0135  3314713    2.71%
   2145  1029    42697.5882    35    43355.0000    42182.0135  3338812    2.71%
   2218  1049    42507.3001    36    43355.0000    42182.0135  3387531    2.71%
   2226  1053    42433.9163    42    43355.0000    42182.0135  3395708    2.71%
   2238  1058    42435.3205    42    43355.0000    42182.0135  3401680    2.71%
   2253  1067    42533.4541    37    43355.0000    42182.0135  3416167    2.71%
   2258  1071    42690.3891    33    43355.0000    42182.0135  3427299    2.71%
Elapsed time = 3890.20 sec. (1292009.86 ticks, tree = 216.98 MB, solutions = 13)
   2262  1071    42456.0612    42    43355.0000    42182.0135  3428539    2.71%
   2278  1079    42639.7357    32    43355.0000    42182.0135  3448368    2.71%
   2286  1084    42697.5806    34    43355.0000    42182.0135  3459375    2.71%
   2294  1087    42909.8056    35    43355.0000    42182.0135  3471647    2.71%
*  2330+ 1085                        43249.0000    42182.0135             2.47%
*  2330+ 1073                        43169.0000    42182.0135             2.29%
   2330  1074    42563.6704    26    43169.0000    42182.0135  3511268    2.29%
   2331  1074    43032.3113    41    43169.0000    42182.0135  3515321    2.29%
   2340  1034    42796.9885    27    43169.0000    42182.0135  3530154    2.29%
   2348  1037    42630.0478    27    43169.0000    42182.0135  3538193    2.29%
   2356  1041    42580.7230    31    43169.0000    42182.0135  3546759    2.29%
   2372  1052    42668.9475    32    43169.0000    42182.0135  3560819    2.29%
Elapsed time = 4152.88 sec. (1378214.49 ticks, tree = 222.47 MB, solutions = 18)
   2404  1075    42592.6048    29    43169.0000    42182.0135  3579341    2.29%
   2424  1090    42606.6245    32    43169.0000    42182.0135  3591060    2.29%
   2448  1105    42865.1520    28    43169.0000    42182.0135  3606359    2.29%
   2476  1123    42610.7787    29    43169.0000    42182.0135  3622603    2.29%
   2528  1174    43157.5961    23    43169.0000    42184.1212  3655235    2.28%
   2536  1180    42324.7614    47    43169.0000    42184.1212  3664396    2.28%
   2544  1188    42347.8961    47    43169.0000    42184.1212  3674102    2.28%
   2568  1212    42372.1108    43    43169.0000    42184.1212  3685575    2.28%
   2588  1232    42391.5089    47    43169.0000    42184.1212  3703663    2.28%
   2632  1272    42762.0250    39    43169.0000    42184.1212  3747666    2.28%
Elapsed time = 4366.08 sec. (1440719.32 ticks, tree = 263.07 MB, solutions = 18)
   2659  1294    42657.0409    38    43169.0000    42184.1212  3767243    2.28%
   2695  1316    42786.9263    36    43169.0000    42185.1018  3787093    2.28%
   2711  1328    42798.3564    33    43169.0000    42185.1018  3797275    2.28%
   2727  1340    42823.3605    35    43169.0000    42185.1018  3812954    2.28%
   2735  1348    43044.4840    35    43169.0000    42185.1018  3827013    2.28%
   2755  1366    43078.0553    36    43169.0000    42185.1018  3845070    2.28%
   2787  1391    43137.3819    35    43169.0000    42185.1018  3864765    2.28%
   2798  1398    42489.3404    41    43169.0000    42185.1018  3876928    2.28%
   2822  1420    42502.0261    33    43169.0000    42185.1018  3884638    2.28%
   2879  1462    42641.1096    37    43169.0000    42185.1018  3925887    2.28%
Elapsed time = 4546.46 sec. (1491916.60 ticks, tree = 300.39 MB, solutions = 18)
   2893  1469    43123.7576    36    43169.0000    42185.1018  3936823    2.28%
   2921  1493    43139.4474    39    43169.0000    42185.1018  3949826    2.28%
   2945  1507    42271.8368    43    43169.0000    42185.1018  3964716    2.28%
   2965  1523    42375.9209    50    43169.0000    42185.1018  3981643    2.28%
   2975  1531    42320.9912    36    43169.0000    42185.1018  3989567    2.28%
   2985  1539    42342.3796    48    43169.0000    42185.1018  3998410    2.28%
   3003  1553    42467.8962    43    43169.0000    42185.1018  4016500    2.28%
   3009  1559    42326.6600    38    43169.0000    42185.1018  4023521    2.28%
   3021  1570    42594.7906    42    43169.0000    42185.1018  4037663    2.28%
   3100  1601    42624.1896    39    43169.0000    42185.1018  4071469    2.28%
Elapsed time = 4725.53 sec. (1544495.75 ticks, tree = 339.11 MB, solutions = 18)
   3146  1630    42571.5990    39    43169.0000    42186.7793  4100993    2.28%
   3168  1652    42949.0579    29    43169.0000    42186.7793  4121356    2.28%
   3176  1659    43045.4603    40    43169.0000    42186.7793  4130411    2.28%
   3192  1672    43058.2444    35    43169.0000    42186.7793  4142603    2.28%
   3212  1692    43113.4703    32    43169.0000    42186.7793  4162742    2.28%
   3232  1710    43121.7861    33    43169.0000    42186.7793  4178196    2.28%
   3238  1715    42480.7355    36    43169.0000    42186.7793  4185782    2.28%
   3258  1735    42560.1021    33    43169.0000    42186.7793  4197927    2.28%
   3266  1743    42608.4633    35    43169.0000    42186.7793  4208700    2.28%
   3326  1785    42945.6488    23    43169.0000    42186.7793  4256907    2.28%
Elapsed time = 4929.41 sec. (1603227.07 ticks, tree = 420.74 MB, solutions = 18)
   3338  1796    42623.7121    30    43169.0000    42186.7793  4265845    2.28%
   3354  1808    42646.8694    32    43169.0000    42186.7793  4277457    2.28%
   3366  1817    42672.8037    36    43169.0000    42186.7793  4286363    2.28%
   3370  1821    42737.0488    37    43169.0000    42186.7793  4291163    2.28%
   3394  1837    42878.2554    32    43169.0000    42186.7793  4301085    2.28%
   3412  1853    42438.0266    55    43169.0000    42186.7793  4305035    2.28%
   3432  1862    42462.7025    46    43169.0000    42186.7793  4320012    2.28%
   3452  1876    42880.5039    34    43169.0000    42186.7793  4344675    2.28%
   3472  1885    42885.8359    37    43169.0000    42186.7793  4358477    2.28%
   3485  1896    42347.0909    46    43169.0000    42186.7793  4368035    2.28%
Elapsed time = 5102.75 sec. (1652069.51 ticks, tree = 420.74 MB, solutions = 18)
   3537  1936    43030.2739    31    43169.0000    42190.2987  4420398    2.27%
   3550  1949    42606.1600    41    43169.0000    42190.2987  4435765    2.27%
   3562  1958    42389.2943    44    43169.0000    42190.2987  4447619    2.27%
   3574  1968    42618.7341    36    43169.0000    42190.2987  4464325    2.27%
   3582  1976    42442.2339    44    43169.0000    42190.2987  4474311    2.27%
   3594  1986    42502.0113    38    43169.0000    42190.2987  4484415    2.27%
   3606  1997    42560.1814    38    43169.0000    42190.2987  4497026    2.27%
   3626  2012    42559.7748    39    43169.0000    42190.2987  4511549    2.27%
   3634  2019    42574.2631    37    43169.0000    42190.2987  4519655    2.27%
   3650  2027    42599.6710    36    43169.0000    42190.2987  4529721    2.27%
Elapsed time = 5301.36 sec. (1710477.47 ticks, tree = 461.51 MB, solutions = 18)
   3727  2085    42576.2897    34    43169.0000    42190.2987  4596836    2.27%
   3736  2094    42949.4091    42    43169.0000    42190.2987  4614621    2.27%
   3747  2104    42686.2415    37    43169.0000    42190.2987  4626891    2.27%
   3758  2113    42292.2253    47    43169.0000    42190.2987  4633908    2.27%
   3770  2125    42296.7984    50    43169.0000    42190.2987  4643766    2.27%
   3783  2138    42617.5768    39    43169.0000    42190.2987  4657547    2.27%
   3799  2152    42801.1333    36    43169.0000    42190.2987  4667050    2.27%
   3811  2160    42714.6537    33    43169.0000    42190.2987  4675076    2.27%
   3819  2166    42968.3965    37    43169.0000    42190.2987  4684415    2.27%
   3827  2174    42963.3289    38    43169.0000    42190.2987  4689282    2.27%
Elapsed time = 5509.87 sec. (1767640.70 ticks, tree = 500.55 MB, solutions = 18)
   3847  2190        cutoff          43169.0000    42190.2987  4703744    2.27%
   3871  2208    43028.0379    33    43169.0000    42190.2987  4716382    2.27%
   3985  2266    42256.9409    44    43169.0000    42190.2987  4780011    2.27%
   4016  2285    42282.0787    44    43169.0000    42190.2987  4792301    2.27%
   4033  2295    42283.7392    41    43169.0000    42190.2987  4804201    2.27%
   4056  2317    42293.7708    43    43169.0000    42190.2987  4816415    2.27%
   4072  2331    42316.6212    42    43169.0000    42190.2987  4832620    2.27%
   4076  2333    42764.3978    33    43169.0000    42190.2987  4838455    2.27%
   4088  2343    42814.7901    33    43169.0000    42190.2987  4857100    2.27%
   4092  2347    43059.8543    32    43169.0000    42190.2987  4863803    2.27%
Elapsed time = 5687.25 sec. (1817636.99 ticks, tree = 548.72 MB, solutions = 18)
   4100  2354    43146.5740    28    43169.0000    42190.2987  4871109    2.27%
   4109  2363    42357.9760    42    43169.0000    42190.2987  4879133    2.27%
   4117  2367    42362.5951    45    43169.0000    42190.2987  4884779    2.27%
   4141  2380    42374.8839    38    43169.0000    42190.2987  4898776    2.27%
   4165  2400    42411.7313    40    43169.0000    42190.2987  4913372    2.27%
   4180  2415    42467.3534    39    43169.0000    42190.2987  4924218    2.27%
   4242  2473    42496.7840    37    43169.0000    42193.9549  4971855    2.26%
   4259  2488    42971.9674    31    43169.0000    42193.9549  4995621    2.26%
   4260  2489    42369.4336    44    43169.0000    42193.9549  4995710    2.26%
   4276  2504    42382.1036    44    43169.0000    42193.9549  5009525    2.26%
Elapsed time = 5888.37 sec. (1876883.29 ticks, tree = 601.41 MB, solutions = 18)
   4288  2513    42408.5116    41    43169.0000    42193.9549  5017160    2.26%
   4304  2526    42431.7379    44    43169.0000    42193.9549  5030506    2.26%
   4308  2530    42839.6760    38    43169.0000    42193.9549  5038612    2.26%
   4316  2533    42976.8894    40    43169.0000    42193.9549  5046460    2.26%
   4340  2549    42978.5174    39    43169.0000    42193.9549  5058390    2.26%
   4368  2564    42999.1425    36    43169.0000    42193.9549  5098956    2.26%
   4396  2589    43027.7753    37    43169.0000    42193.9549  5130166    2.26%
   4420  2612    43154.3279    34    43169.0000    42193.9549  5148373    2.26%
   4436  2624    42623.6313    38    43169.0000    42193.9549  5164427    2.26%
   4454  2642    42541.7683    42    43169.0000    42195.0503  5187143    2.26%
Elapsed time = 6053.63 sec. (1926089.29 ticks, tree = 646.89 MB, solutions = 18)
   4467  2655    42461.2632    48    43169.0000    42195.0503  5195287    2.26%
   4479  2665    42476.3107    46    43169.0000    42195.0503  5208905    2.26%
   4503  2686    42483.6723    41    43169.0000    42195.0503  5228839    2.26%
   4518  2696    42780.6577    46    43169.0000    42195.0503  5245956    2.26%
   4526  2704    42587.3411    38    43169.0000    42195.0503  5252078    2.26%
   4538  2714    42684.1201    34    43169.0000    42195.0503  5260204    2.26%
   4550  2722    42682.0275    30    43169.0000    42195.0503  5272751    2.26%
   4566  2738    42634.6125    39    43169.0000    42195.0503  5287564    2.26%
   4574  2746    42613.4125    31    43169.0000    42195.0503  5296495    2.26%
   4586  2758    42928.5815    32    43169.0000    42195.0503  5309962    2.26%
Elapsed time = 6276.34 sec. (1990938.32 ticks, tree = 646.89 MB, solutions = 18)
   4590  2762    42927.3844    28    43169.0000    42195.0503  5319251    2.26%
   4668  2809    42352.8289    36    43169.0000    42195.0503  5382853    2.26%
   4725  2855    43154.6952    29    43169.0000    42195.2306  5425628    2.26%
   4730  2860    42621.8903    34    43169.0000    42195.2306  5434479    2.26%
   4741  2868    42523.9360    43    43169.0000    42195.2306  5443411    2.26%
   4757  2884    42547.8493    44    43169.0000    42195.2306  5459114    2.26%
   4769  2896    42556.6468    46    43169.0000    42195.2306  5466427    2.26%
   4777  2904    42578.1382    53    43169.0000    42195.2306  5488737    2.26%
   4789  2913    42586.6303    47    43169.0000    42195.2306  5503981    2.26%
   4798  2922    42662.6226    36    43169.0000    42195.2306  5512504    2.26%
Elapsed time = 6443.41 sec. (2039848.22 ticks, tree = 703.63 MB, solutions = 18)
   4806  2928    42814.0787    30    43169.0000    42195.2306  5521706    2.26%
   4818  2938    43097.8136    38    43169.0000    42195.2306  5531803    2.26%
   4838  2956    42874.3697    32    43169.0000    42195.2306  5556713    2.26%
   4846  2964    42858.2349    38    43169.0000    42195.2306  5566700    2.26%
   4862  2978    42872.2200    31    43169.0000    42195.2306  5582291    2.26%
   4874  2986    43035.9161    31    43169.0000    42195.2306  5603367    2.26%
   4890  3002    42888.7024    35    43169.0000    42195.2306  5622976    2.26%
*  4897+ 3007                        43103.0000    42195.2306             2.11%
   4941  2861    42869.6912    34    43103.0000    42195.9150  5678203    2.10%
   4949  2869    42703.8646    33    43103.0000    42195.9150  5691719    2.10%
   4961  2881    42710.5463    31    43103.0000    42195.9150  5699238    2.10%
Elapsed time = 6641.60 sec. (2098559.97 ticks, tree = 664.92 MB, solutions = 19)
   4980  2895    42540.8511    36    43103.0000    42195.9150  5717285    2.10%
   4981  2895    43048.5696    37    43103.0000    42195.9150  5723140    2.10%
   5000  2908    42562.4523    43    43103.0000    42195.9150  5740831    2.10%
   5016  2918    42576.9641    42    43103.0000    42195.9150  5757647    2.10%
   5024  2925    42605.0951    37    43103.0000    42195.9150  5771086    2.10%
   5032  2933    42626.8592    41    43103.0000    42195.9150  5784468    2.10%
   5040  2939    42649.1164    43    43103.0000    42195.9150  5794550    2.10%
   5048  2945    42655.3385    38    43103.0000    42195.9150  5801775    2.10%
   5064  2959    42680.2732    35    43103.0000    42195.9150  5821327    2.10%
   5072  2967    42715.7367    38    43103.0000    42195.9150  5839359    2.10%
Elapsed time = 6807.69 sec. (2146881.95 ticks, tree = 664.92 MB, solutions = 19)
   5084  2979    42715.9902    39    43103.0000    42195.9150  5858750    2.10%
   5092  2987    42880.0195    32    43103.0000    42195.9150  5868868    2.10%
   5100  2995    42866.3741    30    43103.0000    42195.9150  5879216    2.10%
   5142  3021    42325.9938    40    43103.0000    42195.9150  5914710    2.10%
   5170  3046    42335.0970    39    43103.0000    42195.9150  5931010    2.10%
   5185  3058    42481.4732    35    43103.0000    42195.9150  5944499    2.10%
   5211  3076    42647.5121    46    43103.0000    42199.0964  5968771    2.10%
   5236  3097    42588.8717    34    43103.0000    42199.0964  5981887    2.10%
   5261  3119    42728.2214    40    43103.0000    42199.0964  6001114    2.10%
   5272  3126    43073.1257    27    43103.0000    42199.0964  6010825    2.10%
Elapsed time = 6982.96 sec. (2198649.14 ticks, tree = 719.02 MB, solutions = 19)
   5297  3140    43068.7726    31    43103.0000    42199.0964  6020142    2.10%
   5317  3148    42408.1251    45    43103.0000    42199.0964  6035051    2.10%
   5325  3154    42466.3161    48    43103.0000    42199.0964  6042556    2.10%
   5339  3162    42481.2727    47    43103.0000    42199.0964  6055288    2.10%
   5348  3167    42519.6680    46    43103.0000    42199.0964  6065651    2.10%
   5360  3177    42529.1709    45    43103.0000    42199.0964  6074033    2.10%
   5378  3193    42758.7115    40    43103.0000    42199.0964  6090678    2.10%
   5393  3208    43078.9714    39    43103.0000    42199.0964  6109594    2.10%
   5417  3225    42308.1763    45    43103.0000    42199.0964  6125889    2.10%

Mixed integer rounding cuts applied:  4599
Lift and project cuts applied:  12
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =  211.93 sec. (109533.58 ticks)
Parallel b&c, 4 threads:
  Real time             = 6988.12 sec. (2153406.06 ticks)
  Sync time (average)   =  277.60 sec.
  Wait time (average)   =  277.87 sec.
                          ------------
Total (root+branch&cut) = 7200.05 sec. (2262939.64 ticks)
We use intensification finding a better solution: 43103.0
================ Solution ================
BAP terminated with objective : 43103
Total Number of iterations: 106
Total Number of processed nodes: 4
Total Time spent on master problems: 642406 Total time spent on pricing problems: 14986
Best bound : 41888.1381818182
[15, 22, 32, 63, 73, 75, 91, 98, 114, 147, 149, 173, 183, 186, 194, 199, 206, 210, 214, 218, 220, 222, 223, 227, 229, 255, 261, 280, 301, 303, 309, 320, 326, 328, 337, 339, 351, 355, 360, 367, 372, 381, 422, 445, 475, 491, 506, 525, 540, 558, 563, 584, 586, 589, 607, 653, 656, 666, 673, 711, 713, 733, 749, 770, 779, 781, 787, 795, 797, 812, 814, 818, 819, 825, 836, 865, 873, 875]
The number of service edges used= 78

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false edgeIndexset: [355, 666, 91, 222, 558] start node= 4 start time= 18 capacity type= 1 ifChargeSet: []
(0,1)->(5,6)->(1,12)->(4,18)->(3,25)->(0,1):1.0
Fix cost= 150 variable cost= 120

artificial: false edgeIndexset: [32, 656, 261, 309, 825] start node= 5 start time= 26 capacity type= 2 ifChargeSet: []
(0,2)->(2,9)->(6,15)->(1,21)->(5,26)->(0,2):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [914, 787, 301, 173, 15] start node= 1 start time= 23 capacity type= 2 ifChargeSet: []
(2,1)->(6,7)->(0,14)->(0,15)->(1,23)->(2,1):1.0
Fix cost= 300 variable cost= 116

artificial: false edgeIndexset: [673, 98, 199, 781, 445] start node= 5 start time= 13 capacity type= 2 ifChargeSet: []
(6,1)->(0,8)->(5,13)->(1,19)->(3,25)->(6,1):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [563, 227, 372, 935, 360, 186] start node= 1 start time= 5 capacity type= 2 ifChargeSet: []
(3,0)->(1,5)->(1,6)->(3,12)->(1,17)->(4,23)->(3,0):1.0
Fix cost= 300 variable cost= 116

artificial: false edgeIndexset: [326, 711, 584, 218, 812] start node= 5 start time= 21 capacity type= 2 ifChargeSet: []
(6,2)->(1,8)->(4,14)->(5,21)->(2,26)->(6,2):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [1026, 210, 22, 795, 607] start node= 1 start time= 0 capacity type= 2 ifChargeSet: []
(1,0)->(4,6)->(4,7)->(6,15)->(0,22)->(1,0):1.0
Fix cost= 300 variable cost= 116

artificial: false edgeIndexset: [328, 713, 586, 220, 814] start node= 5 start time= 23 capacity type= 2 ifChargeSet: []
(6,4)->(1,10)->(4,16)->(5,23)->(2,28)->(6,4):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [114, 280, 779, 797, 814] start node= 5 start time= 29 capacity type= 2 ifChargeSet: []
(6,4)->(1,10)->(6,17)->(0,24)->(5,29)->(6,4):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [865, 770, 819, 255, 303] start node= 5 start time= 20 capacity type= 2 ifChargeSet: []
(2,3)->(6,9)->(1,15)->(5,20)->(6,25)->(2,3):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [1010, 194, 818, 422, 381, 206] start node= 1 start time= 26 capacity type= 2 ifChargeSet: []
(3,2)->(6,8)->(1,14)->(3,20)->(3,21)->(1,26)->(3,2):1.0
Fix cost= 300 variable cost= 116

artificial: false edgeIndexset: [948, 229, 1030, 491, 475, 63] start node= 1 start time= 18 capacity type= 1 ifChargeSet: []
(0,3)->(4,10)->(4,11)->(1,18)->(1,19)->(4,25)->(0,3):1.0
Fix cost= 200 variable cost= 112

artificial: false edgeIndexset: [147, 1061, 1062, 873, 733, 351] start node= 5 start time= 11 capacity type= 2 ifChargeSet: []
(6,3)->(5,11)->(5,12)->(5,13)->(3,21)->(0,27)->(6,3):1.0
Fix cost= 350 variable cost= 112

artificial: false edgeIndexset: [1042, 1043, 339, 1044, 1045, 183, 506, 75] start node= 4 start time= 26 capacity type= 1 ifChargeSet: []
(1,3)->(3,9)->(0,15)->(4,22)->(4,23)->(4,24)->(4,25)->(4,26)->(1,3):1.0
Fix cost= 150 variable cost= 104

artificial: false edgeIndexset: [1076, 1077, 1078, 589, 749, 942, 223, 367] start node= 5 start time= 26 capacity type= 2 ifChargeSet: []
(3,7)->(1,12)->(1,13)->(4,19)->(5,26)->(5,27)->(5,28)->(5,29)->(3,7):1.0
Fix cost= 350 variable cost= 104

artificial: false edgeIndexset: [320, 836, 932, 933, 1030, 214, 1031, 1032, 1033, 1034, 525] start node= 1 start time= 2 capacity type= 2 ifChargeSet: []
(1,2)->(1,3)->(1,4)->(4,10)->(4,11)->(4,12)->(4,13)->(4,14)->(4,15)->(2,20)->(6,26)->(1,2):1.0
Fix cost= 300 variable cost= 92

artificial: false edgeIndexset: [73, 1040, 337, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 540] start node= 4 start time= 20 capacity type= 0 ifChargeSet: []
(4,0)->(3,7)->(0,13)->(4,20)->(4,21)->(4,22)->(4,23)->(4,24)->(4,25)->(4,26)->(4,27)->(4,28)->(4,29)->(4,0):1.0
Fix cost= 50 variable cost= 80

artificial: false edgeIndexset: [1063, 1064, 1065, 1066, 1067, 875, 1068, 1069, 653, 1070, 1071, 1072, 149] start node= 5 start time= 21 capacity type= 0 ifChargeSet: []
(6,5)->(5,13)->(5,14)->(5,15)->(5,16)->(5,17)->(5,18)->(5,19)->(5,20)->(5,21)->(5,22)->(5,23)->(0,29)->(6,5):1.0
Fix cost= 75 variable cost= 80

fix cost+variable cost+commodity cost= 4925+1988+36190.0=43103.0

vehicle dowork= 42300 commodity dowork= 36190.0
no load ratio= 0.14444444444444443

Total vehicles used= 18

vehicleCoverServiceEdge information:
{770=1, 261=1, 779=1, 781=1, 525=1, 653=1, 15=1, 656=1, 787=1, 147=1, 149=1, 22=1, 280=1, 666=1, 795=1, 540=1, 797=1, 32=1, 673=1, 422=1, 812=1, 301=1, 173=1, 558=1, 814=2, 303=1, 818=1, 563=1, 819=1, 309=1, 183=1, 825=1, 186=1, 445=1, 63=1, 320=1, 194=1, 836=1, 326=1, 199=1, 711=1, 584=1, 328=1, 713=1, 73=1, 586=1, 75=1, 589=1, 206=1, 337=1, 210=1, 339=1, 214=1, 218=1, 91=1, 475=1, 220=1, 733=1, 222=1, 607=1, 351=1, 223=1, 865=1, 98=1, 355=1, 227=1, 229=1, 360=1, 873=1, 491=1, 875=1, 749=1, 367=1, 114=1, 372=1, 506=1, 381=1, 255=1}

commodityFlowIntoTerminal information:
0 50 100 50 0 0 0 0 50 0 0 0 0 20 100 50 0 0 0 0 0 0 91 0 98 0 0 100 0 20 
100 0 100 50 0 100 0 0 100 0 167 0 150 0 100 100 0 100 40 100 0 100 0 100 0 0 100 0 0 0 
0 85 0 66 0 0 0 0 0 76 0 0 0 0 0 0 0 0 0 0 51 0 0 0 0 0 100 0 52 0 
100 0 100 0 0 0 0 93 0 50 0 0 74 0 0 0 0 0 0 0 100 99 0 0 0 150 0 0 0 0 
0 0 0 0 0 0 100 0 0 0 138 0 0 0 56 0 100 0 50 74 20 0 25 100 0 50 0 0 0 0 
0 0 0 0 0 0 28 0 0 0 0 54 0 2 0 0 0 0 0 0 100 100 0 70 0 0 182 0 0 36 
0 100 57 100 188 20 0 89 15 100 0 0 0 0 0 161 0 86 0 0 0 0 0 0 0 94 56 0 0 0 

vehicle pattern information:
[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
[0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
x[0]:5,29->3,7= 26.0 8
total cost= 208.0

x[1]:0,29->6,5= 19.0 6
total cost= 114.0

x[2]:0,15->1,23= 9.0 8
x[2]:0,22->1,0= 20.0 8
total cost= 232.0

x[3]:5,20->6,25= 22.0 5
total cost= 110.0

x[4]:1,8->4,14= 9.0 6
x[4]:1,17->4,23= 11.0 6
x[4]:3,0->1,5= 9.0 5
x[4]:3,12->1,17= 11.0 5
total cost= 220.0

x[5]:0,3->4,10= 24.0 7
total cost= 168.0

x[6]:3,21->0,27= 26.0 6
total cost= 156.0

x[7]:1,3->3,9= 15.0 6
x[7]:1,26->3,2= 15.0 6
x[7]:6,15->1,21= 15.0 6
x[7]:6,26->1,2= 15.0 6
total cost= 360.0

x[8]:1,6->3,12= 14.0 6
total cost= 84.0

x[9]:4,19->5,26= 18.0 7
total cost= 126.0

x[10]:6,25->2,3= 17.999999999999996 8
total cost= 143.99999999999997

x[11]:1,10->4,16= 18.0 6
x[11]:6,2->1,8= 18.0 6
total cost= 216.0

x[12]:1,10->4,16= 10.0 6
x[12]:6,4->1,10= 10.0 6
total cost= 120.0

x[13]:1,23->2,1= 11.0 8
total cost= 88.0

x[14]:6,15->0,22= 24.0 7
x[14]:2,9->6,15= 24.0 6
total cost= 312.0

x[15]:4,19->5,26= 28.0 7
total cost= 196.0

x[16]:6,2->1,8= 15.0 6
x[16]:6,9->1,15= 14.0 6
total cost= 174.0

x[17]:1,10->6,17= 28.0 7
total cost= 196.0

x[18]:6,15->0,22= 25.0 7
total cost= 175.0

x[19]:1,23->2,1= 10.0 8
total cost= 80.0

x[20]:5,20->6,25= 27.999999999999968 5
total cost= 139.99999999999983

x[21]:4,18->3,25= 20.0 7
total cost= 140.0

x[22]:0,24->5,29= 22.0 5
x[22]:5,29->3,7= 22.0 8
total cost= 286.0

x[23]:1,19->3,25= 11.0 6
x[23]:3,25->0,1= 11.0 6
total cost= 132.0

x[24]:6,25->2,3= 22.0 8
total cost= 176.0

x[25]:5,23->2,28= 26.0 5
total cost= 130.0

x[26]:5,13->3,21= 30.0 8
total cost= 240.0

x[27]:4,19->5,26= 24.0 7
total cost= 168.0

x[28]:4,15->2,20= 30.0 5
total cost= 150.0

x[29]:4,23->3,0= 29.0 7
total cost= 203.0

x[30]:1,15->5,20= 21.0 5
x[30]:5,21->2,26= 21.0 5
total cost= 210.0

x[31]:0,13->4,20= 7.0 7
x[31]:0,15->4,22= 19.0 7
total cost= 182.0

x[32]:6,1->0,8= 29.0 7
total cost= 203.0

x[33]:0,13->4,20= 13.0 7
total cost= 91.0

x[34]:6,7->0,14= 16.0 7
x[34]:2,26->6,2= 16.0 6
total cost= 208.0

x[35]:1,3->3,9= 13.0 6
x[35]:6,26->1,2= 13.0 6
total cost= 156.0

x[36]:3,21->1,26= 25.0 5
total cost= 125.0

x[37]:4,11->1,18= 12.0 7
x[37]:4,26->1,3= 14.0 7
total cost= 182.0

x[38]:1,0->4,6= 29.0 6
x[38]:3,21->1,26= 29.0 5
total cost= 319.0

x[39]:1,4->4,10= 8.999999999999986 6
x[39]:1,8->4,14= 1.0000000000000142 6
total cost= 60.0

x[40]:3,25->6,1= 12.0 6
total cost= 72.0

x[41]:4,14->5,21= 26.0 7
total cost= 182.0

x[42]:1,19->3,25= 11.0 6
x[42]:1,21->5,26= 9.0 5
x[42]:3,25->0,1= 11.0 6
x[42]:5,26->0,2= 9.0 6
total cost= 231.0

x[43]:6,7->0,14= 21.0 7
x[43]:2,28->6,4= 21.0 6
total cost= 273.0

x[44]:5,21->2,26= 10.0 5
total cost= 50.0

x[45]:5,23->0,29= 12.000000000000027 6
total cost= 72.00000000000016

x[46]:6,4->1,10= 11.0 6
total cost= 66.0

x[47]:5,26->0,2= 12.0 6
total cost= 72.0

x[48]:6,4->1,10= 27.0 6
x[48]:2,28->6,4= 27.0 6
total cost= 324.0

x[49]:1,15->5,20= 16.0 5
total cost= 80.0

x[50]:5,21->2,26= 7.999999999999986 5
x[50]:5,23->2,28= 4.000000000000014 5
total cost= 60.0

x[51]:1,19->3,25= 10.0 6
x[51]:3,25->0,1= 10.0 6
total cost= 120.0

x[52]:1,15->5,20= 30.0 5
x[52]:5,21->2,26= 30.0 5
total cost= 300.0

x[53]:2,9->6,15= 23.0 6
x[53]:6,15->1,21= 23.0 6
x[53]:1,26->3,2= 23.0 6
total cost= 414.0

x[54]:5,26->0,2= 26.0 6
total cost= 156.0

x[55]:3,7->0,13= 17.0 6
total cost= 102.0

x[56]:6,1->0,8= 21.0 7
total cost= 147.0

x[57]:2,1->6,7= 28.0 6
x[57]:6,8->1,14= 28.0 6
x[57]:1,14->3,20= 20.0 6
x[57]:1,19->3,25= 8.0 6
total cost= 504.0

x[58]:4,0->3,7= 4.0 7
x[58]:4,23->3,0= 24.0 7
total cost= 196.0

x[59]:1,10->4,16= 30.0 6
x[59]:6,4->1,10= 30.0 6
total cost= 360.0

x[60]:3,2->6,8= 15.0 6
x[60]:3,25->6,1= 12.0 6
total cost= 162.0

x[61]:4,11->1,18= 27.0 7
total cost= 189.0

x[62]:2,9->6,15= 10.0 6
x[62]:6,15->1,21= 10.0 6
x[62]:1,26->3,2= 10.0 6
total cost= 180.0

x[63]:5,29->3,7= 25.0 8
total cost= 200.0

x[64]:0,27->6,3= 11.0 6
total cost= 66.0

x[65]:1,8->4,14= 22.0 6
x[65]:3,0->1,5= 22.0 5
total cost= 242.0

x[66]:1,10->4,16= 11.0 6
x[66]:3,0->1,5= 11.0 5
total cost= 121.0

x[67]:6,17->0,24= 19.0 7
x[67]:2,1->6,7= 19.0 6
total cost= 247.0

x[68]:1,6->3,12= 11.0 6
x[68]:6,15->1,21= 9.0 6
x[68]:6,26->1,2= 2.0 6
total cost= 132.0

x[69]:1,10->6,17= 25.999999999999986 7
total cost= 181.9999999999999

x[70]:6,7->0,14= 6.0 7
x[70]:6,17->0,24= 13.0 7
total cost= 133.0

x[71]:6,4->1,10= 28.0 6
x[71]:2,28->6,4= 28.0 6
x[71]:1,14->3,20= 28.0 6
total cost= 504.0

x[72]:5,13->1,19= 20.0 6
total cost= 120.0

x[73]:6,17->0,24= 21.0 7
x[73]:2,3->6,9= 21.0 6
total cost= 273.0

x[74]:1,14->3,20= 27.0 6
x[74]:6,4->1,10= 17.0 6
x[74]:6,8->1,14= 10.0 6
total cost= 324.0

x[75]:3,9->0,15= 26.0 6
total cost= 156.0

x[76]:3,7->1,12= 11.0 5
x[76]:3,12->1,17= 9.0 5
total cost= 100.0

x[77]:4,19->5,26= 18.0 7
total cost= 126.0

x[78]:6,15->0,22= 29.0 7
x[78]:2,1->6,7= 13.0 6
x[78]:2,3->6,9= 12.0 6
x[78]:2,28->6,4= 4.0 6
total cost= 377.0

x[79]:6,15->0,22= 13.0 7
total cost= 91.0

x[80]:4,7->6,15= 20.0 8
total cost= 160.0

x[81]:4,14->5,21= 10.0 7
total cost= 70.0

x[82]:4,16->5,23= 30.0 7
total cost= 210.0

x[83]:0,27->6,3= 29.0 6
total cost= 174.0

x[84]:1,4->4,10= 27.0 6
x[84]:3,12->1,17= 27.0 5
total cost= 297.0

x[85]:1,19->3,25= 10.0 6
x[85]:1,26->3,2= 7.0 6
x[85]:3,9->0,15= 7.0 6
x[85]:3,25->0,1= 10.0 6
total cost= 204.0

x[86]:6,8->1,14= 12.0 6
total cost= 72.0

x[87]:5,29->6,4= 17.0 5
total cost= 85.0

x[88]:5,23->0,29= 7.999999999999973 6
x[88]:5,26->0,2= 8.000000000000027 6
total cost= 96.0

x[89]:0,15->1,23= 22.0 8
total cost= 176.0

x[90]:5,6->1,12= 30.0 6
x[90]:1,13->4,19= 30.0 6
total cost= 360.0

x[91]:1,10->6,17= 23.0 7
total cost= 161.0

x[92]:4,23->3,0= 30.0 7
total cost= 210.0

x[93]:5,6->1,12= 10.0 6
x[93]:1,13->4,19= 10.0 6
total cost= 120.0

x[94]:4,15->2,20= 21.0 5
total cost= 105.0

x[95]:6,17->0,24= 24.0 7
total cost= 168.0

x[96]:1,23->2,1= 20.999999999999954 8
total cost= 167.99999999999963

x[97]:1,13->4,19= 26.0 6
x[97]:3,7->1,12= 26.0 5
total cost= 286.0

x[98]:0,2->2,9= 20.0 7
total cost= 140.0

x[99]:6,3->5,11= 12.0 8
total cost= 96.0

x[100]:1,19->3,25= 30.0 6
total cost= 180.0

x[101]:1,3->3,9= 9.0 6
x[101]:1,6->3,12= 6.0 6
total cost= 90.0

x[102]:0,27->6,3= 28.0 6
x[102]:0,29->6,5= 1.0 6
total cost= 174.0

x[103]:1,10->6,17= 10.0 7
total cost= 70.0

x[104]:3,21->1,26= 28.0 5
total cost= 140.0

x[105]:3,21->0,27= 12.0 6
total cost= 72.0

x[106]:5,20->6,25= 19.0 5
total cost= 95.0

x[107]:5,26->0,2= 26.0 6
total cost= 156.0

x[108]:6,3->5,11= 26.0 8
total cost= 208.0

x[109]:6,7->0,14= 28.0 7
total cost= 196.0

x[110]:5,13->1,19= 25.0 6
total cost= 150.0

x[111]:5,26->0,2= 12.0 6
total cost= 72.0

x[112]:2,20->6,26= 21.0 6
x[112]:6,26->1,2= 21.0 6
x[112]:1,6->3,12= 21.0 6
total cost= 378.0

x[113]:0,22->1,0= 24.0 8
total cost= 192.0

x[114]:1,4->4,10= 14.0 6
x[114]:6,26->1,2= 14.0 6
total cost= 168.0

x[115]:4,7->6,15= 20.0 8
total cost= 160.0

x[116]:3,25->6,1= 29.0 6
total cost= 174.0

x[117]:4,7->6,15= 17.0 8
total cost= 136.0

x[118]:4,14->5,21= 17.0 7
total cost= 119.0

x[119]:6,17->0,24= 21.0 7
total cost= 147.0

x[120]:0,2->2,9= 29.0 7
total cost= 203.0

x[121]:2,20->6,26= 22.0 6
x[121]:6,26->1,2= 22.0 6
x[121]:1,6->3,12= 22.0 6
total cost= 396.0

x[122]:1,4->4,10= 10.0 6
x[122]:3,21->1,26= 10.0 5
total cost= 110.0

x[123]:5,13->3,21= 26.0 8
total cost= 208.0

x[124]:0,24->5,29= 14.0 5
total cost= 70.0

x[125]:0,1->5,6= 4.5 5
x[125]:1,15->5,20= 16.5 5
x[125]:3,21->0,27= 3.0 6
x[125]:3,25->0,1= 1.5 6
x[125]:3,0->1,5= 4.0 5
x[125]:3,7->1,12= 8.5 5
x[125]:3,21->1,26= 4.0 5
total cost= 214.5

x[126]:5,29->6,4= 28.0 5
total cost= 140.0

x[127]:1,4->4,10= 29.0 6
total cost= 174.0

x[128]:1,19->3,25= 20.0 6
x[128]:6,8->1,14= 20.0 6
total cost= 240.0

x[129]:2,20->6,26= 13.0 6
x[129]:6,26->1,2= 13.0 6
x[129]:1,3->3,9= 13.0 6
total cost= 234.0

x[130]:1,0->4,6= 16.0 6
x[130]:1,19->4,25= 3.0 6
x[130]:6,9->1,15= 19.0 6
total cost= 228.0

x[131]:4,14->5,21= 30.0 7
total cost= 210.0

x[132]:4,16->5,23= 14.0 7
total cost= 98.0

x[133]:6,25->2,3= 26.0 8
total cost= 208.0

x[134]:0,27->6,3= 14.0 6
total cost= 84.0

x[135]:5,13->3,21= 20.0 8
total cost= 160.0

x[136]:5,23->2,28= 22.0 5
total cost= 110.0

x[137]:0,3->4,10= 12.0 7
total cost= 84.0

x[138]:3,7->0,13= 1.0 6
x[138]:3,9->0,15= 17.0 6
x[138]:3,25->0,1= 5.0 6
total cost= 138.0

x[139]:1,21->5,26= 20.0 5
total cost= 100.0

x[140]:4,16->5,23= 13.0 7
total cost= 91.0

x[141]:1,26->3,2= 15.0 6
x[141]:6,8->1,14= 1.0 6
x[141]:6,15->1,21= 14.0 6
total cost= 180.0

x[142]:4,7->6,15= 18.0 8
total cost= 144.0

x[143]:4,25->0,3= 4.000000000000014 8
x[143]:4,14->5,21= 3.0 7
x[143]:4,19->5,26= 2.999999999999986 7
x[143]:5,26->0,2= 5.999999999999986 6
total cost= 109.99999999999993

x[144]:1,26->3,2= 30.0 6
total cost= 180.0

x[145]:1,21->5,26= 23.0 5
total cost= 115.0

x[146]:1,12->4,18= 30.0 6
x[146]:3,0->1,5= 30.0 5
total cost= 330.0

x[147]:3,21->0,27= 27.0 6
total cost= 162.0

x[148]:5,13->1,19= 15.0 6
total cost= 90.0

x[149]:6,4->1,10= 20.0 6
x[149]:2,28->6,4= 20.0 6
x[149]:1,10->4,16= 11.0 6
x[149]:1,12->4,18= 9.0 6
total cost= 360.0

x[150]:4,25->0,3= 27.999999999999986 8
total cost= 224.0

x[151]:0,1->5,6= 9.0 5
x[151]:1,21->5,26= 13.0 5
x[151]:3,21->0,27= 9.0 6
x[151]:3,12->1,17= 13.0 5
total cost= 229.0

x[152]:2,26->6,2= 16.0 6
x[152]:6,3->5,11= 16.0 8
total cost= 224.0

x[153]:0,2->2,9= 27.0 7
total cost= 189.0

x[154]:1,17->4,23= 13.0 6
x[154]:3,12->1,17= 13.0 5
total cost= 143.0

x[155]:0,15->1,23= 28.0 8
total cost= 224.0

x[156]:1,23->2,1= 30.0 8
total cost= 240.0

x[157]:5,21->2,26= 17.00000000000001 5
total cost= 85.00000000000006

x[158]:5,29->6,4= 14.0 5
total cost= 70.0

x[159]:3,21->0,27= 20.0 6
total cost= 120.0

x[160]:1,8->4,14= 24.0 6
x[160]:1,13->4,19= 1.0 6
x[160]:6,2->1,8= 24.0 6
x[160]:6,4->1,10= 1.0 6
total cost= 300.0

x[161]:0,22->1,0= 10.0 8
total cost= 80.0

x[162]:0,3->4,10= 1.0000000000000142 7
x[162]:0,1->5,6= 10.0 5
x[162]:0,8->5,13= 2.999999999999986 5
x[162]:0,27->6,3= 1.0 6
x[162]:4,11->1,18= 1.0000000000000142 7
x[162]:5,6->1,12= 10.0 6
x[162]:5,13->1,19= 2.999999999999986 6
x[162]:6,4->1,10= 1.0 6
total cost= 169.00000000000003

x[163]:4,26->1,3= 30.0 7
total cost= 210.0

x[164]:5,20->6,25= 26.0 5
total cost= 130.0

x[165]:3,25->6,1= 29.0 6
total cost= 174.0

x[166]:1,10->4,16= 20.0 6
x[166]:3,0->1,5= 20.0 5
total cost= 220.0

x[167]:0,22->1,0= 20.0 8
total cost= 160.0

x[168]:0,15->1,23= 20.0 8
x[168]:0,15->4,22= 6.0 7
x[168]:4,26->1,3= 6.0 7
total cost= 244.0

x[169]:4,18->3,25= 10.0 7
x[169]:4,23->3,0= 2.0 7
total cost= 84.0

x[170]:3,7->1,12= 28.0 5
total cost= 140.0

x[171]:3,25->6,1= 18.0 6
total cost= 108.0

x[172]:3,7->0,13= 2.0 6
x[172]:4,25->0,3= 18.0 8
x[172]:4,23->3,0= 2.0 7
total cost= 170.0

x[173]:1,19->4,25= 27.0 6
x[173]:3,12->1,17= 27.0 5
total cost= 297.0

x[174]:6,4->1,10= 22.0 6
total cost= 132.0

x[175]:4,23->3,0= 13.0 7
total cost= 91.0

x[176]:2,3->6,9= 27.0 6
x[176]:6,9->1,15= 27.0 6
x[176]:1,17->4,23= 26.0 6
x[176]:1,19->4,25= 1.0 6
total cost= 486.0

x[177]:2,3->6,9= 19.0 6
x[177]:6,9->1,15= 19.0 6
x[177]:1,19->4,25= 19.0 6
total cost= 342.0

x[178]:5,29->6,4= 29.0 5
total cost= 145.0

x[179]:5,21->2,26= 14.0 5
total cost= 70.0

x[180]:1,21->5,26= 26.0 5
total cost= 130.0

x[181]:5,13->3,21= 23.0 8
total cost= 184.0

x[182]:4,18->3,25= 20.0 7
total cost= 140.0

x[183]:6,7->0,14= 29.0 7
total cost= 203.0

x[184]:0,22->1,0= 26.0 8
total cost= 208.0

x[185]:2,3->6,9= 21.0 6
x[185]:6,9->1,15= 21.0 6
x[185]:1,17->4,23= 21.0 6
total cost= 378.0

x[186]:4,14->5,21= 14.0 7
total cost= 98.0

x[187]:5,13->1,19= 26.0 6
x[187]:1,0->4,6= 26.0 6
total cost= 312.0

x[188]:6,2->1,8= 25.0 6
x[188]:2,26->6,2= 25.0 6
x[188]:1,14->3,20= 25.0 6
total cost= 450.0

x[189]:0,15->1,23= 21.0 8
total cost= 168.0

x[190]:0,1->5,6= 4.5 5
x[190]:1,15->5,20= 16.5 5
x[190]:3,21->0,27= 3.0 6
x[190]:3,25->0,1= 1.5 6
x[190]:3,0->1,5= 4.0 5
x[190]:3,7->1,12= 8.5 5
x[190]:3,21->1,26= 4.0 5
total cost= 214.5

x[191]:6,2->1,8= 18.0 6
total cost= 108.0

x[192]:2,1->6,7= 29.0 6
x[192]:6,8->1,14= 29.0 6
x[192]:1,17->4,23= 29.0 6
total cost= 522.0

x[193]:0,3->4,10= 0.9999999999999858 7
x[193]:5,26->0,2= 0.9999999999999858 6
x[193]:5,13->1,19= 11.000000000000014 6
x[193]:1,4->4,10= 11.000000000000014 6
total cost= 145.0

x[194]:0,27->6,3= 17.0 6
total cost= 102.0

x[195]:2,9->6,15= 29.0 6
x[195]:6,15->1,21= 29.0 6
x[195]:1,0->4,6= 29.0 6
total cost= 522.0

x[196]:1,12->4,18= 11.0 6
x[196]:1,13->4,19= 7.0 6
x[196]:3,7->1,12= 18.0 5
total cost= 198.0

x[197]:1,23->2,1= 14.0 8
total cost= 112.0

x[198]:4,16->5,23= 13.0 7
total cost= 91.0

x[199]:4,0->3,7= 16.0 7
total cost= 112.0

Total time= 7863284

Sovle for test9_7_30_30_400B.txt
Colmun limit=1000
number of service arcs=900
number of holding arcs=210

root node bound= 34308.580000000016
Before intensification, we have 20229 columns
After pick up:
==================Intensification===================
We add 500 columns to cplex.
Tried aggregator 3 times.
MIP Presolve eliminated 36282 rows and 35363 columns.
Aggregator did 6811 substitutions.
Reduced MIP has 42248 rows, 143852 columns, and 441438 nonzeros.
Reduced MIP has 6 binaries, 494 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.44 sec. (274.86 ticks)
Probing time = 0.09 sec. (4.71 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 550 rows and 2043 columns.
Reduced MIP has 41698 rows, 141809 columns, and 435136 nonzeros.
Reduced MIP has 6 binaries, 494 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.36 sec. (170.99 ticks)
Probing time = 0.13 sec. (4.65 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 33.64 sec. (10213.10 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    34316.9800    52                  34316.9800    32034         
      0     0    34336.9092    54                  Cuts: 1114    38398         
      0     0    34387.8841    55                  Cuts: 1674    45482         
      0     0    34400.8433    60               MIRcuts: 1506    50246         
      0     0    34410.9572    60                  Cuts: 1734    54418         
      0     0    34427.7847    64                  Cuts: 1818    61090         
*     0+    0                        70120.0000    34427.7847            50.90%
      0     0    34446.2242    57    70120.0000 MIRcuts: 1907    69304   50.88%
*     0+    0                        46388.0000    34446.2242            25.74%
*     0+    0                        44913.0000    34446.2242            23.30%
*     0+    0                        44663.0000    34446.2242            22.88%
*     0+    0                        44409.0000    34446.2242            22.43%
*     0+    0                        44383.0000    34446.2242            22.39%
*     0+    0                        43877.0000    34446.2242            21.49%
      0     0    34480.2484    54    43877.0000 MIRcuts: 1806    74708   21.42%
      0     0    34509.5434    54    43877.0000    Cuts: 1792    78853   21.35%
      0     0    34529.6074    48    43877.0000 MIRcuts: 1557    83590   21.30%
      0     0    34542.0184    51    43877.0000    Cuts: 1653    87817   21.28%
      0     0    34575.4747    52    43877.0000 MIRcuts: 1915    92320   21.20%
      0     0    34603.8193    56    43877.0000 MIRcuts: 1834    97151   21.13%
      0     0    34637.7991    56    43877.0000 MIRcuts: 1894   102100   21.06%
      0     0    34666.4066    60    43877.0000 MIRcuts: 1964   106225   20.99%
      0     0    34710.8366    58    43877.0000 MIRcuts: 1882   113111   20.89%
      0     0    34735.1135    55    43877.0000 MIRcuts: 1783   118746   20.84%
      0     0    34753.6116    47    43877.0000 MIRcuts: 1972   124227   20.79%
      0     0    34768.0697    49    43877.0000 MIRcuts: 1694   129729   20.76%
      0     0    34775.8780    51    43877.0000 MIRcuts: 1888   133375   20.74%
      0     0    34784.2976    49    43877.0000 MIRcuts: 1916   138209   20.72%
      0     0    34798.6782    45    43877.0000 MIRcuts: 1947   142220   20.69%
      0     0    34808.6831    54    43877.0000 MIRcuts: 1865   145708   20.67%
      0     0    34826.0396    48    43877.0000 MIRcuts: 1761   151387   20.63%
      0     0    34833.1945    49    43877.0000 MIRcuts: 1914   155383   20.61%
      0     0    34838.4196    58    43877.0000 MIRcuts: 2284   161258   20.60%
Heuristic still looking.
Heuristic still looking.
Heuristic still looking.
*     0+    0                        38657.0000    34838.4196             9.88%
      0     2    34838.4196    58    38657.0000    34838.4196   161258    9.88%
Elapsed time = 874.68 sec. (417112.80 ticks, tree = 0.00 MB, solutions = 8)
      1     3    34841.6902    51    38657.0000    34838.4196   164507    9.88%
      2     4    34842.3630    60    38657.0000    34838.4196   170313    9.88%
      3     5    34847.1579    52    38657.0000    34841.8786   173189    9.87%
*     4+    4                        38082.0000    34841.8786             8.51%
      4     6    34847.3286    58    38082.0000    34841.8786   177344    8.51%
*     5+    5                        38046.0000    34841.8786             8.42%
*     5+    5                        37968.0000    34841.8786             8.23%
      7     9    34856.1340    57    37968.0000    34841.8786   191366    8.23%
      9    11    34869.5567    54    37968.0000    34841.8786   199842    8.23%
     11    13    34852.0840    49    37968.0000    34847.1963   208556    8.22%
     14    16    34875.7018    43    37968.0000    34847.1963   227360    8.22%
     15    17    34859.4631    41    37968.0000    34847.1963   233755    8.22%
     18    20    34871.4636    47    37968.0000    34847.4266   251936    8.22%
Elapsed time = 1148.59 sec. (535579.61 ticks, tree = 0.00 MB, solutions = 11)
     20    22    34862.5546    54    37968.0000    34847.4266   264945    8.22%
     21    23    34886.7015    38    37968.0000    34847.4266   274171    8.22%
     23    25    34947.6066    39    37968.0000    34847.4266   284149    8.22%
     25    27    34871.3629    41    37968.0000    34847.4266   293017    8.22%
     26    28    34959.4603    36    37968.0000    34847.4266   302378    8.22%
     30    32    34960.5595    37    37968.0000    34847.4266   323734    8.22%
     32    34    34912.8279    40    37968.0000    34847.4266   336642    8.22%
     33    35    34905.5176    41    37968.0000    34847.4266   349798    8.22%
     37    39    34880.1905    44    37968.0000    34847.4266   367971    8.22%
     38    40    34998.5330    37    37968.0000    34847.4266   372850    8.22%
Elapsed time = 1348.20 sec. (592447.42 ticks, tree = 0.00 MB, solutions = 11)
     39    41    34889.3769    48    37968.0000    34847.4266   376004    8.22%
     42    44    35010.6155    35    37968.0000    34847.4266   388945    8.22%
     43    45    34924.2810    43    37968.0000    34847.4266   396227    8.22%
     47    49    34891.8097    49    37968.0000    34847.4266   410019    8.22%
     50    52    35042.0009    35    37968.0000    34847.4266   424611    8.22%
     51    53    34952.2000    42    37968.0000    34847.4266   433134    8.22%
     58    60    34887.4199    39    37968.0000    34847.4266   483751    8.22%
     60    62    34904.4516    48    37968.0000    34847.4266   517548    8.22%
     62    64    34918.8751    43    37968.0000    34847.4266   554724    8.22%
     66    68    34932.1547    40    37968.0000    34847.4266   604536    8.22%
Elapsed time = 1669.49 sec. (669300.60 ticks, tree = 0.00 MB, solutions = 11)
     68    70    34931.0749    43    37968.0000    34847.4266   634451    8.22%
     70    72    34951.5488    39    37968.0000    34847.4266   660340    8.22%
     74    76    35024.1399    31    37968.0000    34847.4266   762707    8.22%
    102   104    35343.5642    17    37968.0000    34847.4266  1075427    8.22%
    103   105    34928.7272    44    37968.0000    34847.4266  1079276    8.22%
    107   109    34930.2606    46    37968.0000    34847.4266  1087355    8.22%
    111   113    34947.6769    37    37968.0000    34847.4266  1099969    8.22%
    115   117    34977.5139    32    37968.0000    34847.4266  1112895    8.22%
    119   121    35036.8925    39    37968.0000    34847.4266  1132127    8.22%
    120   122    35001.5662    35    37968.0000    34847.4266  1133513    8.22%
Elapsed time = 2018.00 sec. (756328.41 ticks, tree = 0.36 MB, solutions = 11)
    124   126    35260.9166    34    37968.0000    34847.4266  1142310    8.22%
    128   130    35010.9987    32    37968.0000    34847.4266  1157180    8.22%
*   129+  129                        36777.0000    34847.4266             5.25%
    132   134    35015.6578    32    36777.0000    34847.4266  1167313    5.25%
    136   138    35018.7011    33    36777.0000    34847.4266  1177231    5.25%
    140   142    35018.6160    33    36777.0000    34847.4266  1185625    5.25%
    144   146    35146.1623    34    36777.0000    34847.4266  1200807    5.25%
*   153+  153                        36597.0000    34847.4266             4.78%
    177   179    35042.1201    28    36597.0000    34847.4266  1254638    4.78%
    179   181    35051.4088    33    36597.0000    34847.4266  1260378    4.78%
    180   182    35031.2225    35    36597.0000    34847.4266  1266115    4.78%
    181   183    35230.5355    30    36597.0000    34847.4266  1271915    4.78%
Elapsed time = 2216.38 sec. (809704.74 ticks, tree = 7.60 MB, solutions = 13)
    183   185    35105.6158    30    36597.0000    34847.4266  1282005    4.78%
    187   189    35073.6465    30    36597.0000    34847.4266  1291937    4.78%
    191   193    35086.6574    29    36597.0000    34847.4266  1303881    4.78%
    192   194    35035.9582    34    36597.0000    34847.4266  1307728    4.78%
    195   197    35128.0202    34    36597.0000    34847.4266  1321467    4.78%
    196   198    35104.1931    32    36597.0000    34847.4266  1330806    4.78%
    200   202    35047.3663    36    36597.0000    34847.4266  1343234    4.78%
    204   206    35069.1664    29    36597.0000    34847.4266  1365462    4.78%
    240   242    35150.0750    23    36597.0000    34847.4266  1416707    4.78%
    242   244    35107.4454    31    36597.0000    34847.4266  1423631    4.78%
Elapsed time = 2766.24 sec. (952840.22 ticks, tree = 9.92 MB, solutions = 13)
*   262+  258                        36191.0000    34847.4266             3.71%
    336   295    35280.6238    20    36191.0000    34847.4266  1571014    3.71%
    340   297    35287.9997    23    36191.0000    34847.4266  1578948    3.71%
    344   301    35493.0563    20    36191.0000    34847.4266  1597501    3.71%
    352   307    35588.9505    18    36191.0000    34847.4266  1609055    3.71%
    355   308    35299.4977    24    36191.0000    34847.4266  1626989    3.71%
    356   309    35301.5490    21    36191.0000    34847.4266  1630268    3.71%
    359   312    35170.6289    33    36191.0000    34847.4266  1636446    3.71%
    360   313    35303.3895    21    36191.0000    34847.4266  1638568    3.71%
    363   316    35223.4216    31    36191.0000    34847.4266  1654574    3.71%
    364   317    35530.8184    20    36191.0000    34847.4266  1663905    3.71%
Elapsed time = 3023.20 sec. (1017573.30 ticks, tree = 10.10 MB, solutions = 14)
    367   320    35170.8494    32    36191.0000    34847.4266  1666067    3.71%
    368   321    35303.4360    22    36191.0000    34847.4266  1666991    3.71%
    371   324    35174.2657    30    36191.0000    34847.4266  1677830    3.71%
    372   325    35492.7775    19    36191.0000    34847.4266  1683362    3.71%
*   452   351      integral     0    36183.0000    34847.4266  1717931    3.69%
*   452   350      integral     0    36183.0000    34847.4266  1717931    3.69%
    454   352    35303.9471    22    36183.0000    34852.1007  1725087    3.68%
    455   353    34914.6199    46    36183.0000    34852.1007  1732199    3.68%
    484   382    35386.2150    22    36183.0000    34852.1007  1862979    3.68%
    485   383    35161.1822    35    36183.0000    34852.1007  1872887    3.68%
    488   386    35490.2118    18    36183.0000    34852.1007  1896158    3.68%
Elapsed time = 3485.00 sec. (1152102.29 ticks, tree = 12.49 MB, solutions = 15)
    489   387    34920.0916    47    36183.0000    34852.1007  1902003    3.68%
    492   390    35397.7115    22    36183.0000    34852.1007  1906598    3.68%
    493   391    35123.2686    39    36183.0000    34852.1007  1916533    3.68%
    495   393    35230.1689    25    36183.0000    34852.1007  1924088    3.68%
    518   416    35472.3501    21    36183.0000    34852.1007  2007432    3.68%
    519   417    34936.0788    37    36183.0000    34852.1007  2010803    3.68%
    521   419    35281.0510    32    36183.0000    34852.1007  2018823    3.68%
    522   420    35696.5786    22    36183.0000    34852.1007  2029485    3.68%
    523   421    34979.5017    33    36183.0000    34852.1007  2038856    3.68%
    527   425    34948.8124    35    36183.0000    34852.1007  2060688    3.68%
Elapsed time = 3917.01 sec. (1275671.32 ticks, tree = 13.81 MB, solutions = 15)
    531   429    35002.0217    34    36183.0000    34852.1007  2080454    3.68%
    535   433    34949.8002    36    36183.0000    34852.1007  2102903    3.68%
    539   437    35243.6145    41    36183.0000    34852.1007  2134512    3.68%
    543   441    34961.1261    36    36183.0000    34852.1007  2148977    3.68%
    556   454    35536.6945    21    36183.0000    34852.1007  2198493    3.68%
    557   455    34982.6418    36    36183.0000    34852.1007  2207811    3.68%
    561   459    34964.5076    41    36183.0000    34852.1007  2226161    3.68%
    563   461    35438.3968    25    36183.0000    34852.1007  2236840    3.68%
    580   478    34973.3669    36    36183.0000    34852.1007  2315310    3.68%
    586   484    35773.8297    22    36183.0000    34852.1007  2342192    3.68%
Elapsed time = 4500.91 sec. (1425115.27 ticks, tree = 15.13 MB, solutions = 15)
    591   489    35561.7277    22    36183.0000    34852.1007  2357433    3.68%
    592   490    35066.1962    36    36183.0000    34852.1007  2381244    3.68%
    596   494    34974.6535    37    36183.0000    34852.1007  2401315    3.68%
    600   498    35035.4500    33    36183.0000    34852.1007  2420130    3.68%
    608   504    35291.8112    34    36183.0000    34852.1007  2459380    3.68%
    616   512    35139.1081    39    36183.0000    34852.1007  2494820    3.68%
    664   546    35815.8808    15    36183.0000    34852.1007  2634325    3.68%
    667   547    35420.1274    27    36183.0000    34852.1007  2637590    3.68%
    671   551    35430.3729    28    36183.0000    34852.1007  2655664    3.68%
    675   555    35498.2252    23    36183.0000    34852.1007  2692406    3.68%
Elapsed time = 5336.35 sec. (1631288.47 ticks, tree = 18.49 MB, solutions = 15)
    683   563    35777.2254    27    36183.0000    34852.1007  2756845    3.68%
*   789+  591                        36114.0000    34852.1007             3.49%
    803   566    35679.6328    16    36114.0000    34852.1007  2892240    3.49%
    804   567    34999.0017    40    36114.0000    34852.1007  2897399    3.49%
    806   569    35721.0416    34    36114.0000    34852.1007  2930411    3.49%
    810   573    35503.9893    24    36114.0000    34852.1007  2978459    3.49%
    814   577    35504.2819    25    36114.0000    34852.1007  3005430    3.49%
    816   577    35003.2852    42    36114.0000    34852.1007  3016169    3.49%
    818   579    35767.2821    23    36114.0000    34852.1007  3035470    3.49%
    820   581    35271.8171    37    36114.0000    34852.1007  3063832    3.49%
    824   585    35004.4600    43    36114.0000    34852.1007  3073848    3.49%
Elapsed time = 5764.97 sec. (1752361.88 ticks, tree = 18.85 MB, solutions = 16)
    828   589    35283.5474    29    36114.0000    34852.1007  3122461    3.49%
    836   597    35009.6249    40    36114.0000    34852.1007  3140527    3.49%
    854   611    35700.0642    16    36114.0000    34852.1007  3255721    3.49%
    855   612    35015.6534    39    36114.0000    34852.1007  3260835    3.49%
    856   613    34917.8273    45    36114.0000    34852.1007  3269397    3.49%
    857   614    35548.1241    28    36114.0000    34852.1007  3280758    3.49%
    860   617    34934.5288    45    36114.0000    34852.1007  3290961    3.49%
    861   618    35559.3902    24    36114.0000    34852.1007  3306568    3.49%
    864   621    35025.6648    39    36114.0000    34852.1007  3347363    3.49%
    868   623    34935.2628    45    36114.0000    34852.1007  3364777    3.49%
Elapsed time = 6093.29 sec. (1839098.80 ticks, tree = 20.49 MB, solutions = 16)
    871   626    35092.6733    36    36114.0000    34852.1007  3382453    3.49%
    891   644    35810.5299    17    36114.0000    34852.1007  3490975    3.49%
    953   672    34973.5055    56    36114.0000    34852.1007  3606585    3.49%
    954   673    35020.5769    38    36114.0000    34852.1007  3606850    3.49%
    970   689    35029.1933    38    36114.0000    34852.1007  3721208    3.49%
    974   693    35064.1820    34    36114.0000    34852.1007  3745048    3.49%
    987   706    35047.7091    42    36114.0000    34852.1007  3825557    3.49%
   1004   721    35081.5136    38    36114.0000    34852.1007  3943327    3.49%
   1008   723    35215.1427    28    36114.0000    34852.1007  3961273    3.49%
   1015   730    35054.3565    46    36114.0000    34852.1007  3981902    3.49%
Elapsed time = 7074.43 sec. (2099665.96 ticks, tree = 27.04 MB, solutions = 16)
   1016   731    35417.0644    23    36114.0000    34852.1007  3987111    3.49%
   1018   733    35204.0411    40    36114.0000    34852.1007  4004325    3.49%
   1021   736    35055.2490    47    36114.0000    34852.1007  4013067    3.49%
   1024   738    35150.7060    39    36114.0000    34852.1007  4029151    3.49%

Mixed integer rounding cuts applied:  5668
Gomory fractional cuts applied:  6

Root node processing (before b&c):
  Real time             =  874.58 sec. (417086.60 ticks)
Parallel b&c, 4 threads:
  Real time             = 6325.53 sec. (1714896.07 ticks)
  Sync time (average)   =  328.61 sec.
  Wait time (average)   =  328.78 sec.
                          ------------
Total (root+branch&cut) = 7200.11 sec. (2131982.67 ticks)
We use intensification finding a better solution: 36114.0
================ Solution ================
BAP terminated with objective : 36114
Total Number of iterations: 100
Total Number of processed nodes: 4
Total Time spent on master problems: 1806307 Total time spent on pricing problems: 14278
Best bound : 34326.70999999998
[0, 15, 20, 45, 46, 57, 79, 80, 88, 98, 100, 103, 104, 112, 116, 118, 137, 158, 192, 223, 235, 238, 256, 279, 280, 295, 304, 327, 338, 344, 363, 392, 410, 423, 441, 450, 468, 487, 530, 544, 547, 550, 562, 568, 573, 580, 594, 595, 601, 608, 615, 638, 650, 660, 673, 690, 693, 717, 720, 735, 749, 764, 765, 778, 782, 786, 790, 794, 801, 803, 812, 816, 837, 849, 850, 852, 854, 861, 862, 863, 886, 897]
The number of service edges used= 82

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false edgeIndexset: [256, 562, 550, 423, 238] start node= 1 start time= 16 capacity type= 2 ifChargeSet: []
(2,3)->(3,10)->(1,16)->(3,22)->(1,28)->(2,3):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [112, 544, 615, 280, 717] start node= 4 start time= 27 capacity type= 0 ifChargeSet: []
(3,4)->(1,10)->(4,15)->(0,22)->(4,27)->(3,4):1.0
Fix cost= 50 variable cost= 120

artificial: false edgeIndexset: [673, 98, 327, 410, 782] start node= 1 start time= 27 capacity type= 2 ifChargeSet: []
(5,2)->(0,8)->(4,13)->(2,20)->(1,27)->(5,2):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [279, 392, 57, 764, 862] start node= 1 start time= 9 capacity type= 2 ifChargeSet: []
(2,2)->(1,9)->(4,14)->(6,22)->(0,27)->(2,2):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [801, 962, 100, 57, 363, 735] start node= 5 start time= 21 capacity type= 2 ifChargeSet: []
(2,2)->(2,3)->(0,10)->(4,15)->(5,21)->(0,27)->(2,2):1.0
Fix cost= 350 variable cost= 116

artificial: false edgeIndexset: [580, 693, 118, 765, 863] start node= 4 start time= 3 capacity type= 1 ifChargeSet: []
(4,3)->(3,10)->(4,15)->(6,23)->(0,28)->(4,3):1.0
Fix cost= 150 variable cost= 120

artificial: false edgeIndexset: [304, 1059, 790, 568, 441, 46] start node= 1 start time= 4 capacity type= 1 ifChargeSet: []
(1,4)->(5,9)->(5,10)->(0,16)->(2,21)->(3,28)->(1,4):1.0
Fix cost= 200 variable cost= 116

artificial: false edgeIndexset: [608, 450, 953, 954, 235, 15] start node= 1 start time= 25 capacity type= 2 ifChargeSet: []
(2,0)->(4,8)->(0,15)->(1,23)->(1,24)->(1,25)->(2,0):1.0
Fix cost= 300 variable cost= 112

artificial: false edgeIndexset: [80, 595, 660, 1063, 487, 794] start node= 5 start time= 14 capacity type= 2 ifChargeSet: []
(4,0)->(2,7)->(5,13)->(5,14)->(0,20)->(3,25)->(4,0):1.0
Fix cost= 350 variable cost= 116

artificial: false edgeIndexset: [816, 594, 854, 749, 1055, 79] start node= 5 start time= 6 capacity type= 2 ifChargeSet: []
(5,5)->(5,6)->(6,14)->(0,19)->(3,24)->(4,29)->(5,5):1.0
Fix cost= 350 variable cost= 116

artificial: false edgeIndexset: [897, 1106, 530, 850, 812, 45] start node= 5 start time= 2 capacity type= 2 ifChargeSet: []
(5,2)->(6,10)->(0,15)->(2,20)->(6,26)->(6,27)->(5,2):1.0
Fix cost= 350 variable cost= 116

artificial: false edgeIndexset: [88, 344, 573, 638, 1102, 943, 863] start node= 1 start time= 14 capacity type= 2 ifChargeSet: []
(3,3)->(4,8)->(1,13)->(1,14)->(6,22)->(6,23)->(0,28)->(3,3):1.0
Fix cost= 300 variable cost= 112

artificial: false edgeIndexset: [0, 1072, 929, 338, 803, 886, 1071] start node= 5 start time= 21 capacity type= 2 ifChargeSet: []
(0,0)->(1,8)->(6,16)->(5,21)->(5,22)->(5,23)->(0,29)->(0,0):1.0
Fix cost= 350 variable cost= 108

artificial: false edgeIndexset: [912, 720, 786, 103, 295, 650, 1038, 1039] start node= 4 start time= 19 capacity type= 0 ifChargeSet: []
(4,0)->(5,6)->(0,12)->(0,13)->(4,18)->(4,19)->(4,20)->(1,25)->(4,0):1.0
Fix cost= 50 variable cost= 108

artificial: false edgeIndexset: [690, 547, 468, 1046, 1047, 1048, 1049, 223] start node= 4 start time= 26 capacity type= 1 ifChargeSet: []
(4,0)->(3,7)->(1,13)->(2,18)->(4,26)->(4,27)->(4,28)->(4,29)->(4,0):1.0
Fix cost= 150 variable cost= 104

artificial: false edgeIndexset: [116, 1096, 1097, 601, 1098, 1099, 1100, 861, 158] start node= 4 start time= 1 capacity type= 1 ifChargeSet: []
(4,1)->(0,8)->(6,16)->(6,17)->(6,18)->(6,19)->(6,20)->(6,21)->(0,26)->(4,1):1.0
Fix cost= 150 variable cost= 100

artificial: false edgeIndexset: [1088, 1089, 1090, 1091, 837, 137, 1074, 1075, 852, 1076, 1085, 1086, 1087] start node= 5 start time= 25 capacity type= 1 ifChargeSet: []
(6,5)->(6,6)->(6,7)->(6,8)->(6,9)->(6,10)->(6,11)->(6,12)->(0,17)->(5,24)->(5,25)->(5,26)->(5,27)->(6,5):1.0
Fix cost= 200 variable cost= 80

artificial: false edgeIndexset: [192, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 20, 958, 959] start node= 1 start time= 4 capacity type= 1 ifChargeSet: []
(1,0)->(1,1)->(1,2)->(1,3)->(1,4)->(1,5)->(1,6)->(1,7)->(1,8)->(1,9)->(1,10)->(1,11)->(1,12)->(0,20)->(1,28)->(1,29)->(1,0):1.0
Fix cost= 200 variable cost= 64

artificial: false edgeIndexset: [1088, 104, 778, 1039, 1040, 849, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1086, 1087] start node= 4 start time= 19 capacity type= 0 ifChargeSet: []
(6,6)->(6,7)->(6,8)->(6,9)->(0,14)->(4,19)->(4,20)->(4,21)->(4,22)->(4,23)->(4,24)->(4,25)->(4,26)->(4,27)->(4,28)->(6,6):1.0
Fix cost= 50 variable cost= 72

fix cost+variable cost+commodity cost= 4450+2040+29624.0=36114.0

vehicle dowork= 37700 commodity dowork= 29624.0
no load ratio= 0.21421750663129974

Total vehicles used= 19

vehicleCoverServiceEdge information:
{256=1, 0=1, 897=1, 392=1, 137=1, 650=1, 778=1, 782=1, 15=1, 530=1, 786=1, 660=1, 20=1, 790=1, 279=1, 280=1, 410=1, 794=1, 158=1, 544=1, 673=1, 801=1, 803=1, 547=1, 550=1, 423=1, 295=1, 812=1, 45=1, 46=1, 304=1, 816=1, 562=1, 690=1, 693=1, 568=1, 57=2, 441=1, 573=1, 192=1, 450=1, 580=1, 837=1, 327=1, 717=1, 79=1, 80=1, 720=1, 849=1, 594=1, 850=1, 338=1, 595=1, 468=1, 852=1, 854=1, 88=1, 344=1, 601=1, 861=1, 862=1, 735=1, 863=2, 223=1, 608=1, 98=1, 100=1, 615=1, 487=1, 103=1, 104=1, 363=1, 235=1, 749=1, 238=1, 112=1, 116=1, 118=1, 886=1, 764=1, 765=1, 638=1}

commodityFlowIntoTerminal information:
0 0 0 0 0 0 0 0 149 0 56 0 0 0 19 196 21 46 0 91 100 0 11 0 0 0 50 172 119 96 
0 0 0 0 35 0 0 0 93 25 0 0 0 82 0 0 74 0 0 0 0 0 0 100 0 11 0 36 126 0 
100 0 193 100 0 0 0 44 0 0 0 0 0 0 0 0 0 0 47 0 150 0 0 0 0 0 0 0 0 0 
0 0 0 98 0 0 0 34 0 0 127 0 0 0 0 0 0 0 0 0 0 0 70 0 92 44 0 0 49 0 
107 50 0 50 0 0 0 0 137 0 0 0 0 83 79 133 0 0 0 12 0 0 0 0 0 0 23 9 0 85 
0 0 127 0 0 100 20 0 0 43 0 0 0 100 0 0 0 0 0 0 0 146 0 0 37 0 0 0 0 0 
0 0 0 0 0 41 20 0 0 0 49 0 0 0 78 0 150 0 0 0 0 0 200 50 0 0 100 0 0 0 

vehicle pattern information:
[0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
[0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
x[0]:0,17->5,24= 10.0 7
total cost= 70.0

x[1]:1,13->2,18= 5.0 5
total cost= 25.0

x[2]:1,8->6,16= 11.0 8
total cost= 88.0

x[3]:0,27->2,2= 6.0 5
total cost= 30.0

x[4]:0,17->5,24= 5.0 7
total cost= 35.0

x[5]:1,25->4,0= 13.0 5
x[5]:4,0->3,7= 13.0 7
total cost= 156.0

x[6]:3,3->4,8= 1.0 5
x[6]:3,10->4,15= 4.0 5
x[6]:4,14->6,22= 1.0 8
x[6]:4,15->6,23= 4.0 8
total cost= 65.0

x[7]:3,10->4,15= 12.0 5
x[7]:4,15->6,23= 12.0 8
total cost= 156.0

x[8]:3,10->4,15= 7.0 5
x[8]:4,15->5,21= 7.0 6
total cost= 77.0

x[9]:1,27->5,2= 14.0 5
total cost= 70.0

x[10]:3,3->4,8= 9.0 5
x[10]:4,8->0,15= 9.0 7
total cost= 108.0

x[11]:0,27->2,2= 13.0 5
x[11]:6,22->0,27= 13.0 5
total cost= 130.0

x[12]:3,25->4,0= 8.0 5
x[12]:4,8->0,15= 8.0 7
total cost= 96.0

x[13]:0,15->2,20= 7.0 5
total cost= 35.0

x[14]:2,0->4,8= 10.0 8
total cost= 80.0

x[15]:4,29->5,5= 12.0 6
total cost= 72.0

x[16]:6,16->5,21= 11.0 5
total cost= 55.0

x[17]:6,23->0,28= 9.0 5
total cost= 45.0

x[18]:4,8->0,15= 11.0 7
total cost= 77.0

x[19]:0,15->1,23= 7.0 8
x[19]:6,9->0,14= 7.0 5
total cost= 91.0

x[20]:0,28->3,3= 15.0 5
total cost= 75.0

x[21]:1,14->6,22= 9.0 8
total cost= 72.0

x[22]:0,20->1,28= 5.0 8
x[22]:5,10->0,16= 5.0 6
total cost= 70.0

x[23]:1,28->2,3= 7.0 5
total cost= 35.0

x[24]:3,22->1,28= 14.0 6
total cost= 84.0

x[25]:1,16->3,22= 14.0 6
total cost= 84.0

x[26]:6,23->0,28= 7.0 5
total cost= 35.0

x[27]:0,20->3,25= 13.0 5
total cost= 65.0

x[28]:1,14->6,22= 9.0 8
total cost= 72.0

x[29]:6,14->0,19= 7.0 5
total cost= 35.0

x[30]:1,16->3,22= 10.999999999999973 6
total cost= 65.99999999999984

x[31]:0,27->2,2= 12.0 5
x[31]:5,14->0,20= 12.0 6
total cost= 132.0

x[32]:3,10->1,16= 9.0 6
total cost= 54.0

x[33]:2,7->5,13= 7.0 6
total cost= 42.0

x[34]:3,24->4,29= 14.0 5
x[34]:4,8->0,15= 14.0 7
total cost= 168.0

x[35]:2,20->6,26= 12.0 6
total cost= 72.0

x[36]:1,10->4,15= 13.0 5
total cost= 65.0

x[37]:5,2->6,10= 15.0 8
total cost= 120.0

x[38]:1,28->2,3= 10.0 5
x[38]:3,22->1,28= 10.0 6
total cost= 110.0

x[39]:3,22->1,28= 11.0 6
total cost= 66.0

x[40]:1,13->2,18= 14.0 5
total cost= 70.0

x[41]:1,25->2,0= 13.0 5
total cost= 65.0

x[42]:4,0->2,7= 11.0 7
total cost= 77.0

x[43]:0,15->1,23= 11.0 8
total cost= 88.0

x[44]:2,3->3,10= 14.999999999999986 7
total cost= 104.9999999999999

x[45]:4,15->5,21= 9.0 6
x[45]:4,29->5,5= 4.0 6
total cost= 78.0

x[46]:0,20->1,28= 6.0 8
x[46]:5,14->0,20= 6.0 6
total cost= 84.0

x[47]:4,15->5,21= 8.0 6
total cost= 48.0

x[48]:1,28->2,3= 5.0 5
total cost= 25.0

x[49]:0,20->3,25= 10.0 5
x[49]:5,14->0,20= 10.0 6
total cost= 110.0

x[50]:3,7->1,13= 8.0 6
x[50]:1,14->6,22= 8.0 8
total cost= 112.0

x[51]:0,15->1,23= 9.0 8
x[51]:5,2->0,8= 9.0 6
total cost= 126.0

x[52]:0,8->4,13= 15.0 5
total cost= 75.0

x[53]:0,0->1,8= 12.0 8
total cost= 96.0

x[54]:0,0->1,8= 13.0 8
total cost= 104.0

x[55]:2,2->1,9= 14.0 7
total cost= 98.0

x[56]:0,27->2,2= 6.0 5
x[56]:5,21->0,27= 6.0 6
total cost= 66.0

x[57]:3,10->4,15= 9.0 5
total cost= 45.0

x[58]:4,14->6,22= 7.0 8
total cost= 56.0

x[59]:2,20->6,26= 7.0 6
total cost= 42.0

x[60]:2,21->3,28= 14.0 7
total cost= 98.0

x[61]:0,15->1,23= 10.0 8
x[61]:6,10->0,15= 10.0 5
total cost= 130.0

x[62]:0,10->4,15= 12.0 5
x[62]:5,2->0,8= 12.0 6
total cost= 132.0

x[63]:3,24->4,29= 8.0 5
total cost= 40.0

x[64]:0,28->4,3= 6.0 5
total cost= 30.0

x[65]:4,20->1,25= 7.0 5
total cost= 35.0

x[66]:4,8->0,15= 6.0 7
total cost= 42.0

x[67]:4,0->2,7= 15.0 7
total cost= 105.0

x[68]:1,8->6,16= 4.99999999999995 8
x[68]:4,20->1,25= 4.99999999999995 5
x[68]:4,28->6,6= 8.00000000000005 8
total cost= 128.99999999999974

x[69]:5,6->6,14= 6.0 8
total cost= 48.0

x[70]:1,27->5,2= 5.0 5
total cost= 25.0

x[71]:2,7->5,13= 10.0 6
total cost= 60.0

x[72]:0,20->1,28= 7.0 8
x[72]:6,14->0,19= 7.0 5
total cost= 91.0

x[73]:0,28->4,3= 13.0 5
x[73]:6,22->0,27= 13.0 5
total cost= 130.0

x[74]:1,25->2,0= 15.0 5
total cost= 75.0

x[75]:4,29->5,5= 12.0 6
total cost= 72.0

x[76]:5,2->6,10= 10.0 8
total cost= 80.0

x[77]:4,15->6,23= 13.0 8
total cost= 104.0

x[78]:4,29->5,5= 5.0 6
total cost= 30.0

x[79]:4,1->0,8= 4.0 7
x[79]:4,8->0,15= 11.0 7
total cost= 105.0

x[80]:5,6->6,14= 5.0 8
total cost= 40.0

x[81]:0,19->3,24= 15.0 5
total cost= 75.0

x[82]:3,10->1,16= 11.0 6
total cost= 66.0

x[83]:1,27->5,2= 9.0 5
x[83]:4,8->1,13= 9.0 5
x[83]:4,15->5,21= 2.0 6
total cost= 102.0

x[84]:4,15->6,23= 11.0 8
total cost= 88.0

x[85]:1,4->5,9= 10.0 5
x[85]:3,28->1,4= 10.0 6
total cost= 110.0

x[86]:3,10->1,16= 13.0 6
total cost= 78.0

x[87]:1,12->0,20= 5.0 8
total cost= 40.0

x[88]:0,27->2,2= 12.0 5
x[88]:6,22->0,27= 12.0 5
total cost= 120.0

x[89]:1,28->2,3= 11.0 5
total cost= 55.0

x[90]:5,27->6,5= 10.0 8
total cost= 80.0

x[91]:0,15->2,20= 13.0 5
total cost= 65.0

x[92]:0,8->4,13= 6.0 5
x[92]:4,15->6,23= 6.0 8
total cost= 78.0

x[93]:0,0->1,8= 8.0 8
x[93]:5,23->0,29= 8.0 6
total cost= 112.0

x[94]:4,14->6,22= 5.0 8
total cost= 40.0

x[95]:1,8->6,16= 0.5000000000000284 8
x[95]:2,20->1,27= 0.5000000000000284 7
x[95]:2,20->6,26= 11.499999999999972 6
total cost= 76.50000000000026

x[96]:4,14->6,22= 14.0 8
total cost= 112.0

x[97]:3,25->4,0= 15.0 5
total cost= 75.0

x[98]:6,16->5,21= 12.0 5
total cost= 60.0

x[99]:6,23->0,28= 7.0 5
total cost= 35.0

x[100]:0,26->4,1= 5.0 5
total cost= 25.0

x[101]:6,23->0,28= 13.0 5
total cost= 65.0

x[102]:4,14->6,22= 8.0 8
total cost= 64.0

x[103]:1,12->0,20= 10.0 8
total cost= 80.0

x[104]:3,25->4,0= 10.0 5
total cost= 50.0

x[105]:4,8->1,13= 8.0 5
total cost= 40.0

x[106]:1,28->2,3= 8.0 5
total cost= 40.0

x[107]:3,24->4,29= 12.0 5
total cost= 60.0

x[108]:5,27->6,5= 15.0 8
total cost= 120.0

x[109]:1,14->6,22= 7.0 8
total cost= 56.0

x[110]:0,0->1,8= 10.0 8
x[110]:5,23->0,29= 10.0 6
total cost= 140.0

x[111]:4,0->3,7= 9.0 7
total cost= 63.0

x[112]:4,14->6,22= 6.0 8
total cost= 48.0

x[113]:1,14->6,22= 14.0 8
total cost= 112.0

x[114]:0,27->2,2= 5.0 5
x[114]:6,22->0,27= 5.0 5
total cost= 50.0

x[115]:0,8->4,13= 6.0 5
x[115]:5,23->0,29= 6.0 6
total cost= 66.0

x[116]:4,14->6,22= 6.0 8
total cost= 48.0

x[117]:0,15->1,23= 12.0 8
total cost= 96.0

x[118]:0,15->2,20= 5.0 5
total cost= 25.0

x[119]:2,0->4,8= 15.0 8
total cost= 120.0

x[120]:4,0->2,7= 8.0 7
total cost= 56.0

x[121]:1,27->5,2= 12.0 5
total cost= 60.0

x[122]:1,12->0,20= 8.0 8
total cost= 64.0

x[123]:0,8->6,16= 11.0 8
total cost= 88.0

x[124]:2,7->5,13= 5.0 6
total cost= 30.0

x[125]:0,28->3,3= 15.0 5
x[125]:6,23->0,28= 15.0 5
total cost= 150.0

x[126]:0,15->2,20= 11.0 5
x[126]:5,2->0,8= 11.0 6
total cost= 121.0

x[127]:6,14->0,19= 13.0 5
total cost= 65.0

x[128]:4,3->3,10= 14.999999999999998 7
total cost= 104.99999999999999

x[129]:0,28->3,3= 13.0 5
x[129]:6,23->0,28= 13.0 5
total cost= 130.0

x[130]:0,28->3,3= 5.0 5
x[130]:5,14->0,20= 5.0 6
total cost= 55.0

x[131]:3,28->1,4= 13.0 6
x[131]:1,8->6,16= 4.0 8
x[131]:1,14->6,22= 9.0 8
total cost= 182.0

x[132]:2,20->6,26= 11.0 6
total cost= 66.0

x[133]:1,12->0,20= 10.0 8
total cost= 80.0

x[134]:1,25->2,0= 15.0 5
total cost= 75.0

x[135]:4,13->2,20= 15.0 7
total cost= 105.0

x[136]:5,6->6,14= 14.0 8
total cost= 112.0

x[137]:4,15->5,21= 8.0 6
total cost= 48.0

x[138]:4,0->3,7= 7.0 7
total cost= 49.0

x[139]:0,27->2,2= 8.0 5
x[139]:6,22->0,27= 8.0 5
total cost= 80.0

x[140]:4,28->6,6= 12.0 8
total cost= 96.0

x[141]:2,0->4,8= 6.0 8
total cost= 48.0

x[142]:1,28->2,3= 11.0 5
total cost= 55.0

x[143]:1,8->6,16= 15.0 8
total cost= 120.0

x[144]:4,13->2,20= 6.0 7
total cost= 42.0

x[145]:3,25->4,0= 8.0 5
total cost= 40.0

x[146]:1,8->6,16= 12.0 8
total cost= 96.0

x[147]:5,27->6,5= 9.0 8
total cost= 72.0

x[148]:5,10->0,16= 5.0 6
total cost= 30.0

x[149]:4,29->5,5= 14.0 6
total cost= 84.0

x[150]:3,3->4,8= 13.0 5
x[150]:4,8->0,15= 13.0 7
total cost= 156.0

x[151]:3,24->4,29= 11.0 5
total cost= 55.0

x[152]:2,3->0,10= 15.0 7
total cost= 105.0

x[153]:2,7->5,13= 8.0 6
total cost= 48.0

x[154]:1,4->5,9= 7.0 5
total cost= 35.0

x[155]:4,15->5,21= 6.0 6
total cost= 36.0

x[156]:0,28->3,3= 5.0 5
x[156]:5,21->0,27= 5.0 6
total cost= 55.0

x[157]:6,14->0,19= 9.0 5
total cost= 45.0

x[158]:4,3->3,10= 9.0 7
total cost= 63.0

x[159]:0,10->4,15= 13.0 5
total cost= 65.0

x[160]:6,16->5,21= 11.0 5
total cost= 55.0

x[161]:0,26->4,1= 8.0 5
total cost= 40.0

x[162]:5,2->0,8= 11.0 6
total cost= 66.0

x[163]:0,28->3,3= 7.0 5
x[163]:6,21->0,26= 7.0 5
total cost= 70.0

x[164]:3,22->1,28= 8.0 6
x[164]:1,8->6,16= 8.0 8
total cost= 112.0

x[165]:3,3->4,8= 14.0 5
total cost= 70.0

x[166]:4,15->5,21= 10.0 6
total cost= 60.0

x[167]:2,20->1,27= 10.0 7
total cost= 70.0

x[168]:0,27->2,2= 8.0 5
x[168]:6,22->0,27= 8.0 5
total cost= 80.0

x[169]:6,16->5,21= 12.0 5
total cost= 60.0

x[170]:1,13->2,18= 10.0 5
total cost= 50.0

x[171]:1,25->2,0= 12.0 5
x[171]:3,10->1,16= 12.0 6
total cost= 132.0

x[172]:4,1->0,8= 9.0 7
total cost= 63.0

x[173]:1,25->2,0= 5.0 5
total cost= 25.0

x[174]:0,15->2,20= 12.0 5
x[174]:5,23->0,29= 12.0 6
total cost= 132.0

x[175]:0,8->4,13= 13.0 5
x[175]:5,23->0,29= 13.0 6
total cost= 143.0

x[176]:5,23->0,29= 8.0 6
total cost= 48.0

x[177]:2,21->3,28= 7.0 7
total cost= 49.0

x[178]:2,20->1,27= 13.0 7
total cost= 91.0

x[179]:0,19->3,24= 11.0 5
x[179]:6,12->0,17= 11.0 5
total cost= 110.0

x[180]:0,19->3,24= 12.0 5
total cost= 60.0

x[181]:1,27->5,2= 7.0 5
total cost= 35.0

x[182]:6,27->5,2= 14.0 5
total cost= 70.0

x[183]:1,14->6,22= 10.0 8
total cost= 80.0

x[184]:6,21->0,26= 7.0 5
total cost= 35.0

x[185]:0,0->1,8= 6.0 8
x[185]:5,23->0,29= 6.0 6
total cost= 84.0

x[186]:4,29->5,5= 15.0 6
total cost= 90.0

x[187]:1,25->2,0= 5.0 5
total cost= 25.0

x[188]:1,27->5,2= 11.0 5
total cost= 55.0

x[189]:4,8->0,15= 6.0 7
total cost= 42.0

x[190]:0,15->1,23= 8.0 8
x[190]:6,10->0,15= 8.0 5
total cost= 104.0

x[191]:0,19->3,24= 7.0 5
total cost= 35.0

x[192]:3,3->4,8= 9.0 5
total cost= 45.0

x[193]:0,19->3,24= 5.0 5
x[193]:5,2->0,8= 5.0 6
total cost= 55.0

x[194]:1,4->5,9= 6.0 5
x[194]:3,28->1,4= 6.0 6
total cost= 66.0

x[195]:4,8->1,13= 7.0 5
total cost= 35.0

x[196]:0,10->4,15= 6.0 5
x[196]:6,22->0,27= 6.0 5
total cost= 60.0

x[197]:1,25->2,0= 12.0 5
total cost= 60.0

x[198]:1,28->2,3= 13.0 5
x[198]:3,22->1,28= 13.0 6
total cost= 143.0

x[199]:0,0->1,8= 10.0 8
x[199]:5,21->0,27= 10.0 6
total cost= 140.0

x[200]:1,14->6,22= 8.0 8
total cost= 64.0

x[201]:5,6->6,14= 6.0 8
total cost= 48.0

x[202]:4,14->6,22= 5.0 8
total cost= 40.0

x[203]:2,3->3,10= 13.0 7
total cost= 91.0

x[204]:0,19->3,24= 9.0 5
x[204]:6,14->0,19= 9.0 5
total cost= 90.0

x[205]:1,16->3,22= 10.999999999999998 6
total cost= 65.99999999999999

x[206]:1,16->3,22= 6.0 6
total cost= 36.0

x[207]:2,20->6,26= 5.0 6
total cost= 30.0

x[208]:4,13->2,20= 12.0 7
total cost= 84.0

x[209]:0,28->3,3= 8.0 5
x[209]:6,23->0,28= 8.0 5
total cost= 80.0

x[210]:6,21->0,26= 10.0 5
total cost= 50.0

x[211]:6,10->0,15= 13.0 5
total cost= 65.0

x[212]:0,26->4,1= 10.0 5
x[212]:6,12->0,17= 10.0 5
total cost= 100.0

x[213]:1,8->6,16= 7.0 8
total cost= 56.0

x[214]:4,3->3,10= 6.0 7
total cost= 42.0

x[215]:3,3->4,8= 8.0 5
total cost= 40.0

x[216]:2,7->5,13= 4.0 6
x[216]:2,20->6,26= 8.000000000000059 6
x[216]:5,27->6,5= 4.0 8
total cost= 104.00000000000036

x[217]:4,8->1,13= 6.0 5
total cost= 30.0

x[218]:1,28->2,3= 14.0 5
total cost= 70.0

x[219]:4,0->5,6= 10.0 6
total cost= 60.0

x[220]:4,13->2,20= 9.0 7
total cost= 63.0

x[221]:1,8->6,16= 12.0 8
total cost= 96.0

x[222]:2,7->5,13= 12.0 6
total cost= 72.0

x[223]:4,14->6,22= 14.0 8
total cost= 112.0

x[224]:5,21->0,27= 15.0 6
total cost= 90.0

x[225]:0,17->5,24= 6.0 7
total cost= 42.0

x[226]:2,7->5,13= 14.0 6
total cost= 84.0

x[227]:3,3->4,8= 8.0 5
total cost= 40.0

x[228]:0,28->3,3= 11.0 5
x[228]:6,22->0,27= 11.0 5
total cost= 110.0

x[229]:6,27->5,2= 5.0 5
total cost= 25.0

x[230]:2,7->5,13= 8.0 6
total cost= 48.0

x[231]:1,13->2,18= 8.0 5
x[231]:3,7->1,13= 8.0 6
total cost= 88.0

x[232]:2,21->3,28= 7.0 7
total cost= 49.0

x[233]:6,14->0,19= 14.0 5
total cost= 70.0

x[234]:1,9->4,14= 11.0 5
total cost= 55.0

x[235]:0,28->4,3= 11.0 5
total cost= 55.0

x[236]:0,10->4,15= 15.0 5
total cost= 75.0

x[237]:2,18->4,26= 10.0 8
total cost= 80.0

x[238]:4,29->5,5= 8.0 6
total cost= 48.0

x[239]:0,17->5,24= 3.0 7
x[239]:0,8->6,16= 11.0 8
x[239]:5,27->6,5= 3.0 8
total cost= 133.0

x[240]:4,1->0,8= 11.0 7
total cost= 77.0

x[241]:2,0->4,8= 12.0 8
total cost= 96.0

x[242]:5,23->0,29= 5.0 6
total cost= 30.0

x[243]:0,26->4,1= 8.0 5
x[243]:6,14->0,19= 8.0 5
total cost= 80.0

x[244]:0,10->4,15= 4.0 5
x[244]:0,8->6,16= 3.0 8
x[244]:4,15->6,23= 4.0 8
total cost= 76.0

x[245]:1,8->6,16= 0.5000000000000284 8
x[245]:2,20->1,27= 0.5000000000000284 7
x[245]:2,20->6,26= 11.499999999999972 6
total cost= 76.50000000000026

x[246]:1,9->4,14= 15.0 5
total cost= 75.0

x[247]:1,28->2,3= 8.0 5
x[247]:3,22->1,28= 8.0 6
total cost= 88.0

x[248]:3,10->1,16= 6.0 6
total cost= 36.0

x[249]:1,27->5,2= 8.0 5
total cost= 40.0

x[250]:2,21->3,28= 8.0 7
total cost= 56.0

x[251]:4,29->5,5= 6.0 6
total cost= 36.0

x[252]:0,10->4,15= 13.0 5
total cost= 65.0

x[253]:4,13->2,20= 9.0 7
total cost= 63.0

x[254]:1,12->0,20= 5.0 8
total cost= 40.0

x[255]:0,22->4,27= 9.0 5
x[255]:6,14->0,19= 9.0 5
total cost= 90.0

x[256]:4,0->5,6= 10.0 6
total cost= 60.0

x[257]:3,25->4,0= 6.0 5
total cost= 30.0

x[258]:4,15->5,21= 13.0 6
total cost= 78.0

x[259]:0,15->1,23= 11.0 8
x[259]:5,2->0,8= 11.0 6
total cost= 154.0

x[260]:4,14->6,22= 7.0 8
total cost= 56.0

x[261]:3,24->4,29= 12.0 5
total cost= 60.0

x[262]:1,9->4,14= 10.0 5
total cost= 50.0

x[263]:0,27->2,2= 9.0 5
x[263]:5,14->0,20= 9.0 6
total cost= 99.0

x[264]:1,25->2,0= 13.0 5
total cost= 65.0

x[265]:2,3->3,10= 15.0 7
total cost= 105.0

x[266]:2,20->1,27= 12.0 7
total cost= 84.0

x[267]:0,20->3,25= 13.0 5
total cost= 65.0

x[268]:2,7->5,13= 10.0 6
total cost= 60.0

x[269]:0,26->4,1= 10.0 5
x[269]:0,28->4,3= 5.0 5
total cost= 75.0

x[270]:2,3->3,10= 8.0 7
total cost= 56.0

x[271]:1,4->5,9= 6.0 5
x[271]:3,22->1,28= 6.0 6
total cost= 66.0

x[272]:0,27->2,2= 13.0 5
x[272]:6,21->0,26= 13.0 5
total cost= 130.0

x[273]:4,14->6,22= 14.0 8
total cost= 112.0

x[274]:3,10->1,16= 13.0 6
total cost= 78.0

x[275]:1,27->5,2= 8.0 5
total cost= 40.0

x[276]:0,15->2,20= 13.0 5
x[276]:6,10->0,15= 13.0 5
total cost= 130.0

x[277]:4,0->2,7= 10.0 7
total cost= 70.0

x[278]:0,10->4,15= 8.0 5
total cost= 40.0

x[279]:0,27->2,2= 10.0 5
x[279]:5,21->0,27= 10.0 6
total cost= 110.0

x[280]:0,19->3,24= 14.0 5
total cost= 70.0

x[281]:0,0->1,8= 5.0 8
total cost= 40.0

x[282]:0,27->2,2= 7.0 5
total cost= 35.0

x[283]:6,10->0,15= 14.0 5
total cost= 70.0

x[284]:0,27->2,2= 7.0 5
x[284]:6,22->0,27= 7.0 5
total cost= 70.0

x[285]:3,10->4,15= 11.0 5
x[285]:4,15->0,22= 11.0 7
total cost= 132.0

x[286]:5,6->6,14= 10.0 8
total cost= 80.0

x[287]:3,3->4,8= 11.0 5
total cost= 55.0

x[288]:0,27->2,2= 9.0 5
x[288]:6,10->0,15= 9.0 5
total cost= 90.0

x[289]:0,8->4,13= 12.0 5
total cost= 60.0

x[290]:4,15->5,21= 5.0 6
total cost= 30.0

x[291]:5,14->0,20= 11.0 6
total cost= 66.0

x[292]:3,25->4,0= 15.0 5
total cost= 75.0

x[293]:0,8->4,13= 15.0 5
total cost= 75.0

x[294]:1,9->4,14= 8.0 5
total cost= 40.0

x[295]:0,14->4,19= 12.999999999999996 5
x[295]:6,9->0,14= 12.999999999999996 5
total cost= 129.99999999999997

x[296]:1,28->2,3= 6.0 5
total cost= 30.0

x[297]:4,15->5,21= 8.0 6
total cost= 48.0

x[298]:0,17->5,24= 6.0 7
total cost= 42.0

x[299]:2,18->4,26= 13.0 8
total cost= 104.0

x[300]:3,3->4,8= 15.0 5
x[300]:4,8->0,15= 15.0 7
total cost= 180.0

x[301]:4,15->5,21= 13.0 6
total cost= 78.0

x[302]:3,25->4,0= 15.0 5
x[302]:4,1->0,8= 15.0 7
total cost= 180.0

x[303]:4,29->5,5= 5.0 6
total cost= 30.0

x[304]:0,28->3,3= 7.0 5
x[304]:6,22->0,27= 7.0 5
total cost= 70.0

x[305]:0,27->2,2= 12.0 5
x[305]:5,21->0,27= 12.0 6
total cost= 132.0

x[306]:6,23->0,28= 6.0 5
total cost= 30.0

x[307]:1,27->5,2= 11.0 5
total cost= 55.0

x[308]:1,27->5,2= 8.0 5
total cost= 40.0

x[309]:0,0->1,8= 7.0 8
total cost= 56.0

x[310]:3,25->4,0= 5.0 5
x[310]:4,8->0,15= 5.0 7
total cost= 60.0

x[311]:4,14->6,22= 13.0 8
total cost= 104.0

x[312]:2,3->3,10= 10.0 7
total cost= 70.0

x[313]:1,16->3,22= 6.0 6
total cost= 36.0

x[314]:5,6->6,14= 10.0 8
total cost= 80.0

x[315]:0,15->1,23= 12.0 8
total cost= 96.0

x[316]:3,7->1,13= 13.0 6
x[316]:1,14->6,22= 13.0 8
total cost= 182.0

x[317]:3,22->1,28= 10.0 6
total cost= 60.0

x[318]:6,27->5,2= 15.0 5
total cost= 75.0

x[319]:0,28->3,3= 12.0 5
x[319]:5,21->0,27= 12.0 6
total cost= 132.0

x[320]:1,4->5,9= 6.0 5
x[320]:3,28->1,4= 6.0 6
total cost= 66.0

x[321]:0,20->1,28= 6.0 8
total cost= 48.0

x[322]:0,27->2,2= 5.0 5
x[322]:6,10->0,15= 5.0 5
total cost= 50.0

x[323]:2,7->5,13= 8.0 6
total cost= 48.0

x[324]:5,6->6,14= 12.0 8
total cost= 96.0

x[325]:4,0->3,7= 5.0 7
total cost= 35.0

x[326]:2,20->6,26= 12.0 6
total cost= 72.0

x[327]:0,19->3,24= 11.0 5
x[327]:5,2->0,8= 11.0 6
total cost= 121.0

x[328]:4,29->5,5= 8.0 6
total cost= 48.0

x[329]:3,25->4,0= 12.0 5
total cost= 60.0

x[330]:2,20->6,26= 13.0 6
total cost= 78.0

x[331]:2,2->1,9= 11.0 7
total cost= 77.0

x[332]:1,13->2,18= 10.0 5
x[332]:3,7->1,13= 10.0 6
total cost= 110.0

x[333]:0,27->2,2= 13.0 5
x[333]:6,21->0,26= 13.0 5
total cost= 130.0

x[334]:2,3->3,10= 11.0 7
total cost= 77.0

x[335]:1,16->3,22= 14.0 6
total cost= 84.0

x[336]:5,2->0,8= 11.0 6
total cost= 66.0

x[337]:1,16->3,22= 9.0 6
total cost= 54.0

x[338]:4,13->2,20= 12.0 7
total cost= 84.0

x[339]:2,21->3,28= 13.0 7
total cost= 91.0

x[340]:3,24->4,29= 14.0 5
total cost= 70.0

x[341]:4,29->5,5= 11.0 6
total cost= 66.0

x[342]:0,0->1,8= 7.0 8
total cost= 56.0

x[343]:0,28->4,3= 15.0 5
x[343]:6,23->0,28= 15.0 5
total cost= 150.0

x[344]:0,15->1,23= 5.0 8
x[344]:5,2->0,8= 5.0 6
total cost= 70.0

x[345]:5,23->0,29= 15.0 6
total cost= 90.0

x[346]:4,13->2,20= 11.0 7
total cost= 77.0

x[347]:0,19->3,24= 8.0 5
x[347]:6,12->0,17= 8.0 5
total cost= 80.0

x[348]:2,0->4,8= 6.0 8
total cost= 48.0

x[349]:6,14->0,19= 9.0 5
total cost= 45.0

x[350]:2,3->3,10= 15.0 7
total cost= 105.0

x[351]:5,23->0,29= 13.0 6
total cost= 78.0

x[352]:6,23->0,28= 5.0 5
total cost= 25.0

x[353]:5,6->6,14= 7.0 8
total cost= 56.0

x[354]:0,20->1,28= 11.0 8
x[354]:6,10->0,15= 11.0 5
total cost= 143.0

x[355]:1,9->4,14= 12.0 5
total cost= 60.0

x[356]:5,2->6,10= 10.0 8
total cost= 80.0

x[357]:1,8->6,16= 6.0 8
total cost= 48.0

x[358]:3,24->4,29= 14.0 5
total cost= 70.0

x[359]:1,9->4,14= 5.0 5
total cost= 25.0

x[360]:0,8->6,16= 11.0 8
total cost= 88.0

x[361]:2,3->0,10= 11.0 7
total cost= 77.0

x[362]:2,3->0,10= 15.0 7
total cost= 105.0

x[363]:3,10->1,16= 10.0 6
total cost= 60.0

x[364]:1,8->6,16= 7.999999999999993 8
total cost= 63.99999999999994

x[365]:1,8->6,16= 11.0 8
total cost= 88.0

x[366]:0,8->6,16= 13.999999999999998 8
total cost= 111.99999999999999

x[367]:2,3->0,10= 15.0 7
total cost= 105.0

x[368]:0,0->1,8= 6.0 8
x[368]:6,14->0,19= 6.0 5
total cost= 78.0

x[369]:0,20->1,28= 5.0 8
x[369]:6,12->0,17= 5.0 5
total cost= 65.0

x[370]:0,15->1,23= 5.0 8
total cost= 40.0

x[371]:0,27->2,2= 11.0 5
x[371]:5,10->0,16= 11.0 6
total cost= 121.0

x[372]:4,15->5,21= 11.0 6
total cost= 66.0

x[373]:0,27->2,2= 15.0 5
total cost= 75.0

x[374]:6,12->0,17= 12.0 5
total cost= 60.0

x[375]:4,8->1,13= 13.0 5
total cost= 65.0

x[376]:1,25->2,0= 4.0 5
x[376]:1,28->2,3= 7.0 5
total cost= 55.0

x[377]:0,20->1,28= 6.0 8
x[377]:5,2->0,8= 6.0 6
total cost= 84.0

x[378]:0,8->4,13= 7.0 5
x[378]:5,2->0,8= 7.0 6
total cost= 77.0

x[379]:0,15->2,20= 15.0 5
x[379]:6,10->0,15= 15.0 5
total cost= 150.0

x[380]:4,1->0,8= 11.0 7
total cost= 77.0

x[381]:5,2->6,10= 14.0 8
total cost= 112.0

x[382]:1,9->4,14= 8.0 5
total cost= 40.0

x[383]:6,23->0,28= 15.0 5
total cost= 75.0

x[384]:0,8->4,13= 9.0 5
total cost= 45.0

x[385]:0,27->2,2= 12.0 5
x[385]:5,21->0,27= 12.0 6
total cost= 132.0

x[386]:0,17->5,24= 7.0 7
total cost= 49.0

x[387]:0,20->3,25= 8.0 5
total cost= 40.0

x[388]:2,7->5,13= 14.0 6
total cost= 84.0

x[389]:5,6->6,14= 8.0 8
total cost= 64.0

x[390]:0,0->1,8= 9.0 8
total cost= 72.0

x[391]:2,20->6,26= 9.0 6
total cost= 54.0

x[392]:0,26->4,1= 9.0 5
x[392]:5,14->0,20= 9.0 6
total cost= 99.0

x[393]:0,10->4,15= 6.0 5
x[393]:6,23->0,28= 6.0 5
total cost= 60.0

x[394]:1,4->5,9= 8.0 5
total cost= 40.0

x[395]:0,15->1,23= 10.0 8
total cost= 80.0

x[396]:1,9->4,14= 10.0 5
total cost= 50.0

x[397]:1,25->2,0= 6.0 5
total cost= 30.0

x[398]:1,14->6,22= 13.0 8
total cost= 104.0

x[399]:2,3->3,10= 11.0 7
total cost= 77.0

Total time= 9026369

Sovle for test9_7_30_30_400C.txt
Colmun limit=1000
number of service arcs=900
number of holding arcs=210

root node bound= 80545.44000000003
Before intensification, we have 10500 columns
After pick up:
==================Intensification===================
We add 500 columns to cplex.
Tried aggregator 2 times.
MIP Presolve eliminated 34843 rows and 33058 columns.
Aggregator did 5225 substitutions.
Reduced MIP has 45273 rows, 157436 columns, and 478789 nonzeros.
Reduced MIP has 7 binaries, 493 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.41 sec. (248.95 ticks)
Probing time = 0.10 sec. (5.07 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 419 rows and 1496 columns.
Reduced MIP has 44854 rows, 155940 columns, and 474230 nonzeros.
Reduced MIP has 7 binaries, 493 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.39 sec. (185.65 ticks)
Probing time = 0.14 sec. (5.02 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 56.47 sec. (14788.87 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    80545.4400    48                  80545.4400    57120         
      0     0    80546.8153    42                  Cuts: 1308    65203         
      0     0    80547.2760    40                  Cuts: 1024    70564         
      0     0    80547.9399    45               MIRcuts: 1131    75119         
      0     0    80552.7295    44               MIRcuts: 1295    80115         
      0     0    80556.1307    41               MIRcuts: 1206    85373         
Heuristic still looking.
Heuristic still looking.
Heuristic still looking.
      0     2    80556.1307    41                  80556.1307    85373         
Elapsed time = 464.68 sec. (129833.81 ticks, tree = 0.00 MB, solutions = 0)
      1     3    80556.1307    42                  80556.1307    86966         
      2     4    80556.1307    40                  80556.1307    89278         
      3     5    80556.3848    41                  80556.1307    91338         
      4     6    80556.1932    39                  80556.1307    94606         
      6     8    80556.2409    40                  80556.1307   119688         
      7     9    80556.1932    39                  80556.1307   120442         
      8    10    80556.2663    43                  80556.1307   122098         
      9    11    80556.1932    38                  80556.1307   136407         
     10    12    80557.9565    35                  80556.1307   159303         
     11    13    80561.0599    40                  80556.2409   211235         
Elapsed time = 610.87 sec. (181306.33 ticks, tree = 0.00 MB, solutions = 0)
     14    16    80562.5327    36                  80556.2409   358527         
     17    19    80561.5534    40                  80556.2663   390131         
     18    20    80582.5684    39                  80556.2663   401604         
     20    22    80563.5517    41                  80556.2663   423630         
     21    23    80563.6903    41                  80556.2663   429212         
     22    24    80565.4094    41                  80556.2663   434141         
     23    25    80568.5758    38                  80556.2663   440691         
     24    26    80561.6029    40                  80556.2663   443804         
     25    27    80573.6679    35                  80556.2663   450376         
     27    29    80564.3503    41                  80556.2663   459648         
Elapsed time = 817.40 sec. (246462.62 ticks, tree = 0.00 MB, solutions = 0)
     28    30    80563.6903    40                  80556.2663   465795         
     32    34    80563.5048    41                  80556.2663   481990         
     36    38    80568.9241    39                  80556.2663   496903         
     43    45    80573.1205    41                  80556.2663   523191         
     44    46    80587.2646    32                  80556.2663   526084         
     45    47    80583.1936    35                  80556.2663   529685         
     47    49    80590.4360    40                  80556.2663   539620         
     51    53    80574.1698    39                  80556.2663   556216         
     55    57    80574.9212    39                  80556.2663   575867         
     59    61    80580.1715    33                  80556.2663   595492         
Elapsed time = 1114.82 sec. (321822.84 ticks, tree = 0.00 MB, solutions = 0)
     64    66    80597.7505    37                  80556.2663   618788         
     66    68    80590.0428    32                  80556.2663   626237         
     70    72    80583.4726    32                  80556.2663   645298         
     72    74    80597.7734    38                  80556.2663   654560         
     74    76    80585.8292    33                  80556.2663   664241         
     75    77    80609.9043    36                  80556.2663   667938         
     89    91    80590.8108    33                  80556.2663   736794         
     90    92    80660.1538    33                  80556.2663   742139         
     93    95    80600.5514    35                  80556.2663   753696         
     94    96    80615.8637    32                  80556.2663   757016         
Elapsed time = 1537.98 sec. (440066.43 ticks, tree = 0.22 MB, solutions = 0)
     95    97    80636.3840    39                  80556.2663   763338         
     98   100    80625.3093    40                  80556.2663   773327         
    102   104    80632.3364    34                  80556.2663   786612         
    106   108    80636.4227    35                  80556.2663   796488         
    110   112    80661.4700    39                  80556.2663   807203         
    114   116    80638.3519    35                  80556.2663   821237         
    118   120    80653.9891    34                  80556.2663   832715         
    121   123    80605.9654    34                  80556.2663   842985         
    123   125    80662.3003    33                  80556.2663   847143         
    126   128    80661.5400    31                  80556.2663   857225         
Elapsed time = 1782.69 sec. (500125.29 ticks, tree = 0.22 MB, solutions = 0)
    130   132    80662.6641    35                  80556.2663   866933         
    136   138    80611.9542    28                  80556.2663   884369         
    140   142    80639.6636    28                  80556.2663   903118         
    142   144    80672.6947    30                  80556.2663   913360         
    144   146    80623.1821    30                  80556.2663   920933         
    146   148    80674.8777    30                  80556.2663   927497         
    148   150    80626.0247    30                  80556.2663   936492         
    150   152    80696.6522    30                  80556.2663   945348         
    152   154    80627.1065    28                  80556.2663   953907         
    156   158    80630.0527    31                  80556.2663   973047         
Elapsed time = 2025.93 sec. (559930.57 ticks, tree = 19.26 MB, solutions = 0)
    158   160    80705.5107    31                  80556.2663   981850         
    159   161    80851.8931    22                  80556.2663   986548         
    160   162    80634.2085    32                  80556.2663   991803         
    163   165    80890.6080    25                  80556.2663  1003730         
    164   166    80630.0882    31                  80556.2663  1006563         
    166   168    80732.5478    27                  80556.2663  1020601         
    174   176    80641.0886    32                  80556.2663  1056590         
    178   180    80786.5128    29                  80556.2663  1075762         
    182   184    80646.9258    30                  80556.2663  1130307         
    186   188    80653.1456    29                  80556.2663  1190477         
Elapsed time = 2312.62 sec. (632842.19 ticks, tree = 22.48 MB, solutions = 0)
    190   192    80658.5422    33                  80556.2663  1254024         
    194   196    80707.3953    30                  80556.2663  1266291         
*   197+  197                        82772.0000    80556.2663             2.68%
    197   199    81010.4667    22    82772.0000    80556.2663  1272430    2.68%
    216   218    80693.9035    28    82772.0000    80556.2663  1326222    2.68%
    229   231    80902.5615    22    82772.0000    80556.2663  1362292    2.68%
    230   232    80820.7449    25    82772.0000    80556.2663  1367841    2.68%
    234   236    80711.6224    32    82772.0000    80556.2663  1373862    2.68%
    238   240    80944.9536    25    82772.0000    80556.2663  1383164    2.68%
    242   244    80711.6224    31    82772.0000    80556.2663  1395253    2.68%
    246   248    80714.1274    31    82772.0000    80556.2663  1404979    2.68%
Elapsed time = 2737.41 sec. (740253.52 ticks, tree = 41.48 MB, solutions = 1)
    248   250    80910.4000    25    82772.0000    80556.2663  1410383    2.68%
    313   315    80788.6513    27    82772.0000    80556.2663  1527305    2.68%
    315   317    80923.5520    24    82772.0000    80556.2663  1530705    2.68%
    318   320    81473.2800    10    82772.0000    80556.2663  1536761    2.68%
    319   321    80967.8123    27    82772.0000    80556.2663  1541940    2.68%
*   322+  322                        81583.0000    80556.2663             1.26%
    323   325    80940.3600    25    81583.0000    80556.2663  1547392    1.26%
    327   329    80980.6067    26    81583.0000    80556.2663  1553430    1.26%
    331   331    80951.6000    22    81583.0000    80556.2663  1558584    1.26%
    333   333    80967.2849    22    81583.0000    80556.2663  1563653    1.26%
    337   337    80970.8224    20    81583.0000    80556.2663  1564958    1.26%
Elapsed time = 3299.30 sec. (903834.22 ticks, tree = 86.89 MB, solutions = 1)
    341   341    80973.0299    21    81583.0000    80556.2663  1570751    1.26%
    345   343    81017.5200    21    81583.0000    80556.2663  1583185    1.26%
    349   345    80975.8045    21    81583.0000    80556.2663  1587750    1.26%
    444   404    80566.2821    42    81583.0000    80556.2663  1696643    1.26%
    445   393    81031.9039    21    81583.0000    80556.2663  1700254    1.26%
    446   394    80570.6218    40    81583.0000    80556.2663  1704780    1.26%
    450   398    80591.4771    43    81583.0000    80556.2663  1716933    1.26%
    454   400    80570.6218    40    81583.0000    80556.2663  1724154    1.26%
    458   404    80570.6218    39    81583.0000    80556.2663  1730500    1.26%
    462   406    80570.6859    41    81583.0000    80556.2663  1734906    1.26%
Elapsed time = 3517.47 sec. (976713.77 ticks, tree = 129.53 MB, solutions = 2)
    466   410    80584.9067    37    81583.0000    80556.2663  1745342    1.26%
    470   412    80585.7721    37    81583.0000    80556.2663  1750724    1.26%
    474   416    80613.7926    38    81583.0000    80556.2663  1759346    1.26%
    478   418    80585.7721    36    81583.0000    80556.2663  1768209    1.26%
    482   422    80585.9371    38    81583.0000    80556.2663  1773155    1.26%
    486   424    80600.4808    38    81583.0000    80556.2663  1787051    1.26%
    490   426    80587.6772    40    81583.0000    80556.2663  1792687    1.26%
    494   430    80633.5723    33    81583.0000    80556.2663  1801523    1.26%
    555   465    80640.1640    37    81583.0000    80556.2663  1893708    1.26%
    563   473    80634.2476    33    81583.0000    80556.2663  1905627    1.26%
Elapsed time = 3784.03 sec. (1048001.72 ticks, tree = 161.68 MB, solutions = 2)
    571   481    80639.9451    31    81583.0000    80556.2663  1915510    1.26%
    577   487    80655.9882    27    81583.0000    80556.2663  1934801    1.26%
    581   491    80657.0209    30    81583.0000    80556.2663  1945727    1.26%
    585   495    80681.8849    27    81583.0000    80556.2663  1961495    1.26%
    587   497    80660.2634    31    81583.0000    80556.2663  1967375    1.26%
    591   501    80658.0334    30    81583.0000    80556.2663  1980131    1.26%
    595   505    80662.8096    31    81583.0000    80556.2663  1994392    1.26%
    599   509    80773.9909    26    81583.0000    80556.2663  2003436    1.26%
    603   513    80671.5077    30    81583.0000    80556.2663  2010445    1.26%
    607   515    80673.3304    31    81583.0000    80556.2663  2019243    1.26%
Elapsed time = 4026.80 sec. (1109570.38 ticks, tree = 161.68 MB, solutions = 2)
    611   519    80917.7371    27    81583.0000    80556.2663  2025890    1.26%
    619   525    80682.3469    30    81583.0000    80556.2663  2038212    1.26%
    623   527    80817.6829    29    81583.0000    80556.2663  2048228    1.26%
    646   548    81258.0800    16    81583.0000    80556.2663  2099974    1.26%
    665   565    80722.5471    28    81583.0000    80556.2663  2147249    1.26%
    669   569    80744.5393    24    81583.0000    80556.2663  2156869    1.26%
    672   570    80617.4267    32    81583.0000    80556.2663  2166874    1.26%
    677   575    80860.3689    24    81583.0000    80556.2663  2176563    1.26%
    685   583    80874.3486    28    81583.0000    80556.2663  2193159    1.26%
    693   589    80771.2139    27    81583.0000    80556.2663  2205815    1.26%
Elapsed time = 4378.98 sec. (1204601.10 ticks, tree = 206.78 MB, solutions = 2)
    701   595    80772.4345    27    81583.0000    80556.2663  2213291    1.26%
    705   597    80777.4016    27    81583.0000    80556.2663  2219549    1.26%
    709   601    80783.5590    29    81583.0000    80556.2663  2229524    1.26%
    713   603    80932.2949    24    81583.0000    80556.2663  2237179    1.26%
    789   639    80834.6753    28    81583.0000    80556.2663  2308116    1.26%
    791   641    80784.4898    29    81583.0000    80556.2663  2311462    1.26%
    795   645    80986.8462    26    81583.0000    80556.2663  2317903    1.26%
    803   649    80831.6406    28    81583.0000    80556.2663  2331912    1.26%
    811   657    80790.3858    24    81583.0000    80556.2663  2344091    1.26%
    815   661    80794.5556    26    81583.0000    80556.2663  2355219    1.26%
Elapsed time = 4805.04 sec. (1314507.50 ticks, tree = 250.76 MB, solutions = 2)
    819   663    80803.5571    27    81583.0000    80556.2663  2364243    1.26%
    821   665    80902.7788    24    81583.0000    80556.2663  2367626    1.26%
    951   711    81030.1598    28    81583.0000    80556.2663  2484593    1.26%
    959   715    81183.6800    28    81583.0000    80556.2663  2499146    1.26%
    961   717    80563.2941    43    81583.0000    80556.2663  2504316    1.26%
    973   729    80563.5487    39    81583.0000    80556.2663  2533403    1.26%
    981   737    80607.0700    41    81583.0000    80556.2663  2543763    1.26%
    985   741    80564.8440    39    81583.0000    80556.2663  2558114    1.26%
    986   742    80908.0588    22    81583.0000    80556.2663  2558339    1.26%
    990   746    81151.5100    21    81583.0000    80556.2663  2581667    1.26%
Elapsed time = 5241.64 sec. (1447797.89 ticks, tree = 284.44 MB, solutions = 2)
   1001   757    80577.5108    34    81583.0000    80556.2663  2602078    1.26%
   1014   770    80640.8829    35    81583.0000    80556.2663  2634221    1.26%
   1018   774    80582.9195    33    81583.0000    80556.2663  2651896    1.26%
   1022   778    80587.2596    32    81583.0000    80556.2663  2664622    1.26%
   1026   782    80588.8044    30    81583.0000    80556.2663  2677285    1.26%
   1030   786    80589.0241    31    81583.0000    80556.2663  2684650    1.26%
   1034   790    80628.6320    33    81583.0000    80556.2663  2692285    1.26%
   1038   794    80589.5003    31    81583.0000    80556.2663  2706935    1.26%
   1042   798    80622.2052    33    81583.0000    80556.2663  2721944    1.26%
   1046   802    80591.7822    34    81583.0000    80556.2663  2737222    1.26%
Elapsed time = 5594.27 sec. (1538164.72 ticks, tree = 315.28 MB, solutions = 2)
   1050   806    80635.7861    29    81583.0000    80556.2663  2747314    1.26%
   1054   810    80605.3258    29    81583.0000    80556.2663  2758953    1.26%
   1058   814    80626.6540    27    81583.0000    80556.2663  2767192    1.26%
   1062   818    80678.2632    30    81583.0000    80556.2663  2783414    1.26%
   1090   846    80979.2000    20    81583.0000    80556.2663  2853071    1.26%
   1094   850    80990.1096    21    81583.0000    80556.2663  2874128    1.26%
   1098   854    81013.9683    22    81583.0000    80556.2663  2889537    1.26%
   1102   858    81006.7200    22    81583.0000    80556.2663  2897853    1.26%
   1110   866    81227.5900    17    81583.0000    80556.2663  2912435    1.26%
   1114   870    81008.6400    22    81583.0000    80556.2663  2932075    1.26%
Elapsed time = 5874.31 sec. (1611892.86 ticks, tree = 339.56 MB, solutions = 2)
   1118   874    81016.6533    19    81583.0000    80556.2663  2942363    1.26%
   1122   878    81340.5840    17    81583.0000    80556.2663  2958786    1.26%
   1130   886    81152.7200    14    81583.0000    80556.2663  2982920    1.26%
   1142   898    81226.7200    16    81583.0000    80556.2663  3005368    1.26%
   1146   902    81177.3600    14    81583.0000    80556.2663  3020746    1.26%
   1151   907    81109.2964    24    81583.0000    80556.2663  3035769    1.26%
   1159   915    81006.1090    20    81583.0000    80556.2663  3061425    1.26%
   1163   917    81286.7147    22    81583.0000    80556.2663  3074155    1.26%
   1171   925    81006.6960    20    81583.0000    80556.2663  3095996    1.26%
   1175   929    81008.5400    19    81583.0000    80556.2663  3107110    1.26%
Elapsed time = 6141.46 sec. (1676896.19 ticks, tree = 339.56 MB, solutions = 2)
   1179   931    81017.1600    24    81583.0000    80556.2663  3120780    1.26%
   1187   937    80678.6907    24    81583.0000    80556.2663  3136242    1.26%
   1189   937    81132.1371    19    81583.0000    80556.2663  3148007    1.26%
   1195   941    80685.3318    24    81583.0000    80556.2663  3162772    1.26%
   1199   945    80762.0673    23    81583.0000    80556.2663  3172994    1.26%
   1203   949    80724.6285    28    81583.0000    80556.2663  3187622    1.26%
   1207   951    80763.9247    25    81583.0000    80556.2663  3195722    1.26%
   1211   955    80767.3959    24    81583.0000    80556.2663  3203207    1.26%
   1215   959    80768.7503    26    81583.0000    80556.2663  3217612    1.26%
   1219   963    80798.9164    28    81583.0000    80556.2663  3227200    1.26%
Elapsed time = 6432.69 sec. (1754291.51 ticks, tree = 387.51 MB, solutions = 2)
   1227   969    81053.7600    23    81583.0000    80556.2663  3255087    1.26%
   1231   973    80775.8800    23    81583.0000    80556.2663  3268824    1.26%
   1239   981    80807.5086    26    81583.0000    80556.2663  3288204    1.26%
   1247   987    81297.2967    22    81583.0000    80556.2663  3305996    1.26%
   1249   989    81226.5600    20    81583.0000    80556.2663  3313591    1.26%
   1257   995    81435.5100    19    81583.0000    80556.2663  3339972    1.26%
   1265  1003    81503.7600    16    81583.0000    80556.2663  3365457    1.26%
   1316  1028    80782.1333    25    81583.0000    80556.2663  3447633    1.26%
   1318  1030    81369.3600    20    81583.0000    80556.2663  3454022    1.26%
   1319  1031    81195.7467    17    81583.0000    80556.2663  3460409    1.26%
Elapsed time = 6711.70 sec. (1828363.82 ticks, tree = 435.77 MB, solutions = 2)
   1323  1033    81103.8725    18    81583.0000    80556.2663  3465274    1.26%
   1327  1037    81401.7200    13    81583.0000    80556.2663  3471851    1.26%
   1335  1043    81106.5891    19    81583.0000    80556.2663  3485482    1.26%
   1339  1045    81113.9273    18    81583.0000    80556.2663  3492232    1.26%
   1347  1051    81369.0133    15    81583.0000    80556.2663  3516894    1.26%
   1351  1055    81124.9600    17    81583.0000    80556.2663  3525378    1.26%
   1355  1057    81313.4587    19    81583.0000    80556.2663  3534088    1.26%
   1363  1065    81141.0200    16    81583.0000    80556.2663  3557884    1.26%
   1367  1067    81450.3760    16    81583.0000    80556.2663  3570562    1.26%
   1370  1070    81418.6000    18    81583.0000    80556.2663  3582202    1.26%
Elapsed time = 7047.35 sec. (1911331.01 ticks, tree = 435.77 MB, solutions = 2)
   1374  1074    81271.0800    21    81583.0000    80556.2663  3594802    1.26%
   1378  1078    81272.6800    21    81583.0000    80556.2663  3598223    1.26%
   1382  1082    81384.0000    21    81583.0000    80556.2663  3618905    1.26%
   1386  1086    81273.5120    21    81583.0000    80556.2663  3625405    1.26%
   1390  1088    81312.5100    19    81583.0000    80556.2663  3633726    1.26%
   1398  1094    81321.3600    22    81583.0000    80556.2663  3656090    1.26%

Mixed integer rounding cuts applied:  1275
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =  464.58 sec. (129792.66 ticks)
Parallel b&c, 4 threads:
  Real time             = 6735.52 sec. (1824404.84 ticks)
  Sync time (average)   =  319.16 sec.
  Wait time (average)   =  319.36 sec.
                          ------------
Total (root+branch&cut) = 7200.09 sec. (1954197.50 ticks)
We use intensification finding a better solution: 81583.0
================ Solution ================
BAP terminated with objective : 81583
Total Number of iterations: 46
Total Number of processed nodes: 4
Total Time spent on master problems: 1407075 Total time spent on pricing problems: 7040
Best bound : 80580.47500000005
[0, 5, 13, 16, 21, 23, 26, 29, 42, 45, 48, 69, 77, 97, 111, 120, 125, 126, 139, 150, 152, 156, 157, 160, 162, 169, 171, 179, 186, 191, 202, 203, 204, 215, 221, 223, 231, 237, 248, 252, 253, 256, 265, 276, 292, 308, 311, 315, 324, 335, 352, 370, 377, 408, 417, 418, 420, 421, 426, 453, 461, 489, 491, 492, 496, 498, 508, 509, 510, 523, 530, 539, 545, 555, 557, 558, 594, 599, 600, 605, 607, 612, 618, 621, 622, 624, 628, 630, 634, 640, 641, 646, 648, 654, 662, 673, 687, 694, 708, 725, 726, 745, 748, 755, 763, 767, 768, 775, 776, 780, 804, 813, 820, 822, 827, 833, 842, 862, 871, 892, 893, 899]
The number of service edges used= 122

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false edgeIndexset: [0, 265, 169, 13, 126] start node= 1 start time= 6 capacity type= 2 ifChargeSet: []
(0,0)->(1,6)->(0,13)->(1,19)->(2,25)->(0,0):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [248, 152, 26, 139, 13] start node= 1 start time= 2 capacity type= 2 ifChargeSet: []
(1,2)->(2,8)->(0,13)->(1,19)->(0,26)->(1,2):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [256, 160, 21, 662, 237] start node= 1 start time= 27 capacity type= 2 ifChargeSet: []
(5,2)->(1,10)->(2,16)->(0,21)->(1,27)->(5,2):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [42, 618, 125, 29, 654] start node= 4 start time= 18 capacity type= 2 ifChargeSet: []
(1,5)->(0,12)->(4,18)->(5,24)->(0,29)->(1,5):1.0
Fix cost= 400 variable cost= 120

artificial: false edgeIndexset: [48, 594, 421, 253, 157] start node= 1 start time= 7 capacity type= 2 ifChargeSet: []
(3,1)->(1,7)->(2,13)->(0,18)->(4,24)->(3,1):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [179, 612, 23, 648, 335] start node= 1 start time= 29 capacity type= 1 ifChargeSet: []
(2,5)->(4,12)->(5,18)->(0,23)->(1,29)->(2,5):1.0
Fix cost= 200 variable cost= 120

artificial: false edgeIndexset: [420, 186, 492, 204, 558] start node= 4 start time= 18 capacity type= 1 ifChargeSet: []
(3,0)->(1,6)->(3,12)->(4,18)->(1,24)->(3,0):3.0
Fix cost= 150 variable cost= 120

artificial: false edgeIndexset: [775, 252, 156, 780, 77] start node= 5 start time= 25 capacity type= 2 ifChargeSet: []
(6,0)->(1,6)->(2,12)->(0,17)->(5,25)->(6,0):2.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [640, 215, 621, 45, 687] start node= 1 start time= 5 capacity type= 2 ifChargeSet: []
(1,5)->(5,10)->(0,15)->(4,21)->(5,27)->(1,5):1.0
Fix cost= 300 variable cost= 120

artificial: false edgeIndexset: [545, 899, 646, 221, 111] start node= 5 start time= 16 capacity type= 2 ifChargeSet: []
(4,5)->(1,11)->(5,16)->(0,21)->(6,29)->(4,5):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [417, 489, 842, 171, 555] start node= 4 start time= 15 capacity type= 2 ifChargeSet: []
(6,2)->(3,9)->(4,15)->(1,21)->(2,27)->(6,2):1.0
Fix cost= 400 variable cost= 120

artificial: false edgeIndexset: [162, 599, 408, 426, 893] start node= 4 start time= 29 capacity type= 2 ifChargeSet: []
(3,6)->(1,12)->(2,18)->(6,23)->(4,29)->(3,6):1.0
Fix cost= 400 variable cost= 120

artificial: false edgeIndexset: [496, 453, 311, 748, 622] start node= 4 start time= 22 capacity type= 2 ifChargeSet: []
(3,3)->(2,11)->(3,16)->(4,22)->(5,28)->(3,3):1.0
Fix cost= 400 variable cost= 120

artificial: false edgeIndexset: [370, 324, 708, 694, 539] start node= 5 start time= 18 capacity type= 2 ifChargeSet: []
(5,4)->(2,10)->(5,18)->(2,24)->(3,29)->(5,4):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [624, 498, 5, 630, 1007, 191] start node= 4 start time= 24 capacity type= 1 ifChargeSet: []
(5,0)->(0,5)->(1,11)->(3,17)->(3,18)->(4,24)->(5,0):2.0
Fix cost= 150 variable cost= 116

artificial: false edgeIndexset: [628, 69, 634, 892, 767] start node= 4 start time= 28 capacity type= 1 ifChargeSet: []
(5,4)->(0,9)->(5,17)->(6,22)->(4,28)->(5,4):1.0
Fix cost= 150 variable cost= 120

artificial: false edgeIndexset: [16, 1024, 641, 202, 508, 605] start node= 4 start time= 4 capacity type= 1 ifChargeSet: []
(4,4)->(4,5)->(5,11)->(0,16)->(1,22)->(3,28)->(4,4):1.0
Fix cost= 150 variable cost= 116

artificial: false edgeIndexset: [673, 871, 231, 776, 607] start node= 4 start time= 7 capacity type= 1 ifChargeSet: []
(6,1)->(4,7)->(5,13)->(1,21)->(5,26)->(6,1):1.0
Fix cost= 150 variable cost= 120

artificial: false edgeIndexset: [768, 276, 804, 150, 223, 1103] start node= 5 start time= 18 capacity type= 2 ifChargeSet: []
(1,0)->(2,6)->(1,13)->(5,18)->(6,23)->(6,24)->(1,0):1.0
Fix cost= 350 variable cost= 116

artificial: false edgeIndexset: [768, 833, 418, 308, 523, 813] start node= 5 start time= 18 capacity type= 2 ifChargeSet: []
(6,3)->(2,8)->(3,13)->(5,18)->(6,23)->(2,28)->(6,3):2.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [530, 755, 820, 745, 315, 510] start node= 5 start time= 5 capacity type= 2 ifChargeSet: []
(3,0)->(5,5)->(6,10)->(2,15)->(3,20)->(5,25)->(3,0):1.0
Fix cost= 350 variable cost= 120

artificial: false edgeIndexset: [97, 292, 1095, 1096, 120, 827, 959] start node= 1 start time= 0 capacity type= 1 ifChargeSet: []
(1,0)->(0,7)->(6,15)->(6,16)->(6,17)->(2,22)->(1,29)->(1,0):1.0
Fix cost= 200 variable cost= 108

artificial: false edgeIndexset: [725, 1000, 539, 203, 491, 557, 1054] start node= 5 start time= 4 capacity type= 2 ifChargeSet: []
(5,4)->(5,5)->(3,10)->(3,11)->(4,17)->(1,23)->(3,29)->(5,4):1.0
Fix cost= 350 variable cost= 112

artificial: false edgeIndexset: [1090, 1091, 755, 822, 745, 377, 510] start node= 5 start time= 5 capacity type= 2 ifChargeSet: []
(3,0)->(5,5)->(6,10)->(6,11)->(6,12)->(2,17)->(5,25)->(3,0):1.0
Fix cost= 350 variable cost= 112

artificial: false edgeIndexset: [352, 979, 980, 981, 726, 600, 1049, 461] start node= 4 start time= 29 capacity type= 1 ifChargeSet: []
(4,0)->(5,6)->(3,11)->(2,19)->(2,20)->(2,21)->(2,22)->(4,29)->(4,0):1.0
Fix cost= 150 variable cost= 104

artificial: false edgeIndexset: [1025, 1026, 1098, 1099, 763, 1100, 509, 1101, 862, 607] start node= 4 start time= 7 capacity type= 2 ifChargeSet: []
(4,5)->(4,6)->(4,7)->(5,13)->(6,18)->(6,19)->(6,20)->(6,21)->(6,22)->(3,29)->(4,5):1.0
Fix cost= 400 variable cost= 96

fix cost+variable cost+commodity cost= 8750+3636+69197.0=81583.0

vehicle dowork= 74900 commodity dowork= 69197.0
no load ratio= 0.0761415220293725

Total vehicles used= 31

vehicleCoverServiceEdge information:
{0=1, 256=1, 768=3, 5=2, 775=2, 776=1, 265=1, 523=2, 780=2, 13=2, 16=1, 530=1, 276=1, 21=1, 23=1, 26=1, 539=2, 29=1, 545=1, 804=1, 292=1, 42=1, 555=1, 45=1, 813=2, 557=1, 558=3, 48=1, 308=2, 820=1, 822=1, 311=1, 315=1, 827=1, 833=2, 324=1, 69=1, 842=1, 77=2, 335=1, 594=1, 599=1, 600=1, 605=1, 862=1, 607=2, 352=1, 97=1, 612=1, 871=1, 618=1, 621=1, 622=1, 111=1, 624=2, 370=1, 628=1, 630=2, 120=1, 377=1, 634=1, 892=1, 125=1, 893=1, 126=1, 640=1, 641=1, 899=1, 646=1, 648=1, 139=1, 654=1, 662=1, 150=1, 152=1, 408=1, 156=2, 157=1, 160=1, 417=1, 673=1, 162=1, 418=2, 420=3, 421=1, 169=1, 426=1, 171=1, 687=1, 179=1, 694=1, 186=3, 191=2, 708=1, 453=1, 202=1, 203=1, 204=3, 461=1, 725=1, 726=1, 215=1, 221=1, 223=1, 231=1, 489=1, 745=2, 491=1, 492=3, 748=1, 237=1, 496=1, 498=2, 755=2, 248=1, 763=1, 252=2, 508=1, 253=1, 509=1, 510=2, 767=1}

commodityFlowIntoTerminal information:
100 0 0 0 0 79 0 19 0 37 0 0 72 194 0 75 37 200 100 0 0 200 0 47 0 0 100 0 0 96 
100 0 100 0 0 187 383 83 0 0 100 200 100 100 0 0 0 0 0 200 0 109 50 54 95 0 0 100 0 100 
0 0 0 0 0 50 100 0 278 0 97 100 145 100 0 81 100 100 1 50 0 0 50 0 92 64 0 98 194 0 
350 100 0 100 0 0 26 0 0 98 100 40 150 200 0 0 100 100 0 0 100 0 0 0 0 0 0 0 50 287 
0 0 0 0 50 190 0 50 0 0 0 0 48 0 0 100 0 100 250 0 0 100 100 0 198 0 0 0 50 150 
100 0 86 0 198 143 50 0 0 0 100 44 0 150 0 0 88 48 450 0 0 0 0 0 100 389 50 92 100 0 
200 50 100 174 0 0 0 0 0 0 200 0 0 0 0 50 0 0 100 0 0 0 50 381 0 0 0 0 0 100 

vehicle pattern information:
[2, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0]
[0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
x[0]:4,22->5,28= 27.0 6
x[0]:5,0->0,5= 27.0 5
total cost= 297.0

x[1]:1,11->5,16= 2.0 5
x[1]:1,13->5,18= 26.0 5
total cost= 140.0

x[2]:0,21->1,27= 28.0 6
x[2]:1,2->2,8= 28.0 6
total cost= 336.0

x[3]:2,22->4,29= 20.0 7
total cost= 140.0

x[4]:3,20->5,25= 21.0 5
x[4]:5,26->6,1= 21.0 5
total cost= 210.0

x[5]:2,8->3,13= 7.0 5
x[5]:2,24->3,29= 18.0 5
x[5]:2,27->6,2= 4.0 5
x[5]:6,2->3,9= 4.0 7
total cost= 173.0

x[6]:1,19->2,25= 19.0 6
x[6]:4,5->1,11= 19.0 6
total cost= 228.0

x[7]:4,18->1,24= 22.0 6
total cost= 132.0

x[8]:1,6->2,12= 15.0 6
total cost= 90.0

x[9]:3,0->5,5= 19.0 5
x[9]:5,18->6,23= 19.0 5
total cost= 190.0

x[10]:4,12->5,18= 20.0 6
x[10]:5,18->6,23= 20.0 5
total cost= 220.0

x[11]:4,18->5,24= 15.0 6
total cost= 90.0

x[12]:0,23->1,29= 24.0 6
x[12]:1,29->2,5= 24.0 6
total cost= 288.0

x[13]:2,12->0,17= 21.0 5
total cost= 105.0

x[14]:1,19->0,26= 27.0 7
total cost= 189.0

x[15]:1,10->2,16= 20.0 6
total cost= 120.0

x[16]:3,0->5,5= 28.0 5
total cost= 140.0

x[17]:4,18->5,24= 22.0 6
x[17]:4,24->5,0= 5.0 6
total cost= 162.0

x[18]:1,22->3,28= 20.0 6
x[18]:3,28->4,4= 20.0 6
total cost= 240.0

x[19]:1,0->2,6= 29.0 6
x[19]:4,18->1,24= 29.0 6
total cost= 348.0

x[20]:3,13->5,18= 11.0 5
x[20]:3,29->5,4= 19.0 5
total cost= 150.0

x[21]:2,24->3,29= 30.0 5
total cost= 150.0

x[22]:5,6->3,11= 18.0 5
total cost= 90.0

x[23]:0,7->6,15= 20.0 8
total cost= 160.0

x[24]:5,18->2,24= 20.0 6
total cost= 120.0

x[25]:2,8->3,13= 1.0 5
x[25]:2,11->3,16= 15.0 5
total cost= 80.0

x[26]:3,0->1,6= 21.0 6
total cost= 126.0

x[27]:5,5->6,10= 22.0 5
total cost= 110.0

x[28]:6,22->4,28= 16.0 6
total cost= 96.0

x[29]:2,12->0,17= 23.0 5
x[29]:6,3->2,8= 23.0 5
total cost= 230.0

x[30]:3,0->1,6= 19.0 6
total cost= 114.0

x[31]:1,22->3,28= 23.0 6
total cost= 138.0

x[32]:5,18->6,23= 3.0 5
x[32]:5,25->6,0= 4.0 5
x[32]:5,26->6,1= 14.0 5
total cost= 105.0

x[33]:5,18->2,24= 24.0 6
total cost= 144.0

x[34]:4,22->5,28= 25.0 6
x[34]:5,4->0,9= 25.0 5
total cost= 275.0

x[35]:0,26->1,2= 19.0 6
x[35]:1,6->2,12= 19.0 6
total cost= 228.0

x[36]:6,0->1,6= 26.0 6
total cost= 156.0

x[37]:6,2->3,9= 30.0 7
total cost= 210.0

x[38]:0,0->1,6= 24.0 6
total cost= 144.0

x[39]:0,13->1,19= 23.0 6
total cost= 138.0

x[40]:0,26->1,2= 18.0 6
x[40]:1,7->2,13= 18.0 6
total cost= 216.0

x[41]:6,3->2,8= 22.0 5
total cost= 110.0

x[42]:0,21->1,27= 26.0 6
total cost= 156.0

x[43]:1,10->2,16= 20.0 6
total cost= 120.0

x[44]:6,23->2,28= 24.0 5
total cost= 120.0

x[45]:0,13->1,19= 24.0 6
total cost= 144.0

x[46]:2,5->4,12= 2.0 7
x[46]:2,22->4,29= 5.0 7
x[46]:2,10->5,18= 21.0 8
x[46]:4,0->5,6= 5.0 6
x[46]:4,12->5,18= 2.0 6
total cost= 259.0

x[47]:2,22->1,29= 25.0 7
x[47]:2,18->6,23= 4.0 5
x[47]:6,24->1,0= 4.0 6
total cost= 219.0

x[48]:6,0->1,6= 22.0 6
total cost= 132.0

x[49]:4,12->5,18= 28.0 6
x[49]:5,18->0,23= 28.0 5
total cost= 308.0

x[50]:2,10->5,18= 20.0 8
total cost= 160.0

x[51]:1,19->0,26= 23.0 7
total cost= 161.0

x[52]:0,12->4,18= 8.0 6
x[52]:3,16->4,22= 22.0 6
x[52]:5,4->0,9= 8.0 5
x[52]:5,6->3,11= 22.0 5
total cost= 330.0

x[53]:4,21->5,27= 25.0 6
x[53]:5,0->0,5= 25.0 5
total cost= 275.0

x[54]:0,16->1,22= 7.0 6
x[54]:0,15->4,21= 17.0 6
x[54]:1,22->3,28= 7.0 6
x[54]:4,29->3,6= 17.0 7
total cost= 305.0

x[55]:1,5->5,10= 28.0 5
total cost= 140.0

x[56]:1,21->5,26= 16.0 5
total cost= 80.0

x[57]:0,18->4,24= 18.0 6
total cost= 108.0

x[58]:4,21->5,27= 12.0 6
x[58]:4,22->5,28= 2.0 6
x[58]:4,24->5,0= 9.0 6
total cost= 138.0

x[59]:3,0->5,5= 25.0 5
total cost= 125.0

x[60]:4,21->5,27= 20.0 6
total cost= 120.0

x[61]:3,0->5,5= 23.0 5
x[61]:5,5->6,10= 23.0 5
total cost= 230.0

x[62]:0,29->1,5= 22.0 6
total cost= 132.0

x[63]:1,6->3,12= 30.0 6
x[63]:3,16->4,22= 30.0 6
total cost= 360.0

x[64]:0,17->5,25= 18.0 8
total cost= 144.0

x[65]:1,13->5,18= 15.0 5
x[65]:3,13->5,18= 6.0 5
x[65]:6,0->1,6= 15.0 6
x[65]:6,2->3,9= 6.0 7
total cost= 237.0

x[66]:3,13->5,18= 30.0 5
x[66]:5,24->0,29= 30.0 5
total cost= 300.0

x[67]:1,24->3,0= 26.0 6
total cost= 156.0

x[68]:3,6->1,12= 30.0 6
total cost= 180.0

x[69]:3,11->4,17= 28.0 6
total cost= 168.0

x[70]:2,17->5,25= 23.0 8
total cost= 184.0

x[71]:4,5->1,11= 24.0 6
total cost= 144.0

x[72]:3,0->1,6= 26.0 6
total cost= 156.0

x[73]:5,4->2,10= 29.0 6
total cost= 174.0

x[74]:5,10->0,15= 17.0 5
total cost= 85.0

x[75]:0,9->5,17= 17.0 8
total cost= 136.0

x[76]:4,0->5,6= 19.0 6
x[76]:5,17->6,22= 19.0 5
total cost= 209.0

x[77]:1,0->0,7= 12.0 7
x[77]:2,16->0,21= 18.0 5
x[77]:6,24->1,0= 12.0 6
x[77]:6,10->2,15= 18.0 5
total cost= 336.0

x[78]:6,24->1,0= 29.0 6
total cost= 174.0

x[79]:4,5->5,11= 19.0 6
x[79]:4,7->5,13= 5.0 6
x[79]:5,13->6,18= 24.0 5
total cost= 264.0

x[80]:2,25->0,0= 25.0 5
x[80]:6,17->2,22= 25.0 5
total cost= 250.0

x[81]:1,27->5,2= 30.0 5
x[81]:5,5->6,10= 29.0 5
x[81]:5,13->6,18= 1.0 5
total cost= 300.0

x[82]:1,5->0,12= 18.0 7
total cost= 126.0

x[83]:0,18->4,24= 22.0 6
total cost= 132.0

x[84]:5,18->0,23= 19.0 5
total cost= 95.0

x[85]:2,12->0,17= 18.0 5
total cost= 90.0

x[86]:2,18->6,23= 23.0 5
x[86]:2,27->6,2= 6.0 5
total cost= 145.0

x[87]:2,8->3,13= 26.0 5
total cost= 130.0

x[88]:3,1->1,7= 23.0 6
x[88]:3,6->1,12= 5.0 6
total cost= 168.0

x[89]:5,25->3,0= 8.0 5
x[89]:5,28->3,3= 14.0 5
total cost= 110.0

x[90]:3,12->4,18= 25.0 6
total cost= 150.0

x[91]:5,5->3,10= 25.0 5
total cost= 125.0

x[92]:1,5->5,10= 28.0 5
x[92]:6,24->1,0= 28.0 6
total cost= 308.0

x[93]:0,21->1,27= 28.0 6
total cost= 168.0

x[94]:5,25->6,0= 25.0 5
total cost= 125.0

x[95]:0,0->1,6= 30.0 6
x[95]:1,6->2,12= 30.0 6
total cost= 360.0

x[96]:0,18->4,24= 25.0 6
total cost= 150.0

x[97]:2,8->3,13= 28.0 5
total cost= 140.0

x[98]:0,29->1,5= 29.0 6
x[98]:1,6->3,12= 29.0 6
total cost= 348.0

x[99]:3,13->5,18= 16.0 5
x[99]:5,18->6,23= 16.0 5
total cost= 160.0

x[100]:5,25->3,0= 24.0 5
total cost= 120.0

x[101]:3,11->2,19= 21.0 8
total cost= 168.0

x[102]:4,7->5,13= 21.0 6
total cost= 126.0

x[103]:1,6->3,12= 19.0 6
total cost= 114.0

x[104]:0,17->5,25= 18.0 8
total cost= 144.0

x[105]:1,27->5,2= 30.0 5
x[105]:5,5->6,10= 30.0 5
total cost= 300.0

x[106]:5,10->0,15= 4.0 5
x[106]:5,16->0,21= 24.0 5
total cost= 140.0

x[107]:1,24->3,0= 17.0 6
total cost= 102.0

x[108]:1,27->5,2= 26.0 5
x[108]:5,13->6,18= 26.0 5
total cost= 260.0

x[109]:0,0->1,6= 11.0 6
x[109]:0,5->1,11= 19.0 6
total cost= 180.0

x[110]:2,8->0,13= 16.0 5
x[110]:6,3->2,8= 16.0 5
total cost= 160.0

x[111]:4,7->5,13= 24.0 6
x[111]:5,25->6,0= 24.0 5
total cost= 264.0

x[112]:6,22->4,28= 4.0 6
x[112]:6,23->4,29= 13.0 6
total cost= 102.0

x[113]:3,20->5,25= 21.0 5
total cost= 105.0

x[114]:3,16->4,22= 21.0 6
total cost= 126.0

x[115]:2,27->6,2= 28.0 5
total cost= 140.0

x[116]:0,5->1,11= 11.0 6
x[116]:0,13->1,19= 19.0 6
total cost= 180.0

x[117]:2,17->5,25= 28.0 8
total cost= 224.0

x[118]:3,13->5,18= 21.0 5
x[118]:5,24->0,29= 21.0 5
total cost= 210.0

x[119]:2,12->0,17= 6.0 5
x[119]:2,16->0,21= 19.0 5
x[119]:2,25->0,0= 4.0 5
total cost= 145.0

x[120]:3,3->2,11= 16.0 8
x[120]:3,11->2,19= 10.0 8
total cost= 208.0

x[121]:2,22->4,29= 24.0 7
total cost= 168.0

x[122]:4,15->1,21= 21.0 6
total cost= 126.0

x[123]:4,22->5,28= 26.0 6
total cost= 156.0

x[124]:6,23->4,29= 24.0 6
total cost= 144.0

x[125]:3,11->4,17= 20.0 6
x[125]:5,25->3,0= 20.0 5
total cost= 220.0

x[126]:0,17->5,25= 24.0 8
total cost= 192.0

x[127]:0,13->1,19= 15.0 6
x[127]:0,12->4,18= 9.0 6
x[127]:0,9->5,17= 5.0 8
x[127]:1,24->3,0= 15.0 6
x[127]:4,29->3,6= 9.0 7
x[127]:5,25->3,0= 5.0 5
total cost= 362.0

x[128]:2,8->0,13= 16.0 5
x[128]:6,3->2,8= 16.0 5
total cost= 160.0

x[129]:3,28->4,4= 23.0 6
total cost= 138.0

x[130]:2,28->6,3= 29.0 5
total cost= 145.0

x[131]:5,2->1,10= 8.0 8
x[131]:5,27->1,5= 19.0 8
total cost= 216.0

x[132]:4,24->5,0= 23.0 6
total cost= 138.0

x[133]:2,16->0,21= 20.0 5
x[133]:6,10->2,15= 20.0 5
total cost= 200.0

x[134]:0,13->1,19= 21.0 6
x[134]:1,19->2,25= 21.0 6
total cost= 252.0

x[135]:1,2->2,8= 26.0 6
x[135]:4,17->1,23= 26.0 6
total cost= 312.0

x[136]:1,6->0,13= 27.0 7
total cost= 189.0

x[137]:1,6->2,12= 30.0 6
total cost= 180.0

x[138]:2,25->0,0= 25.0 5
x[138]:6,12->2,17= 25.0 5
total cost= 250.0

x[139]:5,5->6,10= 23.0 5
total cost= 115.0

x[140]:2,12->0,17= 19.0 5
x[140]:6,23->2,28= 19.0 5
total cost= 190.0

x[141]:1,6->0,13= 16.0 7
total cost= 112.0

x[142]:2,15->3,20= 27.0 5
total cost= 135.0

x[143]:2,16->0,21= 20.0 5
x[143]:6,10->2,15= 20.0 5
total cost= 200.0

x[144]:3,6->1,12= 19.0 6
total cost= 114.0

x[145]:6,2->3,9= 30.0 7
total cost= 210.0

x[146]:6,29->4,5= 26.0 6
total cost= 156.0

x[147]:5,27->1,5= 28.0 8
total cost= 224.0

x[148]:4,5->1,11= 5.0 6
x[148]:4,15->1,21= 21.0 6
total cost= 156.0

x[149]:0,17->5,25= 30.0 8
total cost= 240.0

x[150]:1,7->2,13= 21.0 6
total cost= 126.0

x[151]:3,1->1,7= 23.0 6
total cost= 138.0

x[152]:1,10->2,16= 1.0 6
x[152]:1,11->3,17= 28.0 6
x[152]:2,22->4,29= 1.0 7
x[152]:3,18->4,24= 28.0 6
total cost= 349.0

x[153]:2,11->3,16= 15.0 5
x[153]:2,15->3,20= 7.0 5
total cost= 110.0

x[154]:3,13->5,18= 27.0 5
total cost= 135.0

x[155]:5,2->1,10= 19.0 8
total cost= 152.0

x[156]:5,10->0,15= 25.0 5
total cost= 125.0

x[157]:6,24->1,0= 19.0 6
total cost= 114.0

x[158]:6,2->3,9= 28.0 7
total cost= 196.0

x[159]:4,0->5,6= 26.0 6
x[159]:5,18->6,23= 26.0 5
total cost= 286.0

x[160]:0,26->1,2= 24.0 6
total cost= 144.0

x[161]:6,23->4,29= 13.0 6
x[161]:6,29->4,5= 3.0 6
total cost= 96.0

x[162]:3,0->5,5= 15.0 5
total cost= 75.0

x[163]:4,7->5,13= 24.0 6
total cost= 144.0

x[164]:5,18->2,24= 24.0 6
total cost= 144.0

x[165]:6,22->3,29= 28.0 7
total cost= 196.0

x[166]:3,9->4,15= 25.0 6
total cost= 150.0

x[167]:6,12->2,17= 19.0 5
total cost= 95.0

x[168]:3,0->5,5= 17.0 5
x[168]:5,5->6,10= 17.0 5
total cost= 170.0

x[169]:1,6->3,12= 6.0 6
x[169]:1,11->3,17= 24.0 6
x[169]:3,18->4,24= 30.0 6
total cost= 360.0

x[170]:0,16->1,22= 1.0 6
x[170]:0,17->5,25= 26.0 8
x[170]:1,24->3,0= 1.0 6
x[170]:5,25->3,0= 26.0 5
total cost= 350.0

x[171]:4,18->5,24= 29.0 6
x[171]:5,25->6,0= 29.0 5
total cost= 319.0

x[172]:4,21->5,27= 23.0 6
total cost= 138.0

x[173]:6,0->1,6= 25.0 6
total cost= 150.0

x[174]:1,6->0,13= 23.0 7
total cost= 161.0

x[175]:3,13->5,18= 26.0 5
x[175]:5,24->0,29= 26.0 5
total cost= 260.0

x[176]:1,23->3,29= 27.0 6
x[176]:3,11->4,17= 27.0 6
total cost= 324.0

x[177]:5,25->3,0= 25.0 5
total cost= 125.0

x[178]:1,21->5,26= 15.0 5
total cost= 75.0

x[179]:3,29->5,4= 21.0 5
x[179]:5,5->6,10= 21.0 5
total cost= 210.0

x[180]:1,23->3,29= 28.0 6
x[180]:3,29->4,5= 28.0 6
total cost= 336.0

x[181]:0,16->1,22= 19.0 6
x[181]:1,23->3,29= 19.0 6
total cost= 228.0

x[182]:0,17->5,25= 15.0 8
total cost= 120.0

x[183]:1,13->5,18= 3.0 5
x[183]:2,6->1,13= 3.0 7
x[183]:2,10->5,18= 25.0 8
total cost= 236.0

x[184]:0,21->6,29= 23.0 8
total cost= 184.0

x[185]:3,16->4,22= 27.0 6
x[185]:3,29->4,5= 2.0 6
total cost= 174.0

x[186]:2,27->6,2= 17.0 5
total cost= 85.0

x[187]:1,13->5,18= 22.0 5
x[187]:5,5->6,10= 22.0 5
total cost= 220.0

x[188]:1,11->5,16= 17.0 5
x[188]:5,18->6,23= 17.0 5
total cost= 170.0

x[189]:0,12->4,18= 15.0 6
x[189]:0,17->5,25= 12.0 8
x[189]:4,24->3,1= 15.0 7
x[189]:5,25->3,0= 12.0 5
total cost= 351.0

x[190]:1,11->5,16= 28.0 5
x[190]:6,0->1,6= 28.0 6
total cost= 308.0

x[191]:1,6->2,12= 5.0 6
x[191]:1,7->2,13= 20.0 6
total cost= 150.0

x[192]:2,28->6,3= 28.0 5
total cost= 140.0

x[193]:6,22->3,29= 15.0 7
total cost= 105.0

x[194]:0,0->1,6= 19.0 6
x[194]:1,6->3,12= 19.0 6
total cost= 228.0

x[195]:3,29->5,4= 30.0 5
x[195]:5,18->6,23= 30.0 5
total cost= 300.0

x[196]:2,6->1,13= 15.0 7
total cost= 105.0

x[197]:5,25->6,0= 26.0 5
total cost= 130.0

x[198]:1,24->3,0= 19.0 6
x[198]:3,9->4,15= 19.0 6
total cost= 228.0

x[199]:2,6->1,13= 17.0 7
total cost= 119.0

x[200]:3,11->4,17= 13.0 6
x[200]:3,12->4,18= 2.0 6
total cost= 90.0

x[201]:0,12->4,18= 28.0 6
total cost= 168.0

x[202]:5,18->6,23= 20.0 5
x[202]:6,29->4,5= 20.0 6
total cost= 220.0

x[203]:4,5->1,11= 23.0 6
total cost= 138.0

x[204]:0,13->1,19= 3.0 6
x[204]:0,16->1,22= 23.0 6
x[204]:1,0->2,6= 26.0 6
total cost= 312.0

x[205]:3,13->5,18= 16.0 5
total cost= 80.0

x[206]:5,27->1,5= 22.0 8
total cost= 176.0

x[207]:3,20->5,25= 29.0 5
x[207]:5,10->0,15= 29.0 5
total cost= 290.0

x[208]:0,18->4,24= 4.0 6
x[208]:3,11->4,17= 12.0 6
x[208]:5,4->0,9= 4.0 5
x[208]:5,5->3,10= 12.0 5
total cost= 176.0

x[209]:3,3->2,11= 28.0 8
total cost= 224.0

x[210]:2,15->3,20= 18.0 5
total cost= 90.0

x[211]:5,2->1,10= 28.0 8
total cost= 224.0

x[212]:0,15->4,21= 29.0 6
total cost= 174.0

x[213]:1,10->2,16= 16.0 6
total cost= 96.0

x[214]:3,1->1,7= 20.0 6
total cost= 120.0

x[215]:4,24->3,1= 17.0 7
total cost= 119.0

x[216]:2,10->5,18= 19.0 8
x[216]:2,17->5,25= 10.0 8
total cost= 232.0

x[217]:1,10->2,16= 27.0 6
total cost= 162.0

x[218]:5,4->2,10= 29.0 6
total cost= 174.0

x[219]:6,3->2,8= 8.0 5
x[219]:6,17->2,22= 14.0 5
total cost= 110.0

x[220]:2,8->3,13= 27.0 5
total cost= 135.0

x[221]:3,18->4,24= 22.0 6
total cost= 132.0

x[222]:3,29->5,4= 19.0 5
total cost= 95.0

x[223]:4,24->5,0= 26.0 6
total cost= 156.0

x[224]:1,0->2,6= 23.0 6
total cost= 138.0

x[225]:2,12->0,17= 21.0 5
x[225]:6,3->2,8= 21.0 5
total cost= 210.0

x[226]:5,18->6,23= 29.0 5
total cost= 145.0

x[227]:6,23->2,28= 28.0 5
total cost= 140.0

x[228]:1,10->2,16= 16.0 6
x[228]:1,12->2,18= 1.0 6
total cost= 102.0

x[229]:1,24->3,0= 20.0 6
total cost= 120.0

x[230]:5,2->1,10= 15.0 8
total cost= 120.0

x[231]:2,11->3,16= 25.0 5
total cost= 125.0

x[232]:1,11->5,16= 20.0 5
total cost= 100.0

x[233]:1,5->0,12= 21.0 7
total cost= 147.0

x[234]:3,12->4,18= 29.0 6
x[234]:5,28->3,3= 29.0 5
total cost= 319.0

x[235]:5,5->3,10= 22.0 5
total cost= 110.0

x[236]:3,0->1,6= 17.0 6
total cost= 102.0

x[237]:2,12->0,17= 18.0 5
x[237]:2,13->0,18= 6.0 5
x[237]:6,23->2,28= 24.0 5
total cost= 240.0

x[238]:0,26->1,2= 30.0 6
total cost= 180.0

x[239]:2,17->5,25= 15.0 8
total cost= 120.0

x[240]:1,0->0,7= 7.0 7
x[240]:1,19->0,26= 21.0 7
total cost= 196.0

x[241]:1,13->5,18= 26.0 5
x[241]:6,0->1,6= 18.0 6
x[241]:6,24->1,0= 8.0 6
total cost= 286.0

x[242]:4,5->5,11= 25.0 6
x[242]:5,18->6,23= 25.0 5
total cost= 275.0

x[243]:2,17->5,25= 24.0 8
total cost= 192.0

x[244]:0,12->4,18= 20.0 6
total cost= 120.0

x[245]:1,21->2,27= 17.0 6
x[245]:4,15->1,21= 17.0 6
total cost= 204.0

x[246]:6,1->4,7= 16.0 6
x[246]:6,29->4,5= 11.0 6
total cost= 162.0

x[247]:5,28->3,3= 27.0 5
total cost= 135.0

x[248]:3,12->4,18= 26.0 6
total cost= 156.0

x[249]:5,2->1,10= 30.0 8
total cost= 240.0

x[250]:5,18->6,23= 20.0 5
total cost= 100.0

x[251]:1,5->5,10= 20.0 5
x[251]:5,13->6,18= 20.0 5
total cost= 200.0

x[252]:2,6->1,13= 17.0 7
total cost= 119.0

x[253]:3,0->5,5= 16.0 5
x[253]:5,13->6,18= 16.0 5
total cost= 160.0

x[254]:2,28->6,3= 27.0 5
total cost= 135.0

x[255]:0,29->1,5= 23.0 6
x[255]:1,6->2,12= 23.0 6
total cost= 276.0

x[256]:3,1->1,7= 17.0 6
total cost= 102.0

x[257]:2,5->4,12= 20.0 7
total cost= 140.0

x[258]:0,29->1,5= 23.0 6
x[258]:1,6->2,12= 23.0 6
total cost= 276.0

x[259]:4,7->5,13= 24.0 6
x[259]:5,18->6,23= 24.0 5
total cost= 264.0

x[260]:4,24->3,1= 28.0 7
total cost= 196.0

x[261]:2,12->0,17= 28.0 5
total cost= 140.0

x[262]:2,8->3,13= 25.0 5
total cost= 125.0

x[263]:4,21->5,27= 12.0 6
x[263]:4,22->5,28= 2.0 6
x[263]:4,24->5,0= 9.0 6
total cost= 138.0

x[264]:6,0->1,6= 22.0 6
total cost= 132.0

x[265]:3,9->4,15= 5.0 6
x[265]:3,12->4,18= 13.0 6
x[265]:3,28->4,4= 7.0 6
total cost= 150.0

x[266]:5,16->0,21= 20.0 5
total cost= 100.0

x[267]:2,8->3,13= 20.0 5
total cost= 100.0

x[268]:2,13->0,18= 22.0 5
x[268]:6,3->2,8= 22.0 5
total cost= 220.0

x[269]:3,29->5,4= 17.0 5
x[269]:5,11->0,16= 17.0 5
total cost= 170.0

x[270]:2,25->0,0= 18.0 5
x[270]:6,12->2,17= 7.0 5
x[270]:6,17->2,22= 11.0 5
total cost= 180.0

x[271]:0,17->5,25= 20.0 8
total cost= 160.0

x[272]:2,27->6,2= 15.0 5
total cost= 75.0

x[273]:0,21->6,29= 21.0 8
total cost= 168.0

x[274]:5,16->0,21= 18.0 5
total cost= 90.0

x[275]:1,13->5,18= 8.0 5
x[275]:1,21->5,26= 19.0 5
total cost= 135.0

x[276]:1,6->0,13= 28.0 7
total cost= 196.0

x[277]:2,16->0,21= 23.0 5
x[277]:6,10->2,15= 23.0 5
total cost= 230.0

x[278]:2,15->3,20= 20.0 5
total cost= 100.0

x[279]:0,13->1,19= 1.0 6
x[279]:0,23->1,29= 26.0 6
total cost= 162.0

x[280]:0,0->1,6= 16.0 6
x[280]:1,7->2,13= 16.0 6
total cost= 192.0

x[281]:2,15->3,20= 28.0 5
total cost= 140.0

x[282]:2,22->1,29= 25.0 7
total cost= 175.0

x[283]:2,28->6,3= 17.0 5
total cost= 85.0

x[284]:1,5->5,10= 24.0 5
total cost= 120.0

x[285]:1,11->5,16= 21.0 5
total cost= 105.0

x[286]:0,21->6,29= 18.0 8
total cost= 144.0

x[287]:0,15->4,21= 19.0 6
total cost= 114.0

x[288]:2,18->6,23= 16.0 5
total cost= 80.0

x[289]:2,10->5,18= 15.0 8
total cost= 120.0

x[290]:1,21->2,27= 29.0 6
x[290]:4,5->1,11= 29.0 6
total cost= 348.0

x[291]:5,16->0,21= 17.0 5
total cost= 85.0

x[292]:2,8->3,13= 19.0 5
total cost= 95.0

x[293]:4,22->5,28= 18.0 6
total cost= 108.0

x[294]:6,23->4,29= 18.0 6
total cost= 108.0

x[295]:2,5->4,12= 26.0 7
total cost= 182.0

x[296]:3,20->5,25= 18.0 5
x[296]:5,25->6,0= 18.0 5
total cost= 180.0

x[297]:2,8->3,13= 21.0 5
total cost= 105.0

x[298]:0,5->1,11= 19.0 6
x[298]:0,26->1,2= 9.0 6
total cost= 168.0

x[299]:5,17->6,22= 29.0 5
total cost= 145.0

x[300]:4,18->1,24= 22.0 6
total cost= 132.0

x[301]:2,8->3,13= 26.0 5
total cost= 130.0

x[302]:5,11->0,16= 20.0 5
total cost= 100.0

x[303]:5,25->6,0= 30.0 5
total cost= 150.0

x[304]:3,29->4,5= 25.0 6
total cost= 150.0

x[305]:0,21->1,27= 18.0 6
total cost= 108.0

x[306]:1,23->3,29= 23.0 6
x[306]:3,29->4,5= 23.0 6
total cost= 276.0

x[307]:3,13->5,18= 27.0 5
x[307]:5,0->0,5= 27.0 5
total cost= 270.0

x[308]:6,0->1,6= 20.0 6
total cost= 120.0

x[309]:3,9->4,15= 30.0 6
x[309]:5,28->3,3= 30.0 5
total cost= 330.0

x[310]:2,18->6,23= 19.0 5
total cost= 95.0

x[311]:2,24->3,29= 24.0 5
total cost= 120.0

x[312]:4,18->5,24= 19.0 6
x[312]:5,24->0,29= 19.0 5
total cost= 209.0

x[313]:4,18->5,24= 15.0 6
x[313]:5,25->6,0= 15.0 5
total cost= 165.0

x[314]:6,12->2,17= 21.0 5
total cost= 105.0

x[315]:0,18->4,24= 29.0 6
total cost= 174.0

x[316]:3,9->4,15= 21.0 6
x[316]:5,25->3,0= 21.0 5
total cost= 231.0

x[317]:1,19->0,26= 29.0 7
total cost= 203.0

x[318]:2,6->1,13= 30.0 7
total cost= 210.0

x[319]:2,28->6,3= 21.0 5
total cost= 105.0

x[320]:3,29->5,4= 19.0 5
x[320]:6,22->3,29= 19.0 7
total cost= 228.0

x[321]:5,4->2,10= 24.0 6
total cost= 144.0

x[322]:2,11->3,16= 28.0 5
total cost= 140.0

x[323]:5,13->1,21= 20.0 8
total cost= 160.0

x[324]:2,12->0,17= 18.0 5
x[324]:6,3->2,8= 18.0 5
total cost= 180.0

x[325]:1,7->2,13= 25.0 6
total cost= 150.0

x[326]:0,17->5,25= 21.0 8
total cost= 168.0

x[327]:0,9->5,17= 3.0 8
x[327]:0,21->6,29= 15.0 8
x[327]:5,25->6,0= 3.0 5
total cost= 159.0

x[328]:6,23->2,28= 21.0 5
total cost= 105.0

x[329]:0,13->1,19= 26.0 6
x[329]:1,21->2,27= 22.0 6
x[329]:1,29->2,5= 4.0 6
total cost= 312.0

x[330]:3,6->1,12= 19.0 6
total cost= 114.0

x[331]:0,5->1,11= 27.0 6
x[331]:1,11->3,17= 27.0 6
total cost= 324.0

x[332]:0,12->4,18= 1.0 6
x[332]:0,15->4,21= 29.0 6
total cost= 180.0

x[333]:3,29->5,4= 21.0 5
total cost= 105.0

x[334]:2,8->0,13= 17.0 5
x[334]:2,12->0,17= 12.0 5
x[334]:6,3->2,8= 29.0 5
total cost= 290.0

x[335]:3,11->2,19= 19.0 8
total cost= 152.0

x[336]:0,15->4,21= 6.0 6
x[336]:1,5->0,12= 6.0 7
x[336]:1,6->3,12= 24.0 6
x[336]:3,12->4,18= 24.0 6
total cost= 366.0

x[337]:3,12->4,18= 18.0 6
total cost= 108.0

x[338]:5,18->2,24= 24.0 6
total cost= 144.0

x[339]:5,5->3,10= 17.0 5
total cost= 85.0

x[340]:4,7->5,13= 24.0 6
total cost= 144.0

x[341]:5,18->6,23= 17.0 5
total cost= 85.0

x[342]:4,24->3,1= 21.0 7
total cost= 147.0

x[343]:2,24->3,29= 28.0 5
total cost= 140.0

x[344]:1,5->0,12= 27.0 7
total cost= 189.0

x[345]:5,16->0,21= 21.0 5
total cost= 105.0

x[346]:1,11->3,17= 21.0 6
total cost= 126.0

x[347]:5,27->1,5= 21.0 8
total cost= 168.0

x[348]:0,9->5,17= 23.0 8
total cost= 184.0

x[349]:4,7->5,13= 28.0 6
total cost= 168.0

x[350]:1,21->2,27= 30.0 6
x[350]:4,15->1,21= 30.0 6
total cost= 360.0

x[351]:6,23->2,28= 27.0 5
total cost= 135.0

x[352]:5,25->6,0= 19.0 5
x[352]:6,1->4,7= 19.0 6
total cost= 209.0

x[353]:2,11->3,16= 17.0 5
total cost= 85.0

x[354]:5,25->3,0= 23.0 5
total cost= 115.0

x[355]:2,13->0,18= 25.0 5
x[355]:6,3->2,8= 25.0 5
total cost= 250.0

x[356]:1,29->2,5= 22.0 6
total cost= 132.0

x[357]:3,6->1,12= 27.0 6
total cost= 162.0

x[358]:2,28->6,3= 25.0 5
total cost= 125.0

x[359]:2,25->0,0= 28.0 5
x[359]:6,12->2,17= 28.0 5
total cost= 280.0

x[360]:0,12->4,18= 19.0 6
total cost= 114.0

x[361]:0,13->1,19= 17.0 6
total cost= 102.0

x[362]:3,29->4,5= 22.0 6
total cost= 132.0

x[363]:1,0->2,6= 22.0 6
x[363]:4,18->1,24= 22.0 6
total cost= 264.0

x[364]:6,29->4,5= 30.0 6
total cost= 180.0

x[365]:2,28->6,3= 27.0 5
total cost= 135.0

x[366]:5,13->6,18= 13.0 5
x[366]:5,17->6,22= 2.0 5
x[366]:6,23->4,29= 15.0 6
total cost= 165.0

x[367]:5,18->6,23= 18.0 5
total cost= 90.0

x[368]:5,25->3,0= 26.0 5
total cost= 130.0

x[369]:3,29->5,4= 21.0 5
total cost= 105.0

x[370]:2,18->6,23= 19.0 5
total cost= 95.0

x[371]:4,24->3,1= 19.0 7
total cost= 133.0

x[372]:2,12->0,17= 16.0 5
total cost= 80.0

x[373]:2,6->1,13= 18.0 7
total cost= 126.0

x[374]:6,22->3,29= 25.0 7
total cost= 175.0

x[375]:4,24->5,0= 28.0 6
total cost= 168.0

x[376]:0,13->1,19= 27.0 6
x[376]:1,23->3,29= 3.0 6
x[376]:1,24->3,0= 24.0 6
total cost= 324.0

x[377]:5,5->3,10= 24.0 5
total cost= 120.0

x[378]:0,13->1,19= 24.0 6
x[378]:1,2->2,8= 24.0 6
total cost= 288.0

x[379]:2,13->0,18= 23.0 5
total cost= 115.0

x[380]:6,23->4,29= 17.0 6
total cost= 102.0

x[381]:1,6->3,12= 23.0 6
x[381]:3,12->4,18= 3.0 6
x[381]:3,18->4,24= 20.0 6
total cost= 276.0

x[382]:2,27->6,2= 30.0 5
total cost= 150.0

x[383]:3,12->4,18= 10.0 6
x[383]:5,25->3,0= 10.0 5
x[383]:5,26->6,1= 15.0 5
x[383]:6,1->4,7= 15.0 6
total cost= 275.0

x[384]:6,22->4,28= 30.0 6
total cost= 180.0

x[385]:3,3->2,11= 5.0 8
x[385]:3,29->5,4= 15.0 5
x[385]:5,4->2,10= 15.0 6
total cost= 205.0

x[386]:2,13->0,18= 24.0 5
total cost= 120.0

x[387]:0,5->1,11= 24.0 6
x[387]:1,19->2,25= 24.0 6
total cost= 288.0

x[388]:0,17->5,25= 16.0 8
total cost= 128.0

x[389]:3,29->5,4= 16.0 5
x[389]:5,18->6,23= 16.0 5
total cost= 160.0

x[390]:3,13->5,18= 20.0 5
x[390]:5,5->6,10= 13.0 5
x[390]:5,25->6,0= 7.0 5
total cost= 200.0

x[391]:4,17->1,23= 28.0 6
total cost= 168.0

x[392]:2,8->0,13= 27.0 5
x[392]:6,23->2,28= 27.0 5
total cost= 270.0

x[393]:3,3->2,11= 26.0 8
total cost= 208.0

x[394]:0,7->6,15= 26.0 8
total cost= 208.0

x[395]:3,3->2,11= 25.0 8
total cost= 200.0

x[396]:1,24->3,0= 28.0 6
total cost= 168.0

x[397]:6,0->1,6= 24.0 6
total cost= 144.0

x[398]:0,7->6,15= 4.0 8
x[398]:0,21->6,29= 23.0 8
total cost= 216.0

x[399]:2,8->0,13= 24.0 5
x[399]:6,23->2,28= 24.0 5
total cost= 240.0

Total time= 8618938

Sovle for test7_5_15_50_400B.txt
Colmun limit=1000
number of service arcs=750
number of holding arcs=250

root node bound= 57174.53333333333
Before intensification, we have 5322 columns
After pick up:
==================Intensification===================
We add 500 columns to cplex.
Tried aggregator 2 times.
MIP Presolve eliminated 16987 rows and 7541 columns.
Aggregator did 2893 substitutions.
Reduced MIP has 81385 rows, 295269 columns, and 812969 nonzeros.
Reduced MIP has 0 binaries, 500 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.49 sec. (353.81 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1818 rows and 6703 columns.
Reduced MIP has 79567 rows, 288566 columns, and 794614 nonzeros.
Reduced MIP has 0 binaries, 500 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.80 sec. (339.99 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 130.71 sec. (48255.97 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                       169996.0000   -16638.0000           109.79%
*     0+    0                       109756.0000   -16638.0000           115.16%
*     0+    0                        88304.0000   -16638.0000           118.84%
*     0+    0                        73314.0000   -16638.0000           122.69%
*     0+    0                        72410.0000   -16638.0000           122.98%
*     0+    0                        71674.0000   -16638.0000           123.21%
*     0+    0                        70030.0000   -16638.0000           123.76%
*     0+    0                        69814.0000   -16638.0000           123.83%
      0     0    57174.5333   106    69814.0000    57174.5333       53   18.10%
      0     0    57174.5333    97    69814.0000 MIRcuts: 2101    14657   18.10%
      0     0    57174.5333    93    69814.0000    Cuts: 2309    34492   18.10%
      0     0    57174.5333    86    69814.0000 MIRcuts: 2348    56440   18.10%
      0     0    57174.5333    92    69814.0000 MIRcuts: 2536    78954   18.10%
      0     0    57174.5333    96    69814.0000 MIRcuts: 2348   101317   18.10%
Heuristic still looking.
Heuristic still looking.
      0     2    57174.5333    96    69814.0000    57174.5333   101317   18.10%
Elapsed time = 1639.97 sec. (727084.50 ticks, tree = 0.00 MB, solutions = 8)
      1     3    57174.5333    91    69814.0000    57174.5333   131116   18.10%
      2     4    57174.5333   102    69814.0000    57174.5333   132461   18.10%
      3     5    57174.5333    81    69814.0000    57174.5333   155005   18.10%
      5     7    57174.5333    82    69814.0000    57174.5333   189744   18.10%
      6     8    57174.5333    73    69814.0000    57174.5333   206642   18.10%
      7     9    57174.5333    62    69814.0000    57174.5333   216451   18.10%
      8    10    57174.5333    53    69814.0000    57174.5333   247660   18.10%
      9    11    57174.5333    58    69814.0000    57174.5333   276455   18.10%
     10    12    57174.5333    48    69814.0000    57174.5333   315205   18.10%
     16    18    57178.4800    41    69814.0000    57174.5333   427401   18.10%
Elapsed time = 3237.85 sec. (1426238.55 ticks, tree = 0.00 MB, solutions = 8)
     17    19    57446.6753    31    69814.0000    57174.5333   749108   18.10%
     21    23    57174.5333    55    69814.0000    57174.5333  1657950   18.10%
     23    25    57174.5333    59    69814.0000    57174.5333  1924051   18.10%
     24    26    57178.4800    36    69814.0000    57174.5333  1951146   18.10%
     27    29    57174.5333    28    69814.0000    57174.5333  2029686   18.10%
     31    33    57174.5333    36    69814.0000    57174.5333  2063459   18.10%
     32    34    57178.4800    26    69814.0000    57174.5333  2101060   18.10%
     35    37    57260.9333    19    69814.0000    57174.5333  2144245   18.10%
     36    38    57178.4800    24    69814.0000    57174.5333  2151666   18.10%
     38    40    57177.6923    30    69814.0000    57174.5333  2282934   18.10%
Elapsed time = 5376.29 sec. (1848583.65 ticks, tree = 0.00 MB, solutions = 8)
     42    44    57517.0400    32    69814.0000    57174.5333  2307589   18.10%
     50    52    57214.3518    17    69814.0000    57174.5333  2438128   18.10%
     64    66    57174.5333    39    69814.0000    57174.5333  2498309   18.10%
     65    67    57178.4800    18    69814.0000    57174.5333  2503266   18.10%
     68    70    57174.5333    36    69814.0000    57174.5333  2528597   18.10%
     69    71    57178.4800    16    69814.0000    57174.5333  2548503   18.10%
     72    74    57174.5333    49    69814.0000    57174.5333  2600096   18.10%
*    73+   73                        62000.0000    57174.5333             7.78%
     73    75    57178.4800    15    62000.0000    57174.5333  2612667    7.78%
     74    76    57230.0000    28    62000.0000    57174.5333  2656183    7.78%
     76    78    57174.5333    42    62000.0000    57174.5333  2685364    7.78%
Elapsed time = 6761.28 sec. (2168943.68 ticks, tree = 0.00 MB, solutions = 8)
     77    79    57194.9723    22    62000.0000    57174.5333  2698775    7.78%
     78    80    57240.2800    20    62000.0000    57174.5333  2719259    7.78%
     81    83    57213.4000    16    62000.0000    57174.5333  2761306    7.78%
     82    84    57177.6923    21    62000.0000    57174.5333  2777555    7.78%
     84    86    57174.5333    35    62000.0000    57174.5333  2793966    7.78%
     85    87    57174.5333    34    62000.0000    57174.5333  2801099    7.78%

Mixed integer rounding cuts applied:  1514

Root node processing (before b&c):
  Real time             = 1639.75 sec. (727021.08 ticks)
Parallel b&c, 4 threads:
  Real time             = 5560.41 sec. (1548592.06 ticks)
  Sync time (average)   =  970.42 sec.
  Wait time (average)   =  970.51 sec.
                          ------------
Total (root+branch&cut) = 7200.15 sec. (2275613.14 ticks)
We use intensification finding a better solution: 62000.0
================ Solution ================
BAP terminated with objective : 62000
Total Number of iterations: 50
Total Number of processed nodes: 4
Total Time spent on master problems: 5351560 Total time spent on pricing problems: 6978
Best bound : 57174.53333333333
[0, 1, 4, 8, 14, 23, 34, 37, 40, 41, 51, 54, 57, 59, 60, 62, 67, 68, 69, 70, 73, 76, 77, 80, 81, 83, 84, 89, 90, 93, 94, 95, 99, 108, 120, 125, 137, 153, 154, 179, 190, 208, 210, 217, 222, 236, 246, 248, 253, 261, 264, 269, 277, 287, 305, 312, 313, 322, 326, 329, 331, 341, 351, 354, 357, 364, 370, 372, 375, 376, 378, 382, 383, 389, 390, 396, 399, 401, 403, 404, 408, 411, 413, 417, 419, 422, 425, 437, 439, 443, 444, 449, 461, 480, 490, 499, 515, 525, 528, 538, 545, 550, 553, 555, 556, 558, 559, 562, 564, 567, 571, 572, 574, 576, 581, 582, 585, 586, 591, 593, 598, 599, 604, 607, 608, 612, 613, 614, 616, 617, 622, 623, 630, 631, 636, 638, 639, 640, 644, 647, 649, 653, 654, 660, 662, 664, 665, 668, 669, 671, 679, 680, 683, 686, 694, 696, 703, 709, 714, 717, 720, 723, 725, 727, 728, 734, 735, 741, 744, 746, 748, 749]
The number of service edges used= 172

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false edgeIndexset: [608, 994, 995, 419, 963, 996, 997, 679, 938, 714, 907, 748, 623, 978, 83, 403, 639] start node= 4 start time= 48 capacity type= 1 ifChargeSet: [963, 907]
(2,3)->(3,7)->charge(3,8)->(4,13)->charge(4,14)->(2,19)->(3,23)->(4,28)->(4,29)->(0,33)->(3,38)->(3,39)->(4,44)->(4,45)->(4,46)->(4,47)->(4,48)->(2,3):1.0
Fix cost= 150 variable cost= 188

artificial: false edgeIndexset: [80, 515, 70, 758, 759, 585, 649, 60, 525, 654, 94, 190] start node= 1 start time= 40 capacity type= 2 ifChargeSet: [758, 759]
(4,4)->(0,8)->charge(0,9)->charge(0,10)->(3,15)->(0,20)->(3,25)->(0,30)->(3,35)->(1,40)->(0,44)->(3,49)->(4,4):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [528, 912, 83, 772, 613, 598, 73, 57, 153, 538, 668, 93] start node= 1 start time= 3 capacity type= 2 ifChargeSet: [912, 772]
(1,3)->(0,7)->(3,12)->charge(3,13)->(4,18)->(0,22)->charge(0,23)->(3,28)->(0,33)->(3,38)->(0,43)->(3,48)->(1,3):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [963, 68, 389, 599, 664, 329, 154, 923, 108, 94, 734, 574] start node= 1 start time= 4 capacity type= 2 ifChargeSet: [963, 923]
(1,4)->(0,8)->(4,13)->charge(4,14)->(0,18)->(3,23)->charge(3,24)->(1,29)->(4,34)->(2,39)->(0,44)->(3,49)->(1,4):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [992, 993, 322, 4, 357, 567, 727, 744, 137, 62, 382, 399] start node= 1 start time= 22 capacity type= 2 ifChargeSet: [992, 993]
(0,4)->(2,7)->(0,12)->(3,17)->(1,22)->(4,27)->(2,32)->(0,37)->(4,42)->charge(4,43)->charge(4,44)->(2,49)->(0,4):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [1, 968, 586, 558, 750, 81, 404, 341, 23, 376, 696, 313, 669] start node= 1 start time= 41 capacity type= 2 ifChargeSet: [968, 750]
(0,0)->charge(0,1)->(2,4)->(3,8)->(1,13)->(4,18)->charge(4,19)->(0,23)->(2,26)->(0,31)->(3,36)->(1,41)->(4,46)->(0,0):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [993, 99, 83, 179, 69, 709, 694, 364, 604, 574, 798, 638] start node= 1 start time= 29 capacity type= 2 ifChargeSet: [993, 798]
(3,4)->(4,9)->(2,14)->(0,19)->(3,24)->(1,29)->(0,33)->(3,38)->(4,43)->charge(4,44)->(0,48)->charge(0,49)->(3,4):2.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [417, 37, 550, 390, 326, 683, 14, 305, 660, 981, 982, 571, 95] start node= 1 start time= 5 capacity type= 2 ifChargeSet: [981, 982]
(3,0)->(1,5)->(4,10)->(0,14)->(2,17)->(3,21)->(1,26)->(4,31)->charge(4,32)->charge(4,33)->(0,37)->(2,40)->(0,45)->(3,0):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [720, 81, 51, 741, 261, 614, 375, 969, 556, 396, 636, 780] start node= 1 start time= 11 capacity type= 2 ifChargeSet: [969, 780]
(0,1)->(3,6)->(1,11)->(3,14)->(4,19)->charge(4,20)->(2,25)->(0,30)->charge(0,31)->(3,36)->(4,41)->(2,46)->(0,1):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [640, 995, 372, 612, 756, 582, 57, 746, 77, 717, 351, 287] start node= 1 start time= 37 capacity type= 2 ifChargeSet: [995, 756]
(2,1)->(0,6)->charge(0,7)->(3,12)->(4,17)->(2,22)->(0,27)->(3,32)->(1,37)->(3,40)->(4,45)->charge(4,46)->(2,1):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [723, 84, 54, 744, 264, 617, 378, 972, 559, 399, 639, 783] start node= 1 start time= 14 capacity type= 2 ifChargeSet: [972, 783]
(0,4)->(3,9)->(1,14)->(3,17)->(4,22)->charge(4,23)->(2,28)->(0,33)->charge(0,34)->(3,39)->(4,44)->(2,49)->(0,4):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [977, 354, 564, 644, 788, 728, 89, 59, 749, 269, 622, 383] start node= 1 start time= 19 capacity type= 2 ifChargeSet: [977, 788]
(2,4)->(0,9)->(3,14)->(1,19)->(3,22)->(4,27)->charge(4,28)->(2,33)->(0,38)->charge(0,39)->(3,44)->(4,49)->(2,4):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [0, 545, 67, 686, 403, 277, 662, 630, 985, 90, 572, 766, 607] start node= 1 start time= 27 capacity type= 2 ifChargeSet: [985, 766]
(0,0)->(2,3)->(3,7)->(4,12)->(0,16)->charge(0,17)->(3,22)->(1,27)->(3,30)->(4,35)->charge(4,36)->(0,40)->(3,45)->(0,0):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [647, 775, 40, 76, 686, 562, 370, 631, 408, 952, 217, 443, 703] start node= 1 start time= 17 capacity type= 2 ifChargeSet: [775, 952]
(4,2)->charge(4,3)->(2,8)->(3,12)->(1,17)->(2,20)->(0,25)->charge(0,26)->(3,31)->(4,36)->(0,40)->(2,43)->(3,47)->(4,2):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [576, 422, 41, 331, 811, 556, 717, 686, 598, 790, 312, 444, 253] start node= 1 start time= 3 capacity type= 2 ifChargeSet: [790, 811]
(1,3)->(3,6)->(1,11)->charge(1,12)->(4,17)->(2,22)->(3,26)->(1,31)->(4,36)->(0,40)->charge(0,41)->(2,44)->(3,48)->(1,3):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [34, 680, 616, 8, 653, 591, 915, 499, 437, 757, 246, 411, 125, 671] start node= 1 start time= 46 capacity type= 2 ifChargeSet: [915, 757]
(4,3)->(0,7)->charge(0,8)->(2,11)->(3,15)->charge(3,16)->(4,21)->(0,25)->(4,30)->(0,34)->(2,37)->(3,41)->(1,46)->(2,49)->(4,3):1.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [929, 930, 581, 425, 555, 236, 401, 593, 210, 439, 567, 248, 413, 222] start node= 1 start time= 10 capacity type= 2 ifChargeSet: [929, 930]
(2,1)->(3,5)->(1,10)->(2,13)->(3,17)->(1,22)->(2,25)->(3,29)->charge(3,30)->charge(3,31)->(1,36)->(2,39)->(3,43)->(1,48)->(2,1):3.0
Fix cost= 300 variable cost= 212

artificial: false edgeIndexset: [480, 449, 769, 744, 553, 490, 461, 208, 725, 984, 120, 665, 735] start node= 1 start time= 8 capacity type= 2 ifChargeSet: [769, 984]
(3,3)->(1,8)->(2,11)->(4,15)->(0,19)->charge(0,20)->(4,25)->(2,30)->(4,34)->charge(4,35)->(2,40)->(4,44)->(2,49)->(3,3):1.0
Fix cost= 300 variable cost= 212

fix cost+variable cost+commodity cost= 6150+4428+51422.0=62000.0

vehicle dowork= 98100 commodity dowork= 51422.0
no load ratio= 0.4758205912334353

Total vehicles used= 21

vehicleCoverServiceEdge information:
{0=1, 1=1, 515=1, 4=1, 261=1, 264=1, 8=1, 525=1, 269=1, 14=1, 528=1, 277=1, 23=1, 538=1, 287=1, 545=1, 34=1, 37=1, 550=1, 40=1, 41=1, 553=1, 555=3, 556=2, 558=1, 559=1, 305=1, 562=1, 51=1, 564=1, 54=1, 567=4, 312=1, 57=2, 313=1, 571=1, 59=1, 60=1, 572=1, 574=3, 62=1, 576=1, 322=1, 67=1, 68=1, 69=2, 581=3, 70=1, 326=1, 582=1, 585=1, 73=1, 329=1, 586=1, 331=1, 76=1, 77=1, 591=1, 80=1, 81=2, 593=3, 83=4, 84=1, 341=1, 598=2, 599=1, 89=1, 90=1, 604=2, 93=1, 94=2, 95=1, 351=1, 607=1, 608=1, 354=1, 99=2, 612=1, 613=1, 357=1, 614=1, 616=1, 617=1, 108=1, 364=2, 622=1, 623=1, 370=1, 372=1, 630=1, 375=1, 631=1, 376=1, 120=1, 378=1, 636=1, 125=1, 382=1, 638=2, 639=2, 383=1, 640=1, 644=1, 389=1, 390=1, 647=1, 649=1, 137=1, 396=1, 653=1, 654=1, 399=2, 401=3, 403=2, 404=1, 660=1, 662=1, 664=1, 408=1, 153=1, 665=1, 154=1, 411=1, 668=1, 669=1, 413=3, 671=1, 417=1, 419=1, 422=1, 679=1, 680=1, 425=3, 683=1, 686=3, 179=2, 437=1, 694=2, 439=3, 696=1, 443=1, 444=1, 190=1, 703=1, 449=1, 709=2, 714=1, 717=2, 461=1, 720=1, 208=1, 210=3, 723=1, 725=1, 727=1, 728=1, 217=1, 734=1, 222=3, 735=1, 480=1, 741=1, 744=3, 746=1, 490=1, 748=1, 236=3, 749=1, 499=1, 246=1, 248=3, 253=1}

commodityFlowIntoTerminal information:
125 37 0 0 28 0 16 124 117 0 0 0 40 0 53 0 100 0 46 188 63 0 78 29 0 179 0 0 0 0 117 0 0 177 66 0 0 90 23 0 152 0 0 88 156 0 0 0 62 0 
0 0 0 148 51 30 0 0 66 0 286 99 0 17 37 0 0 16 0 0 0 0 318 0 0 0 34 99 0 116 0 100 0 0 0 0 265 68 0 0 97 0 0 0 0 0 88 0 281 0 
0 245 0 98 18 0 0 21 46 0 0 175 0 157 76 0 0 20 0 0 0 0 98 0 0 371 16 0 28 0 62 0 60 18 0 0 0 79 0 237 114 0 0 0 100 0 64 0 0 163 
22 0 0 70 139 263 70 141 15 17 0 0 103 0 105 199 0 384 0 0 0 39 94 0 119 67 98 0 83 279 84 27 18 0 0 50 26 0 149 44 53 100 0 261 38 25 0 51 164 93 
0 0 27 100 58 0 0 0 0 91 28 0 76 0 0 94 0 118 83 25 0 15 0 0 0 100 0 86 0 0 100 19 0 0 129 39 94 0 0 0 0 41 37 64 123 0 0 0 0 22 

vehicle pattern information:
[0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 1, 2]
[0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 0]
[0, 2, 1, 1, 0, 0, 1, 1, 0, 0, 0, 2, 0, 1, 1]
[1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 0, 2]
[2, 1, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2, 0, 2, 0]
[0, 3, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1]
[0, 2, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 2, 0, 2]
[1, 2, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 2, 2, 0]
[1, 1, 0, 0, 1, 0, 0, 1, 2, 0, 0, 1, 2, 1, 1]
[1, 0, 0, 0, 0, 1, 2, 0, 2, 0, 0, 3, 0, 1, 1]
[2, 0, 1, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1, 3, 0]
[0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 3]
x[0]:2,49->3,3= 30.0 4
total cost= 120.0

x[1]:2,40->4,44= 27.0 4
total cost= 108.0

x[2]:3,4->4,9= 25.0 5
total cost= 125.0

x[3]:1,3->0,7= 24.0 4
total cost= 96.0

x[4]:3,22->1,27= 28.0 5
total cost= 140.0

x[5]:2,8->3,12= 7.0 4
x[5]:2,11->3,15= 22.0 4
total cost= 116.0

x[6]:0,23->3,28= 30.0 5
x[6]:3,31->1,36= 30.0 5
total cost= 300.0

x[7]:4,3->0,7= 22.0 4
total cost= 88.0

x[8]:2,25->3,29= 28.0 4
total cost= 112.0

x[9]:1,10->2,13= 18.0 3
total cost= 54.0

x[10]:0,9->3,14= 24.0 5
x[10]:3,31->1,36= 24.0 5
total cost= 240.0

x[11]:2,49->4,3= 29.0 4
total cost= 116.0

x[12]:1,8->2,11= 15.0 3
total cost= 45.0

x[13]:2,44->3,48= 22.0 4
x[13]:3,31->1,36= 22.0 5
total cost= 198.0

x[14]:2,1->3,5= 29.0 4
total cost= 116.0

x[15]:2,25->3,29= 23.0 4
x[15]:3,5->1,10= 23.0 5
x[15]:4,20->2,25= 23.0 5
total cost= 322.0

x[16]:0,17->3,22= 26.0 5
total cost= 130.0

x[17]:1,31->4,36= 30.0 5
total cost= 150.0

x[18]:4,10->0,14= 16.0 4
x[18]:4,12->0,16= 3.0 4
total cost= 76.0

x[19]:2,25->3,29= 27.0 4
total cost= 108.0

x[20]:1,10->2,13= 18.0 3
total cost= 54.0

x[21]:3,22->4,27= 27.0 5
total cost= 135.0

x[22]:1,22->2,25= 19.0 3
total cost= 57.0

x[23]:0,37->2,40= 23.0 3
total cost= 69.0

x[24]:1,31->4,36= 16.0 5
total cost= 80.0

x[25]:4,36->0,40= 27.0 4
total cost= 108.0

x[26]:1,48->2,1= 27.0 3
total cost= 81.0

x[27]:1,36->2,39= 15.0 3
total cost= 45.0

x[28]:4,44->0,48= 20.0 4
total cost= 80.0

x[29]:2,13->3,17= 27.0 4
x[29]:3,17->1,22= 27.0 5
total cost= 243.0

x[30]:0,49->3,4= 23.0 5
x[30]:4,36->0,40= 23.0 4
total cost= 207.0

x[31]:2,37->3,41= 29.0 4
x[31]:3,43->1,48= 29.0 5
total cost= 261.0

x[32]:1,31->4,36= 30.0 5
total cost= 150.0

x[33]:2,44->3,48= 25.0 4
x[33]:4,35->2,40= 25.0 5
total cost= 225.0

x[34]:4,36->0,40= 25.0 4
total cost= 100.0

x[35]:0,41->2,44= 18.0 3
total cost= 54.0

x[36]:2,39->0,44= 22.0 5
total cost= 110.0

x[37]:1,26->4,31= 19.0 5
total cost= 95.0

x[38]:2,39->0,44= 18.0 5
total cost= 90.0

x[39]:3,39->4,44= 23.0 5
total cost= 115.0

x[40]:0,33->3,38= 16.0 5
x[40]:3,43->1,48= 16.0 5
total cost= 160.0

x[41]:1,29->0,33= 18.0 4
total cost= 72.0

x[42]:0,33->3,38= 15.0 5
total cost= 75.0

x[43]:2,37->3,41= 30.0 4
x[43]:4,17->2,22= 30.0 5
total cost= 270.0

x[44]:2,43->3,47= 27.0 4
total cost= 108.0

x[45]:0,12->3,17= 29.0 5
total cost= 145.0

x[46]:3,13->4,18= 20.0 5
total cost= 100.0

x[47]:2,13->3,17= 24.0 4
x[47]:4,3->2,8= 24.0 5
total cost= 216.0

x[48]:2,44->3,48= 18.0 4
x[48]:3,48->1,3= 18.0 5
total cost= 162.0

x[49]:2,39->3,43= 25.0 4
total cost= 100.0

x[50]:1,22->2,25= 24.0 3
total cost= 72.0

x[51]:0,20->4,25= 12.0 5
x[51]:0,25->4,30= 16.0 5
total cost= 140.0

x[52]:0,49->3,4= 15.0 5
x[52]:3,6->1,11= 15.0 5
total cost= 150.0

x[53]:2,11->4,15= 21.0 4
total cost= 84.0

x[54]:3,15->0,20= 21.0 5
total cost= 105.0

x[55]:0,49->3,4= 30.0 5
x[55]:3,17->1,22= 30.0 5
total cost= 300.0

x[56]:2,30->4,34= 22.0 4
total cost= 88.0

x[57]:2,25->3,29= 19.0 4
total cost= 76.0

x[58]:0,43->3,48= 15.0 5
total cost= 75.0

x[59]:1,3->3,6= 25.0 3
total cost= 75.0

x[60]:1,14->3,17= 30.0 3
total cost= 90.0

x[61]:0,34->3,39= 24.0 5
total cost= 120.0

x[62]:0,14->2,17= 20.0 3
total cost= 60.0

x[63]:2,43->3,47= 12.0 4
x[63]:2,44->3,48= 9.0 4
x[63]:3,6->1,11= 21.0 5
x[63]:4,20->2,25= 21.0 5
total cost= 294.0

x[64]:1,13->4,18= 27.0 5
total cost= 135.0

x[65]:2,30->4,34= 27.0 4
total cost= 108.0

x[66]:0,41->2,44= 16.0 3
total cost= 48.0

x[67]:2,8->3,12= 23.0 4
total cost= 92.0

x[68]:1,22->2,25= 19.0 3
x[68]:3,17->1,22= 19.0 5
total cost= 152.0

x[69]:0,33->3,38= 27.0 5
total cost= 135.0

x[70]:2,25->3,29= 26.0 4
x[70]:3,31->1,36= 26.0 5
x[70]:4,9->2,14= 26.0 5
total cost= 364.0

x[71]:2,1->3,5= 29.0 4
total cost= 116.0

x[72]:2,25->3,29= 30.0 4
x[72]:3,17->1,22= 30.0 5
total cost= 270.0

x[73]:2,3->3,7= 16.0 4
total cost= 64.0

x[74]:1,5->4,10= 28.0 5
total cost= 140.0

x[75]:2,49->0,4= 28.0 5
total cost= 140.0

x[76]:4,19->0,23= 29.0 4
total cost= 116.0

x[77]:0,0->2,3= 8.0 3
x[77]:0,41->2,44= 19.0 3
total cost= 81.0

x[78]:4,36->0,40= 22.0 4
total cost= 88.0

x[79]:4,15->0,19= 24.0 4
total cost= 96.0

x[80]:1,36->2,39= 17.0 3
total cost= 51.0

x[81]:1,12->4,17= 29.0 5
total cost= 145.0

x[82]:1,22->2,25= 25.0 3
x[82]:3,17->1,22= 25.0 5
total cost= 200.0

x[83]:0,10->3,15= 18.0 5
total cost= 90.0

x[84]:1,36->2,39= 15.0 3
total cost= 45.0

x[85]:3,5->1,10= 27.0 5
total cost= 135.0

x[86]:4,36->0,40= 21.0 4
total cost= 84.0

x[87]:4,41->2,46= 30.0 5
total cost= 150.0

x[88]:0,34->2,37= 19.0 3
total cost= 57.0

x[89]:2,14->0,19= 30.0 5
total cost= 150.0

x[90]:0,9->3,14= 18.0 5
x[90]:3,17->1,22= 18.0 5
total cost= 180.0

x[91]:0,23->3,28= 17.0 5
total cost= 85.0

x[92]:2,7->0,12= 17.0 5
total cost= 85.0

x[93]:4,30->0,34= 24.0 4
total cost= 96.0

x[94]:2,43->3,47= 12.0 4
x[94]:2,44->3,48= 9.0 4
x[94]:3,6->1,11= 21.0 5
x[94]:4,20->2,25= 21.0 5
total cost= 294.0

x[95]:2,49->4,3= 19.0 4
total cost= 76.0

x[96]:2,11->3,15= 22.0 4
total cost= 88.0

x[97]:1,36->2,39= 29.0 3
x[97]:3,31->1,36= 29.0 5
total cost= 232.0

x[98]:4,27->2,32= 30.0 5
total cost= 150.0

x[99]:3,38->4,43= 20.0 5
total cost= 100.0

x[100]:1,29->0,33= 29.0 4
total cost= 116.0

x[101]:4,25->2,30= 23.0 5
total cost= 115.0

x[102]:0,19->3,24= 15.0 5
total cost= 75.0

x[103]:0,33->3,38= 28.0 5
total cost= 140.0

x[104]:2,13->3,17= 30.0 4
total cost= 120.0

x[105]:0,33->3,38= 21.0 5
x[105]:3,43->1,48= 21.0 5
total cost= 210.0

x[106]:1,27->3,30= 25.0 3
total cost= 75.0

x[107]:0,7->3,12= 16.0 5
x[107]:3,12->1,17= 16.0 5
total cost= 160.0

x[108]:3,48->1,3= 30.0 5
total cost= 150.0

x[109]:2,25->3,29= 26.0 4
x[109]:4,17->2,22= 26.0 5
total cost= 234.0

x[110]:4,4->0,8= 26.0 4
total cost= 104.0

x[111]:2,1->3,5= 22.0 4
total cost= 88.0

x[112]:2,1->0,6= 16.0 5
total cost= 80.0

x[113]:3,35->1,40= 22.0 5
total cost= 110.0

x[114]:3,4->4,9= 27.0 5
total cost= 135.0

x[115]:2,46->0,1= 17.0 5
total cost= 85.0

x[116]:3,45->0,0= 15.0 5
total cost= 75.0

x[117]:0,17->3,22= 22.0 5
x[117]:3,22->1,27= 22.0 5
x[117]:4,12->0,16= 22.0 4
total cost= 308.0

x[118]:2,11->4,15= 20.0 4
total cost= 80.0

x[119]:1,22->2,25= 16.0 3
total cost= 48.0

x[120]:1,12->4,17= 19.0 5
total cost= 95.0

x[121]:2,25->3,29= 24.0 4
x[121]:3,32->1,37= 24.0 5
total cost= 216.0

x[122]:0,34->2,37= 15.0 3
total cost= 45.0

x[123]:4,4->0,8= 25.0 4
total cost= 100.0

x[124]:2,39->3,43= 19.0 4
x[124]:3,43->1,48= 19.0 5
x[124]:4,25->2,30= 19.0 5
total cost= 266.0

x[125]:2,37->3,41= 24.0 4
x[125]:3,5->1,10= 24.0 5
total cost= 216.0

x[126]:4,21->0,25= 22.0 4
total cost= 88.0

x[127]:3,15->0,20= 15.0 5
total cost= 75.0

x[128]:3,38->4,43= 16.0 5
total cost= 80.0

x[129]:2,13->3,17= 27.0 4
total cost= 108.0

x[130]:1,36->2,39= 16.0 3
x[130]:3,31->1,36= 16.0 5
total cost= 128.0

x[131]:3,22->1,27= 30.0 5
total cost= 150.0

x[132]:0,33->3,38= 27.0 5
x[132]:3,48->1,3= 27.0 5
total cost= 270.0

x[133]:4,10->0,14= 21.0 4
total cost= 84.0

x[134]:3,38->0,43= 19.0 5
total cost= 95.0

x[135]:2,46->0,1= 20.0 5
total cost= 100.0

x[136]:2,11->3,15= 30.0 4
x[136]:3,35->1,40= 30.0 5
total cost= 270.0

x[137]:1,48->2,1= 23.0 3
total cost= 69.0

x[138]:2,49->4,3= 16.0 4
total cost= 64.0

x[139]:2,1->3,5= 17.0 4
x[139]:3,21->1,26= 17.0 5
total cost= 153.0

x[140]:2,44->3,48= 17.0 4
total cost= 68.0

x[141]:3,49->1,4= 28.0 5
total cost= 140.0

x[142]:0,49->3,4= 27.0 5
x[142]:4,18->0,22= 25.0 4
x[142]:4,21->0,25= 2.0 4
total cost= 243.0

x[143]:1,46->2,49= 19.0 3
total cost= 57.0

x[144]:0,10->3,15= 25.0 5
x[144]:3,43->1,48= 25.0 5
total cost= 250.0

x[145]:1,10->2,13= 15.0 3
x[145]:3,5->1,10= 15.0 5
total cost= 120.0

x[146]:4,12->0,16= 20.0 4
total cost= 80.0

x[147]:2,49->4,3= 18.0 4
total cost= 72.0

x[148]:0,4->2,7= 21.0 3
x[148]:3,45->0,0= 21.0 5
total cost= 168.0

x[149]:2,11->3,15= 26.0 4
total cost= 104.0

x[150]:2,3->3,7= 16.0 4
total cost= 64.0

x[151]:0,4->3,9= 17.0 5
x[151]:3,24->1,29= 17.0 5
total cost= 170.0

x[152]:0,45->3,0= 22.0 5
x[152]:3,5->1,10= 22.0 5
total cost= 220.0

x[153]:4,21->0,25= 21.0 4
total cost= 84.0

x[154]:2,39->3,43= 27.0 4
total cost= 108.0

x[155]:0,40->3,45= 25.0 5
x[155]:4,15->0,19= 25.0 4
total cost= 225.0

x[156]:0,49->3,4= 19.0 5
total cost= 95.0

x[157]:3,38->0,43= 25.0 5
total cost= 125.0

x[158]:0,20->4,25= 28.0 5
total cost= 140.0

x[159]:2,11->4,15= 29.0 4
total cost= 116.0

x[160]:2,32->0,37= 15.0 5
total cost= 75.0

x[161]:2,49->3,3= 24.0 4
x[161]:4,17->2,22= 24.0 5
total cost= 216.0

x[162]:0,0->2,3= 17.0 3
total cost= 51.0

x[163]:4,44->2,49= 22.0 5
total cost= 110.0

x[164]:1,48->2,1= 19.0 3
total cost= 57.0

x[165]:0,34->2,37= 23.0 3
total cost= 69.0

x[166]:1,40->0,44= 28.0 4
total cost= 112.0

x[167]:3,4->4,9= 24.0 5
total cost= 120.0

x[168]:3,14->4,19= 25.0 5
total cost= 125.0

x[169]:2,3->3,7= 24.0 4
total cost= 96.0

x[170]:3,49->4,4= 21.0 5
total cost= 105.0

x[171]:2,1->3,5= 23.0 4
x[171]:4,44->2,49= 23.0 5
total cost= 207.0

x[172]:3,36->4,41= 16.0 5
total cost= 80.0

x[173]:2,1->3,5= 29.0 4
x[173]:3,5->1,10= 29.0 5
total cost= 261.0

x[174]:2,39->3,43= 24.0 4
x[174]:3,48->1,3= 24.0 5
total cost= 216.0

x[175]:2,3->3,7= 24.0 4
total cost= 96.0

x[176]:4,33->0,37= 16.0 4
total cost= 64.0

x[177]:3,45->0,0= 22.0 5
total cost= 110.0

x[178]:2,39->3,43= 28.0 4
total cost= 112.0

x[179]:4,44->0,48= 15.0 4
total cost= 60.0

x[180]:1,11->3,14= 20.0 3
total cost= 60.0

x[181]:2,3->3,7= 24.0 4
x[181]:3,43->1,48= 24.0 5
total cost= 216.0

x[182]:2,25->3,29= 25.0 4
total cost= 100.0

x[183]:4,10->0,14= 16.0 4
total cost= 64.0

x[184]:2,13->3,17= 15.0 4
x[184]:3,35->1,40= 15.0 5
x[184]:4,49->2,4= 15.0 5
total cost= 210.0

x[185]:1,11->3,14= 17.0 3
total cost= 51.0

x[186]:0,37->4,42= 15.0 5
total cost= 75.0

x[187]:0,20->4,25= 25.0 5
total cost= 125.0

x[188]:3,32->1,37= 21.0 5
total cost= 105.0

x[189]:1,36->2,39= 24.0 3
total cost= 72.0

x[190]:0,41->2,44= 27.0 3
total cost= 81.0

x[191]:1,36->2,39= 15.0 3
total cost= 45.0

x[192]:3,45->0,0= 20.0 5
total cost= 100.0

x[193]:0,44->3,49= 30.0 5
x[193]:3,24->1,29= 30.0 5
total cost= 300.0

x[194]:2,49->4,3= 18.0 4
total cost= 72.0

x[195]:3,28->0,33= 26.0 5
total cost= 130.0

x[196]:2,11->4,15= 21.0 4
total cost= 84.0

x[197]:3,15->0,20= 27.0 5
total cost= 135.0

x[198]:3,12->4,17= 18.0 5
total cost= 90.0

x[199]:2,1->3,5= 21.0 4
x[199]:3,5->1,10= 21.0 5
x[199]:4,44->2,49= 21.0 5
total cost= 294.0

x[200]:1,36->2,39= 19.0 3
total cost= 57.0

x[201]:2,25->3,29= 22.0 4
total cost= 88.0

x[202]:3,7->4,12= 30.0 5
total cost= 150.0

x[203]:2,33->0,38= 23.0 5
total cost= 115.0

x[204]:1,22->2,25= 28.0 3
total cost= 84.0

x[205]:1,10->2,13= 16.0 3
x[205]:3,5->1,10= 16.0 5
total cost= 128.0

x[206]:3,22->4,27= 27.0 5
total cost= 135.0

x[207]:2,13->3,17= 16.0 4
total cost= 64.0

x[208]:2,39->3,43= 23.0 4
total cost= 92.0

x[209]:2,7->0,12= 23.0 5
total cost= 115.0

x[210]:0,19->3,24= 27.0 5
x[210]:3,41->1,46= 27.0 5
total cost= 270.0

x[211]:0,1->3,6= 17.0 5
x[211]:4,36->0,40= 17.0 4
total cost= 153.0

x[212]:3,7->4,12= 30.0 5
total cost= 150.0

x[213]:0,20->4,25= 18.0 5
total cost= 90.0

x[214]:2,1->3,5= 22.0 4
x[214]:3,5->1,10= 22.0 5
total cost= 198.0

x[215]:2,22->3,26= 30.0 4
x[215]:3,31->1,36= 30.0 5
total cost= 270.0

x[216]:4,12->0,16= 20.0 4
total cost= 80.0

x[217]:4,41->2,46= 17.0 5
total cost= 85.0

x[218]:1,40->0,44= 15.0 4
total cost= 60.0

x[219]:1,10->2,13= 29.0 3
total cost= 87.0

x[220]:0,44->3,49= 15.0 5
total cost= 75.0

x[221]:0,0->2,3= 30.0 3
total cost= 90.0

x[222]:2,13->3,17= 26.0 4
x[222]:4,35->2,40= 26.0 5
total cost= 234.0

x[223]:2,13->3,17= 30.0 4
x[223]:3,17->1,22= 30.0 5
x[223]:4,27->2,32= 30.0 5
total cost= 420.0

x[224]:0,19->3,24= 20.0 5
x[224]:3,24->1,29= 20.0 5
total cost= 200.0

x[225]:4,33->0,37= 16.0 4
total cost= 64.0

x[226]:0,7->3,12= 19.0 5
x[226]:3,22->1,27= 19.0 5
total cost= 190.0

x[227]:0,8->2,11= 21.0 3
total cost= 63.0

x[228]:2,14->0,19= 28.0 5
total cost= 140.0

x[229]:0,12->3,17= 29.0 5
total cost= 145.0

x[230]:3,35->1,40= 30.0 5
total cost= 150.0

x[231]:1,29->0,33= 16.0 4
total cost= 64.0

x[232]:0,43->3,48= 27.0 5
x[232]:3,48->1,3= 27.0 5
total cost= 270.0

x[233]:4,46->2,1= 27.0 5
total cost= 135.0

x[234]:1,22->2,25= 25.0 3
total cost= 75.0

x[235]:0,37->4,42= 22.0 5
total cost= 110.0

x[236]:0,49->3,4= 25.0 5
total cost= 125.0

x[237]:0,23->2,26= 16.0 3
total cost= 48.0

x[238]:0,26->3,31= 27.0 5
x[238]:3,31->1,36= 27.0 5
x[238]:4,21->0,25= 27.0 4
total cost= 378.0

x[239]:0,39->3,44= 16.0 5
x[239]:3,6->1,11= 16.0 5
total cost= 160.0

x[240]:1,27->3,30= 30.0 3
total cost= 90.0

x[241]:0,34->3,39= 20.0 5
x[241]:3,43->1,48= 20.0 5
total cost= 200.0

x[242]:3,48->1,3= 22.0 5
total cost= 110.0

x[243]:2,37->3,41= 17.0 4
x[243]:3,41->1,46= 17.0 5
total cost= 153.0

x[244]:1,12->4,17= 21.0 5
total cost= 105.0

x[245]:0,7->3,12= 15.0 5
total cost= 75.0

x[246]:0,0->2,3= 24.0 3
total cost= 72.0

x[247]:2,11->4,15= 1.5 4
x[247]:2,40->4,44= 22.5 4
total cost= 96.0

x[248]:2,25->3,29= 29.0 4
x[248]:3,31->1,36= 29.0 5
total cost= 261.0

x[249]:1,22->4,27= 15.0 5
total cost= 75.0

x[250]:1,22->2,25= 23.0 3
total cost= 69.0

x[251]:1,48->2,1= 25.0 3
total cost= 75.0

x[252]:2,3->3,7= 16.0 4
x[252]:3,9->1,14= 16.0 5
x[252]:4,44->2,49= 16.0 5
total cost= 224.0

x[253]:4,3->0,7= 30.0 4
total cost= 120.0

x[254]:3,41->1,46= 25.0 5
total cost= 125.0

x[255]:0,20->3,25= 22.0 5
x[255]:4,14->0,18= 22.0 4
total cost= 198.0

x[256]:1,10->2,13= 18.0 3
total cost= 54.0

x[257]:4,20->2,25= 27.0 5
total cost= 135.0

x[258]:1,8->2,11= 18.0 3
x[258]:3,3->1,8= 18.0 5
total cost= 144.0

x[259]:0,39->3,44= 22.0 5
x[259]:3,5->1,10= 22.0 5
total cost= 220.0

x[260]:1,22->2,25= 24.0 3
x[260]:3,17->1,22= 24.0 5
total cost= 192.0

x[261]:0,7->3,12= 23.0 5
x[261]:3,32->1,37= 23.0 5
total cost= 230.0

x[262]:3,45->0,0= 18.0 5
total cost= 90.0

x[263]:1,36->2,39= 18.0 3
x[263]:3,43->1,48= 18.0 5
total cost= 144.0

x[264]:1,22->2,25= 2.0 3
x[264]:1,36->2,39= 28.0 3
x[264]:3,8->1,13= 2.0 5
x[264]:3,26->1,31= 28.0 5
total cost= 240.0

x[265]:1,31->4,36= 18.0 5
total cost= 90.0

x[266]:0,10->3,15= 17.0 5
total cost= 85.0

x[267]:1,37->3,40= 24.0 3
total cost= 72.0

x[268]:2,1->3,5= 19.0 4
x[268]:3,17->1,22= 19.0 5
x[268]:4,35->2,40= 19.0 5
total cost= 266.0

x[269]:0,23->3,28= 17.0 5
x[269]:3,31->1,36= 17.0 5
total cost= 170.0

x[270]:0,20->4,25= 17.0 5
total cost= 85.0

x[271]:0,8->2,11= 30.0 3
total cost= 90.0

x[272]:2,39->0,44= 20.0 5
total cost= 100.0

x[273]:1,40->0,44= 15.0 4
total cost= 60.0

x[274]:2,28->0,33= 22.0 5
total cost= 110.0

x[275]:1,48->2,1= 23.0 3
total cost= 69.0

x[276]:3,5->1,10= 18.0 5
total cost= 90.0

x[277]:1,29->4,34= 29.0 5
total cost= 145.0

x[278]:1,10->2,13= 25.0 3
total cost= 75.0

x[279]:2,14->0,19= 25.0 5
total cost= 125.0

x[280]:1,22->2,25= 15.0 3
total cost= 45.0

x[281]:4,46->2,1= 15.0 5
total cost= 75.0

x[282]:2,17->3,21= 21.0 4
x[282]:3,43->1,48= 21.0 5
total cost= 189.0

x[283]:0,25->4,30= 20.0 5
total cost= 100.0

x[284]:2,40->4,44= 28.0 4
total cost= 112.0

x[285]:2,20->0,25= 25.0 5
total cost= 125.0

x[286]:3,28->0,33= 20.0 5
total cost= 100.0

x[287]:2,13->3,17= 22.0 4
x[287]:3,24->1,29= 22.0 5
total cost= 198.0

x[288]:0,0->2,3= 19.0 3
x[288]:3,25->0,30= 19.0 5
total cost= 152.0

x[289]:2,17->3,21= 18.0 4
total cost= 72.0

x[290]:1,11->3,14= 26.0 3
total cost= 78.0

x[291]:4,33->0,37= 21.0 4
total cost= 84.0

x[292]:0,8->2,11= 29.0 3
total cost= 87.0

x[293]:0,10->3,15= 17.0 5
x[293]:3,21->1,26= 17.0 5
total cost= 170.0

x[294]:3,16->4,21= 15.0 5
total cost= 75.0

x[295]:0,12->3,17= 28.0 5
x[295]:4,21->0,25= 28.0 4
total cost= 252.0

x[296]:0,25->4,30= 22.0 5
total cost= 110.0

x[297]:1,22->2,25= 23.0 3
total cost= 69.0

x[298]:4,44->0,48= 27.0 4
total cost= 108.0

x[299]:3,6->1,11= 26.0 5
total cost= 130.0

x[300]:2,22->3,26= 18.0 4
x[300]:3,26->1,31= 18.0 5
total cost= 162.0

x[301]:1,4->0,8= 24.0 4
total cost= 96.0

x[302]:0,20->3,25= 21.0 5
total cost= 105.0

x[303]:2,39->3,43= 30.0 4
x[303]:3,0->1,5= 30.0 5
total cost= 270.0

x[304]:2,25->0,30= 30.0 5
total cost= 150.0

x[305]:1,40->0,44= 17.0 4
total cost= 68.0

x[306]:3,49->4,4= 17.0 5
total cost= 85.0

x[307]:2,4->3,8= 15.0 4
x[307]:3,8->1,13= 15.0 5
x[307]:4,44->2,49= 15.0 5
total cost= 210.0

x[308]:3,47->4,2= 27.0 5
total cost= 135.0

x[309]:0,17->3,22= 16.0 5
total cost= 80.0

x[310]:3,30->4,35= 20.0 5
total cost= 100.0

x[311]:1,10->2,13= 18.0 3
total cost= 54.0

x[312]:0,44->3,49= 27.0 5
x[312]:3,3->1,8= 27.0 5
total cost= 270.0

x[313]:2,20->0,25= 27.0 5
total cost= 135.0

x[314]:4,18->0,22= 25.0 4
total cost= 100.0

x[315]:3,13->4,18= 15.0 5
total cost= 75.0

x[316]:0,30->3,35= 29.0 5
x[316]:3,5->1,10= 29.0 5
total cost= 290.0

x[317]:0,31->3,36= 26.0 5
x[317]:3,43->1,48= 26.0 5
x[317]:4,15->0,19= 26.0 4
total cost= 364.0

x[318]:0,41->2,44= 20.0 3
x[318]:3,25->0,30= 20.0 5
total cost= 160.0

x[319]:4,12->0,16= 17.0 4
total cost= 68.0

x[320]:2,39->3,43= 18.0 4
x[320]:4,17->2,22= 18.0 5
total cost= 162.0

x[321]:0,27->3,32= 18.0 5
total cost= 90.0

x[322]:2,11->4,15= 1.5 4
x[322]:2,40->4,44= 22.5 4
total cost= 96.0

x[323]:2,1->3,5= 30.0 4
total cost= 120.0

x[324]:4,30->0,34= 15.0 4
total cost= 60.0

x[325]:1,48->2,1= 28.0 3
total cost= 84.0

x[326]:0,19->3,24= 27.0 5
x[326]:3,24->1,29= 27.0 5
total cost= 270.0

x[327]:0,17->3,22= 15.0 5
x[327]:3,31->1,36= 15.0 5
total cost= 150.0

x[328]:0,25->4,30= 16.0 5
total cost= 80.0

x[329]:1,8->2,11= 19.0 3
x[329]:3,43->1,48= 19.0 5
total cost= 152.0

x[330]:2,13->3,17= 28.0 4
total cost= 112.0

x[331]:4,41->2,46= 17.0 5
total cost= 85.0

x[332]:2,30->4,34= 29.0 4
total cost= 116.0

x[333]:4,30->0,34= 27.0 4
total cost= 108.0

x[334]:3,30->4,35= 19.0 5
total cost= 95.0

x[335]:4,25->2,30= 20.0 5
total cost= 100.0

x[336]:1,22->2,25= 20.0 3
total cost= 60.0

x[337]:2,39->3,43= 19.0 4
total cost= 76.0

x[338]:0,44->3,49= 21.0 5
total cost= 105.0

x[339]:2,14->0,19= 30.0 5
total cost= 150.0

x[340]:4,3->2,8= 22.0 5
total cost= 110.0

x[341]:3,38->0,43= 25.0 5
total cost= 125.0

x[342]:1,46->2,49= 19.0 3
x[342]:3,41->1,46= 19.0 5
total cost= 152.0

x[343]:3,25->0,30= 26.0 5
total cost= 130.0

x[344]:1,4->0,8= 20.0 4
total cost= 80.0

x[345]:1,19->3,22= 15.0 3
total cost= 45.0

x[346]:2,22->3,26= 26.0 4
x[346]:3,26->1,31= 26.0 5
x[346]:4,9->2,14= 26.0 5
total cost= 364.0

x[347]:3,25->0,30= 22.0 5
total cost= 110.0

x[348]:2,13->3,17= 23.0 4
total cost= 92.0

x[349]:1,36->2,39= 25.0 3
total cost= 75.0

x[350]:2,3->3,7= 21.0 4
x[350]:3,9->1,14= 21.0 5
x[350]:4,35->2,40= 21.0 5
total cost= 294.0

x[351]:4,14->0,18= 24.0 4
total cost= 96.0

x[352]:3,44->4,49= 22.0 5
total cost= 110.0

x[353]:0,19->3,24= 30.0 5
total cost= 150.0

x[354]:4,46->0,0= 29.0 4
total cost= 116.0

x[355]:3,12->4,17= 15.0 5
total cost= 75.0

x[356]:3,17->1,22= 28.0 5
total cost= 140.0

x[357]:1,29->0,33= 29.0 4
total cost= 116.0

x[358]:3,49->4,4= 20.0 5
total cost= 100.0

x[359]:1,46->2,49= 28.0 3
x[359]:3,26->1,31= 28.0 5
total cost= 224.0

x[360]:3,38->4,43= 28.0 5
total cost= 140.0

x[361]:2,49->3,3= 16.0 4
total cost= 64.0

x[362]:3,38->0,43= 19.0 5
total cost= 95.0

x[363]:1,40->0,44= 21.0 4
total cost= 84.0

x[364]:2,1->3,5= 22.0 4
total cost= 88.0

x[365]:1,37->3,40= 29.0 3
total cost= 87.0

x[366]:0,1->2,4= 3.0 3
x[366]:0,8->2,11= 20.0 3
total cost= 69.0

x[367]:2,22->3,26= 24.0 4
x[367]:3,43->1,48= 24.0 5
x[367]:4,9->2,14= 24.0 5
total cost= 336.0

x[368]:1,12->4,17= 16.0 5
total cost= 80.0

x[369]:2,20->0,25= 27.0 5
total cost= 135.0

x[370]:2,39->3,43= 30.0 4
total cost= 120.0

x[371]:0,23->3,28= 19.0 5
x[371]:3,43->1,48= 19.0 5
total cost= 190.0

x[372]:3,4->4,9= 15.0 5
total cost= 75.0

x[373]:4,18->0,22= 28.0 4
total cost= 112.0

x[374]:2,39->3,43= 18.0 4
x[374]:3,5->1,10= 18.0 5
x[374]:4,28->2,33= 18.0 5
total cost= 252.0

x[375]:4,36->0,40= 17.0 4
total cost= 68.0

x[376]:1,13->4,18= 21.0 5
total cost= 105.0

x[377]:1,27->3,30= 29.0 3
total cost= 87.0

x[378]:0,34->2,37= 22.0 3
total cost= 66.0

x[379]:3,7->4,12= 16.0 5
total cost= 80.0

x[380]:2,30->4,34= 22.0 4
total cost= 88.0

x[381]:4,23->2,28= 28.0 5
total cost= 140.0

x[382]:0,43->3,48= 22.0 5
x[382]:3,17->1,22= 22.0 5
total cost= 220.0

x[383]:3,22->4,27= 17.0 5
total cost= 85.0

x[384]:1,36->2,39= 16.0 3
total cost= 48.0

x[385]:0,20->3,25= 24.0 5
x[385]:4,3->0,7= 24.0 4
total cost= 216.0

x[386]:0,10->3,15= 22.0 5
x[386]:4,3->0,7= 22.0 4
total cost= 198.0

x[387]:1,8->2,11= 23.0 3
x[387]:3,49->1,4= 23.0 5
total cost= 184.0

x[388]:0,30->3,35= 21.0 5
x[388]:3,3->1,8= 21.0 5
total cost= 210.0

x[389]:4,3->0,7= 2.0 4
x[389]:4,4->0,8= 22.0 4
total cost= 96.0

x[390]:1,48->2,1= 30.0 3
x[390]:3,17->1,22= 30.0 5
total cost= 240.0

x[391]:1,48->2,1= 28.0 3
total cost= 84.0

x[392]:3,28->0,33= 17.0 5
total cost= 85.0

x[393]:1,3->3,6= 28.0 3
total cost= 84.0

x[394]:3,36->4,41= 25.0 5
total cost= 125.0

x[395]:1,22->2,25= 16.0 3
x[395]:3,17->1,22= 16.0 5
total cost= 128.0

x[396]:0,25->4,30= 26.0 5
total cost= 130.0

x[397]:4,33->0,37= 22.0 4
total cost= 88.0

x[398]:0,33->3,38= 15.0 5
total cost= 75.0

x[399]:4,12->0,16= 18.0 4
total cost= 72.0

Total time= 12564409

