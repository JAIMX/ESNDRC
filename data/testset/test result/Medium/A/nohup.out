number of service arcs=900
number of holding arcs=210

javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:414)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceA_M.runBranchAndPrice(BranchAndPriceA_M.java:236)
	at SNDRCSolver.<init>(SNDRCSolver.java:90)
	at SNDRCSolver.main(SNDRCSolver.java:210)
================ Solution ================
BAP terminated with objective : 45251
Total Number of iterations: 143
Total Number of processed nodes: 6
Total Time spent on master problems: 3425094 Total time spent on pricing problems: 2073
Best bound : 43453.43999999997
The number of service edges used= 83
Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [992, 993, 994, 995, 996, 997, 85, 998, 137, 429, 991] start node= 1 start time= 17 capacity type= 1
(3,1)->(3,2)->(3,3)->(3,4)->(3,5)->(3,6)->(3,7)->(3,8)->(3,9)->(1,17)->(0,25)->(3,1):1.0

artificial: false set: [400, 501, 1048, 1049, 634, 75, 1020, 1021, 1022, 1023] start node= 4 start time= 28 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(4,4)->(3,10)->(0,15)->(3,21)->(4,28)->(4,29)->(4,0):1.0

artificial: false set: [1040, 33, 1041, 1042, 339, 595, 1043, 1044, 1037, 1038, 1039] start node= 4 start time= 17 capacity type= 1
(0,3)->(2,9)->(4,17)->(4,18)->(4,19)->(4,20)->(4,21)->(4,22)->(4,23)->(4,24)->(4,25)->(0,3):1.0

artificial: false set: [685, 1039, 1040, 1041, 1042, 1043, 756, 1044, 341, 1051, 1052, 1053, 1054, 1055] start node= 4 start time= 19 capacity type= 1
(5,1)->(5,2)->(5,3)->(5,4)->(5,5)->(5,6)->(2,11)->(4,19)->(4,20)->(4,21)->(4,22)->(4,23)->(4,24)->(4,25)->(5,1):1.0

artificial: false set: [449, 465, 322, 937, 188] start node= 1 start time= 7 capacity type= 2
(1,7)->(1,8)->(3,15)->(2,22)->(3,29)->(1,7):1.0

artificial: false set: [944, 321, 945, 166, 569, 1018, 815, 943] start node= 1 start time= 13 capacity type= 2
(6,5)->(1,13)->(1,14)->(1,15)->(1,16)->(2,21)->(3,28)->(3,29)->(6,5):1.0

artificial: false set: [992, 1089, 323, 820, 168, 990, 543, 991] start node= 1 start time= 18 capacity type= 2
(3,0)->(3,1)->(3,2)->(3,3)->(6,9)->(6,10)->(1,18)->(2,23)->(3,0):1.0

artificial: false set: [144, 548, 824, 952, 953, 62] start node= 1 start time= 22 capacity type= 2
(0,2)->(3,8)->(6,14)->(1,22)->(1,23)->(1,24)->(0,2):1.0

artificial: false set: [934, 43, 125, 446, 319] start node= 1 start time= 4 capacity type= 2
(1,4)->(1,5)->(0,13)->(2,19)->(3,26)->(1,4):1.0

artificial: false set: [834, 579, 212, 1028, 107] start node= 4 start time= 8 capacity type= 2
(1,2)->(4,8)->(4,9)->(0,17)->(6,24)->(1,2):1.0

artificial: false set: [898, 226, 725, 712, 11, 1053, 1054] start node= 5 start time= 3 capacity type= 2
(5,3)->(5,4)->(5,5)->(0,11)->(1,16)->(4,22)->(6,28)->(5,3):1.0

artificial: false set: [785, 946, 227, 611, 268, 623] start node= 5 start time= 5 capacity type= 2
(5,5)->(4,11)->(1,16)->(1,17)->(4,23)->(1,28)->(5,5):1.0

artificial: false set: [673, 739, 150, 25, 335] start node= 5 start time= 19 capacity type= 2
(1,0)->(2,5)->(4,13)->(5,19)->(0,25)->(1,0):1.0

artificial: false set: [707, 809, 1036, 220, 605, 894, 1103] start node= 5 start time= 29 capacity type= 2
(4,5)->(1,10)->(4,16)->(4,17)->(6,23)->(6,24)->(5,29)->(4,5):1.0

artificial: false set: [1073, 375, 744, 90, 847] start node= 5 start time= 23 capacity type= 2
(0,0)->(6,7)->(2,15)->(5,23)->(5,24)->(0,0):1.0

artificial: false set: [966, 1065, 1018, 652, 796, 367, 479] start node= 5 start time= 15 capacity type= 2
(2,6)->(2,7)->(5,15)->(5,16)->(4,22)->(3,28)->(3,29)->(2,6):1.0

artificial: false set: [880, 694, 507, 651, 795] start node= 5 start time= 15 capacity type= 2
(4,4)->(6,10)->(5,15)->(4,21)->(3,27)->(4,4):1.0

artificial: false set: [754, 198, 535, 280, 969, 1053] start node= 5 start time= 3 capacity type= 2
(5,3)->(5,4)->(2,9)->(2,10)->(1,18)->(3,25)->(5,3):1.0

artificial: false set: [83, 789, 585, 1019, 990, 511] start node= 5 start time= 9 capacity type= 2
(3,0)->(3,1)->(5,9)->(4,15)->(0,23)->(3,29)->(3,0):1.0

artificial: false set: [1024, 881, 737, 695, 23, 1066, 238] start node= 5 start time= 17 capacity type= 2
(4,4)->(4,5)->(6,11)->(5,16)->(5,17)->(0,23)->(1,28)->(4,4):1.0

Total time= 18499636
