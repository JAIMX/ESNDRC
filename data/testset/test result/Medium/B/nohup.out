number of service arcs=1200
number of holding arcs=300

Yes
232

================ Solution ================
BAP terminated with objective : 31529
Total Number of iterations: 190
Total Number of processed nodes: 11
Total Time spent on master problems: 3481353 Total time spent on pricing problems: 6336
Best bound : 26890.506953308875
The number of service edges used= 225
Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [144, 53, 152, 377, 378, 429, 110] start node= 4 start time= 25 capacity type= 0
(1,2)->(3,9)->(2,17)->(2,18)->(1,20)->(0,23)->(1,24)->(2,1):1.0

artificial: false set: [2, 18, 244, 245, 246, 345, 265, 346, 91, 347] start node= 1 start time= 3 capacity type= 1
(1,1)->(0,2)->(1,4)->(1,5)->(1,6)->(2,15)->(2,16)->(2,17)->(0,18)->(1,25)->(6,3):1.0

artificial: false set: [372, 149, 373, 439, 151, 440, 441, 106, 412, 109] start node= 4 start time= 8 capacity type= 1
(1,1)->(2,12)->(2,13)->(1,16)->(1,19)->(3,19)->(3,20)->(3,21)->(2,22)->(1,29)->(2,6):1.0

artificial: false set: [288, 289, 358, 359, 360, 361, 362, 363, 43, 108, 364, 147, 287] start node= 4 start time= 12 capacity type= 1
(2,0)->(2,1)->(2,2)->(2,3)->(2,4)->(0,13)->(1,17)->(1,18)->(1,18)->(1,19)->(1,27)->(2,28)->(2,29)->(4,7):1.0

artificial: false set: [448, 449, 450, 163, 451, 452, 453, 118, 249, 250, 11, 379] start node= 4 start time= 27 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(1,9)->(1,10)->(0,11)->(1,13)->(2,19)->(3,28)->(1,28)->(3,29)->(1,6):1.0

artificial: false set: [82, 260, 261, 165, 6, 232, 361, 93] start node= 7 start time= 23 capacity type= 1
(2,1)->(1,3)->(0,6)->(1,15)->(1,20)->(1,21)->(0,22)->(1,22)->(5,0):1.0

artificial: false set: [211, 214, 186, 188] start node= 7 start time= 28 capacity type= 1
(1,1)->(1,4)->(1,6)->(1,8)->(4,16):1.0

artificial: false set: [368, 416, 369, 417, 115, 150, 183, 365, 366, 367, 415] start node= 7 start time= 26 capacity type= 1
(1,0)->(1,3)->(2,5)->(2,6)->(2,7)->(2,8)->(2,9)->(1,25)->(2,25)->(2,26)->(2,27)->(7,3):1.0

artificial: false set: [384, 228, 452, 453, 454, 137, 523, 524, 383, 191] start node= 7 start time= 10 capacity type= 1
(4,2)->(4,3)->(4,4)->(1,11)->(4,13)->(4,14)->(1,17)->(1,18)->(2,23)->(2,24)->(5,0):1.0

artificial: false set: [227, 515, 404, 405, 443, 444, 189, 445, 446, 143] start node= 7 start time= 1 capacity type= 1
(4,5)->(1,9)->(2,14)->(2,15)->(1,17)->(3,23)->(1,23)->(3,24)->(3,25)->(3,26)->(1,3):1.0

artificial: false set: [480, 481, 482, 201, 90, 476, 477, 62, 478, 479] start node= 8 start time= 4 capacity type= 1
(4,0)->(1,0)->(4,1)->(0,2)->(4,2)->(1,21)->(4,26)->(4,27)->(4,28)->(4,29)->(2,6):1.0

artificial: false set: [147, 133, 428, 476, 429, 477, 62, 206, 287] start node= 8 start time= 4 capacity type= 1
(0,2)->(3,8)->(3,9)->(1,13)->(1,17)->(4,26)->(1,26)->(1,27)->(4,27)->(2,4):1.0

artificial: false set: [400, 401, 483, 148, 135, 264, 57, 399, 207] start node= 8 start time= 11 capacity type= 1
(4,3)->(2,9)->(2,10)->(2,11)->(1,15)->(1,24)->(1,27)->(0,27)->(1,28)->(2,5):1.0

artificial: false set: [384, 452, 453, 454, 455, 456, 457, 137, 458, 459, 210, 187, 382, 383] start node= 8 start time= 25 capacity type= 1
(1,0)->(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(1,7)->(4,7)->(4,8)->(4,9)->(1,17)->(2,22)->(2,23)->(2,24)->(5,0):1.0

artificial: false set: [167, 215, 490, 59, 491, 492, 493, 270, 494, 271, 495] start node= 8 start time= 18 capacity type= 1
(1,0)->(1,1)->(1,5)->(4,10)->(4,11)->(4,12)->(4,13)->(4,14)->(4,15)->(1,17)->(0,29)->(4,7):1.0

artificial: false set: [224, 528, 53, 266, 267, 268, 157, 269, 526, 270, 527] start node= 9 start time= 25 capacity type= 1
(1,0)->(1,7)->(1,14)->(4,16)->(4,17)->(4,18)->(0,23)->(1,26)->(1,27)->(1,28)->(1,29)->(6,7):1.0

artificial: false set: [256, 512, 257, 513, 258, 514, 259, 515, 516, 517, 17, 218, 508, 509, 510, 511] start node= 9 start time= 6 capacity type= 1
(4,0)->(4,1)->(4,2)->(4,3)->(4,4)->(4,5)->(4,6)->(4,7)->(1,8)->(1,16)->(0,17)->(1,17)->(1,18)->(1,19)->(4,28)->(4,29)->(5,5):1.0

artificial: false set: [49, 277, 406, 136, 155, 412, 221] start node= 9 start time= 8 capacity type= 1
(1,5)->(1,7)->(1,11)->(1,16)->(2,16)->(0,19)->(2,22)->(7,28):1.0

artificial: false set: [515, 516, 517, 518, 519, 520, 521, 234, 522, 235, 523, 236, 524, 13, 525, 219] start node= 9 start time= 13 capacity type= 1
(4,5)->(4,6)->(4,7)->(4,8)->(1,9)->(4,9)->(4,10)->(4,11)->(4,12)->(0,13)->(4,13)->(4,14)->(4,15)->(1,24)->(1,25)->(1,26)->(5,4):1.0

artificial: false set: [385, 386, 279, 88, 104, 41, 378, 125] start node= 1 start time= 17 capacity type= 2
(1,5)->(1,9)->(0,11)->(1,14)->(2,18)->(2,25)->(2,26)->(0,28)->(9,6):1.0

artificial: false set: [417, 50, 132, 282, 411, 156, 222] start node= 1 start time= 20 capacity type= 2
(1,6)->(1,12)->(1,12)->(1,12)->(0,20)->(2,21)->(2,27)->(7,3):1.0

artificial: false set: [320, 321, 89, 329, 281, 330, 331, 332, 333, 29, 63, 319] start node= 1 start time= 19 capacity type= 2
(2,0)->(2,1)->(2,2)->(2,3)->(0,3)->(1,11)->(2,19)->(2,20)->(2,21)->(2,29)->(0,29)->(0,29)->(3,7):1.0

artificial: false set: [208, 130, 324, 86, 408, 490, 491, 59, 492] start node= 1 start time= 10 capacity type= 2
(1,10)->(4,10)->(4,11)->(4,12)->(2,18)->(2,24)->(0,26)->(1,28)->(0,29)->(4,7):1.0

artificial: false set: [128, 100, 37, 345, 265, 346, 91, 347] start node= 1 start time= 3 capacity type= 2
(1,1)->(0,7)->(1,8)->(1,10)->(2,15)->(2,16)->(2,17)->(1,25)->(6,3):1.0

artificial: false set: [113, 149, 55, 360, 169] start node= 4 start time= 8 capacity type= 2
(2,0)->(1,19)->(1,23)->(0,25)->(1,29)->(2,6):1.0

artificial: false set: [373, 70, 120, 79, 95] start node= 5 start time= 5 capacity type= 2
(1,0)->(1,5)->(0,10)->(2,13)->(0,19)->(9,27):1.0

artificial: false set: [81, 407, 296, 297, 124, 77, 174] start node= 5 start time= 25 capacity type= 2
(1,4)->(2,17)->(0,17)->(0,21)->(1,24)->(1,26)->(1,27)->(8,5):1.0

artificial: false set: [464, 17, 226, 165, 140, 463] start node= 9 start time= 6 capacity type= 2
(4,13)->(4,14)->(1,15)->(1,16)->(0,17)->(1,20)->(2,27):1.0

Total time= 18009739
