number of service arcs=1500
number of holding arcs=350

without cut;time compress=3; branch sort=1

Repairing basis singularity.
Added to 1 columns superbasic list.
Markowitz threshold set to 0.3
Yes
541

Time of first LP solve= 471679

There are 4478 columns added to the model.

Tried aggregator 2 times.
MIP Presolve eliminated 30385 rows and 225 columns.
Aggregator did 19258 substitutions.
Reduced MIP has 55919 rows, 154885 columns, and 435343 nonzeros.
Reduced MIP has 641 binaries, 3815 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.38 sec. (251.07 ticks)
Probing time = 0.11 sec. (12.74 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 154 rows and 435 columns.
Reduced MIP has 55765 rows, 154450 columns, and 434149 nonzeros.
Reduced MIP has 641 binaries, 3815 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.39 sec. (194.14 ticks)
Probing time = 0.17 sec. (15.29 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 48.58 sec. (15023.39 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                        76421.0000   -35199.0000           146.06%
*     0+    0                        67798.0000   -35199.0000           151.92%
*     0+    0                        66739.0000   -35199.0000           152.74%
*     0+    0                        65955.0000   -35199.0000           153.37%
*     0+    0                        65801.0000   -35199.0000           153.49%
*     0+    0                        64883.0000   -35199.0000           154.25%
*     0+    0                        64087.0000   -35199.0000           154.92%
*     0+    0                        64083.0000   -35199.0000           154.93%
*     0+    0                        63879.0000   -35199.0000           155.10%
      0     0    51483.0100    61    63879.0000    51483.0100       43   19.41%
      0     0    51483.0100    58    63879.0000     Cuts: 401     3429   19.41%
      0     0    51483.0100    58    63879.0000     Cuts: 387     7715   19.41%
      0     0    51483.0100    58    63879.0000  MIRcuts: 422    12536   19.41%
*     0+    0                        56665.0000    51483.0100             9.14%
Heuristic still looking.
Heuristic still looking.
      0     2    51483.0100    58    56665.0000    51483.0100    12536    9.14%
Elapsed time = 220.87 sec. (96103.90 ticks, tree = 0.00 MB, solutions = 10)
      1     3    51483.0100    55    56665.0000    51483.0100    16399    9.14%
      2     4    51483.0100    53    56665.0000    51483.0100    19461    9.14%
      3     5    51483.0100    46    56665.0000    51483.0100    23247    9.14%
      4     6    51483.0100    58    56665.0000    51483.0100    26150    9.14%
      5     7    51483.0100    45    56665.0000    51483.0100    28583    9.14%
      6     8    51483.0100    48    56665.0000    51483.0100    48286    9.14%
      8    10    51483.0100    59    56665.0000    51483.0100    89535    9.14%
     10    12    51483.0100    50    56665.0000    51483.0100   156152    9.14%
     13    15    51483.0100    51    56665.0000    51483.0100   277851    9.14%
     14    16    51483.0100    37    56665.0000    51483.0100   286609    9.14%
Elapsed time = 531.46 sec. (215358.69 ticks, tree = 0.00 MB, solutions = 10)
     18    20    51483.0100    39    56665.0000    51483.0100   320630    9.14%
     22    24    51483.2684    29    56665.0000    51483.0100   342581    9.14%
     26    28    51483.8749    27    56665.0000    51483.0100   349480    9.14%
     27    29    51483.0100    43    56665.0000    51483.0100   351540    9.14%
     29    31    51483.0100    37    56665.0000    51483.0100   355514    9.14%
     30    32    51484.9958    25    56665.0000    51483.0100   358104    9.14%
     31    33    51490.4703    22    56665.0000    51483.0100   361835    9.14%
     33    35    51483.0100    34    56665.0000    51483.0100   368659    9.14%
     34    36    51484.9958    25    56665.0000    51483.0100   368664    9.14%
     56    58    51488.0224    28    56665.0000    51483.0100   415130    9.14%
Elapsed time = 851.47 sec. (314145.28 ticks, tree = 0.00 MB, solutions = 10)
     60    62    51490.0100    37    56665.0000    51483.0100   427212    9.14%
     64    66    51488.2756    27    56665.0000    51483.0100   434770    9.14%
     65    67    51551.5260    19    56665.0000    51483.0100   438160    9.14%
     69    71    51530.1988    20    56665.0000    51483.0100   446369    9.14%
     73    75    51532.6737    20    56665.0000    51483.0100   452360    9.14%
     77    79    51536.0735    19    56665.0000    51483.0100   459042    9.14%
     81    83    51549.6471    20    56665.0000    51483.0100   471958    9.14%
     85    87    51575.2076    19    56665.0000    51483.0100   480938    9.14%
     89    91    51561.6675    18    56665.0000    51483.0100   488156    9.14%
     93    95    51596.0511    14    56665.0000    51483.0100   495228    9.14%
Elapsed time = 1028.86 sec. (358527.67 ticks, tree = 0.00 MB, solutions = 10)
     96    98    51493.8745    26    56665.0000    51483.0100   500044    9.14%
     97    99    51564.7200    20    56665.0000    51483.0100   501751    9.14%
    100   102    51648.3296    18    56665.0000    51483.0100   511790    9.14%
    106   108    51494.6777    23    56665.0000    51483.0100   522225    9.14%
    107   109    51581.4370    22    56665.0000    51483.0100   525505    9.14%
    111   113    51592.2817    19    56665.0000    51483.0100   532635    9.14%
    115   117    51598.1282    20    56665.0000    51483.0100   539500    9.14%
    119   121    51700.2429    19    56665.0000    51483.0100   548544    9.14%
    123   125    51608.9512    19    56665.0000    51483.0100   554390    9.14%
    127   129    51741.6016    18    56665.0000    51483.0100   561991    9.14%
Elapsed time = 1176.34 sec. (400115.58 ticks, tree = 4.47 MB, solutions = 10)
    131   133    51621.7744    22    56665.0000    51483.0100   568646    9.14%
    134   136    51496.1500    26    56665.0000    51483.0100   575809    9.14%
    135   137    51744.2360    16    56665.0000    51483.0100   581871    9.14%
    138   140    51508.1704    24    56665.0000    51483.0100   586181    9.14%
    139   141    51627.2238    18    56665.0000    51483.0100   587157    9.14%
    143   145    51629.3275    19    56665.0000    51483.0100   591370    9.14%
    146   148    51543.8823    26    56665.0000    51483.0100   597188    9.14%
    147   149    51748.9415    19    56665.0000    51483.0100   599814    9.14%
    151   153    51633.2170    20    56665.0000    51483.0100   607727    9.14%
    155   157    51818.6657    18    56665.0000    51483.0100   613360    9.14%
Elapsed time = 1310.73 sec. (433968.07 ticks, tree = 4.47 MB, solutions = 10)
    159   161    51634.7114    20    56665.0000    51483.0100   616143    9.14%
    162   164    51601.6688    20    56665.0000    51483.0100   626391    9.14%
    163   165    51775.3444    17    56665.0000    51483.0100   630008    9.14%
*   165+  165                        53110.0000    51483.0100             3.06%
    167   169    51635.2019    22    53110.0000    51483.0100   635925    3.06%
    177   179    51549.1835    19    53110.0000    51483.0100   646990    3.06%
    178   180    51583.9568    18    53110.0000    51483.0100   649387    3.06%
    182   184    51514.9753    23    53110.0000    51483.0100   656201    3.06%
    186   188    51516.8639    23    53110.0000    51483.0100   659194    3.06%
    190   192    51664.3029    20    53110.0000    51483.0100   668735    3.06%
    191   193    51637.8423    21    53110.0000    51483.0100   669735    3.06%
Elapsed time = 1565.23 sec. (504927.02 ticks, tree = 30.08 MB, solutions = 11)
    195   197    51639.4938    21    53110.0000    51483.0100   673753    3.06%
    199   201    51826.7540    16    53110.0000    51483.0100   680262    3.06%
    230   232    51547.8101    21    53110.0000    51483.0100   725578    3.06%
    231   233    51529.5022    25    53110.0000    51483.0100   726364    3.06%
    235   237    51588.6200    20    53110.0000    51483.0100   731821    3.06%
    239   241    51530.5954    22    53110.0000    51483.0100   738126    3.06%
    243   245    51537.4707    26    53110.0000    51483.0100   746845    3.06%
*   246+  246                        53102.0000    51483.0100             3.05%
    246   248    51699.3112    18    53102.0000    51483.0100   749896    3.05%
    250   252    51590.5364    20    53102.0000    51483.0100   757023    3.05%
    254   256    51666.2640    18    53102.0000    51483.0100   763790    3.05%
Elapsed time = 1715.52 sec. (546141.05 ticks, tree = 65.25 MB, solutions = 11)
    258   260    51594.9629    20    53102.0000    51483.0100   768006    3.05%
    259   261    51544.8991    25    53102.0000    51483.0100   768422    3.05%
    263   265    51548.3949    24    53102.0000    51483.0100   774695    3.05%
    267   269    51549.6034    25    53102.0000    51483.0100   779830    3.05%
    271   273    51589.2189    22    53102.0000    51483.0100   790090    3.05%
    294   296    51550.5698    28    53102.0000    51483.0100   825163    3.05%
    296   298    51719.8810    17    53102.0000    51483.0100   828269    3.05%
    298   300    51640.0651    23    53102.0000    51483.0100   831087    3.05%
    302   304    51550.5698    27    53102.0000    51483.0100   833798    3.05%
    304   306    51732.8953    14    53102.0000    51483.0100   841027    3.05%
Elapsed time = 1887.65 sec. (592033.74 ticks, tree = 104.64 MB, solutions = 12)
    308   310    51560.8425    21    53102.0000    51483.0100   848293    3.05%
    312   314    51674.0350    21    53102.0000    51483.0100   856734    3.05%
    316   318    51562.3650    20    53102.0000    51483.0100   865616    3.05%
    318   320    51555.4860    27    53102.0000    51483.0100   867342    3.05%
    322   324    51609.1833    21    53102.0000    51483.0100   871816    3.05%
    366   368    51647.6055    20    53102.0000    51483.0100   934956    3.05%
    369   371    51556.8800    28    53102.0000    51483.0100   940509    3.05%
    373   375    51611.2308    22    53102.0000    51483.0100   945138    3.05%
    377   379    51556.8920    28    53102.0000    51483.0100   950090    3.05%
    381   383    51556.8920    28    53102.0000    51483.0100   952408    3.05%
Elapsed time = 2131.69 sec. (661533.84 ticks, tree = 139.28 MB, solutions = 12)
    384   386    51884.9185    16    53102.0000    51483.0100   960551    3.05%
    386   388    51749.8784    21    53102.0000    51483.0100   963302    3.05%
    390   392    51923.4317    18    53102.0000    51483.0100   968031    3.05%
    394   396    51758.5874    21    53102.0000    51483.0100   972817    3.05%
    398   400    51943.2325    13    53102.0000    51483.0100   979358    3.05%
    402   404    51760.0485    19    53102.0000    51483.0100   982222    3.05%
    406   408    51771.4609    19    53102.0000    51483.0100   989817    3.05%
    410   412    52007.0686    16    53102.0000    51483.0100   994917    3.05%
    414   416    51773.6865    19    53102.0000    51483.0100  1000673    3.05%
*   415+  415                        53098.0000    51483.0100             3.04%
    418   420    51910.4600    17    53098.0000    51483.0100  1008955    3.04%
Elapsed time = 2314.37 sec. (708156.76 ticks, tree = 139.28 MB, solutions = 12)
    426   428    51785.7421    21    53098.0000    51483.0100  1019953    3.04%
    430   432    51939.3927    19    53098.0000    51483.0100  1026092    3.04%
    459   461    51582.0818    24    53098.0000    51483.0100  1063020    3.04%
    467   469    51602.0197    27    53098.0000    51483.0100  1071435    3.04%
    475   477    51626.1296    20    53098.0000    51483.0100  1081594    3.04%
    483   485    51606.6819    20    53098.0000    51483.0100  1093068    3.04%
    491   493    51725.6368    16    53098.0000    51483.0100  1107918    3.04%
    499   501    51683.2029    20    53098.0000    51483.0100  1120470    3.04%
*   502+  502                        53040.0000    51483.0100             2.94%
    507   509    51622.2441    21    53040.0000    51483.0100  1128991    2.94%
    511   513    51797.4241    19    53040.0000    51483.0100  1135943    2.94%
Elapsed time = 2549.99 sec. (776835.94 ticks, tree = 195.86 MB, solutions = 13)
    519   521    51743.5972    20    53040.0000    51483.0100  1146758    2.94%
    527   529    51630.9862    26    53040.0000    51483.0100  1160294    2.94%
    531   533    51697.2083    20    53040.0000    51483.0100  1164644    2.94%
    549   551    51634.2571    24    53040.0000    51483.0100  1191438    2.94%
    557   559    51638.6637    25    53040.0000    51483.0100  1201239    2.94%
    561   563    51697.5108    22    53040.0000    51483.0100  1206363    2.94%
    569   571    51706.2867    19    53040.0000    51483.0100  1217476    2.94%
    575   577    51715.1743    18    53040.0000    51483.0100  1224380    2.94%
    582   584    51958.5031    17    53040.0000    51483.0100  1233906    2.94%
    590   592    51972.0141    14    53040.0000    51483.0100  1243423    2.94%
Elapsed time = 2768.37 sec. (832534.99 ticks, tree = 255.14 MB, solutions = 14)
    601   603    51735.7394    20    53040.0000    51483.0100  1256164    2.94%
    605   607    51855.3700    17    53040.0000    51483.0100  1260049    2.94%
    614   616    51845.6865    17    53040.0000    51483.0100  1268417    2.94%
    621   623    51818.6469    17    53040.0000    51483.0100  1277807    2.94%
    626   628    51957.0384    18    53040.0000    51483.0100  1286502    2.94%
    634   636    52043.4341    23    53040.0000    51483.0100  1300037    2.94%
    642   644    52118.7906    18    53040.0000    51483.0100  1308275    2.94%
    656   658    51862.7972    16    53040.0000    51483.0100  1328311    2.94%
    664   666    51866.5523    13    53040.0000    51483.0100  1338468    2.94%
    669   671    51880.9575    18    53040.0000    51483.0100  1349058    2.94%
Elapsed time = 2960.23 sec. (885295.24 ticks, tree = 320.51 MB, solutions = 14)
*   672+  672                        52808.0000    51483.0100             2.51%
    672   674    51866.5523    13    52808.0000    51483.0100  1349769    2.51%
    680   682    51873.9548    14    52808.0000    51483.0100  1358032    2.51%
    684   686    52086.1019    13    52808.0000    51483.0100  1364310    2.51%
    691   693    51877.5655    14    52808.0000    51483.0100  1375533    2.51%
    694   696    52124.8394    17    52808.0000    51483.0100  1379974    2.51%
    700   702    51885.8431    14    52808.0000    51483.0100  1388502    2.51%
    706   708    51885.8431    14    52808.0000    51483.0100  1397368    2.51%

Mixed integer rounding cuts applied:  354
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =  220.77 sec. (96070.38 ticks)
Parallel b&c, 4 threads:
  Real time             = 2906.35 sec. (834192.70 ticks)
  Sync time (average)   =  129.10 sec.
  Wait time (average)   =  129.21 sec.
                          ------------
Total (root+branch&cut) = 3127.11 sec. (930263.08 ticks)
optimal objective= 52808.0

artificial: false set: [129, 4, 196, 501, 358, 170, 317, 79] start node= 1 start time= 20 capacity type= 2
(4,3)->(2,9)->(0,14)->(1,20)->(2,27)->(3,33)->(6,41)->(2,46)->(4,3):1

artificial: false set: [304, 341, 519, 120, 152, 74, 203, 459] start node= 5 start time= 21 capacity type= 2
(4,4)->(1,9)->(2,16)->(5,21)->(2,26)->(1,33)->(6,40)->(3,46)->(4,4):1

artificial: false set: [144, 483, 243, 503, 167, 492, 63, 111] start node= 1 start time= 7 capacity type= 2
(2,0)->(1,7)->(6,14)->(2,19)->(3,25)->(0,32)->(5,38)->(6,45)->(2,0):1

artificial: false set: [114, 403, 531, 506, 427, 124, 13, 255] start node= 1 start time= 15 capacity type= 2
(6,4)->(3,10)->(1,15)->(6,22)->(4,28)->(5,36)->(0,41)->(1,47)->(6,4):1

artificial: false set: [532, 69, 85, 311, 471, 508, 141, 350] start node= 1 start time= 35 capacity type= 2
(5,3)->(6,10)->(3,16)->(6,24)->(4,30)->(1,35)->(2,42)->(0,47)->(5,3):1

artificial: false set: [32, 321, 114, 403, 531, 506, 427, 255] start node= 1 start time= 15 capacity type= 2
(6,4)->(3,10)->(1,15)->(6,22)->(4,28)->(5,36)->(0,41)->(3,46)->(6,4):1

artificial: false set: [433, 371, 214, 806, 457, 186, 332, 95, 47] start node= 5 start time= 15 capacity type= 2
(5,2)->(1,9)->(5,15)->(5,16)->(2,21)->(4,28)->(0,33)->(4,41)->(2,47)->(5,2):1

artificial: false set: [338, 819, 227, 420, 36, 537, 60, 397, 462] start node= 5 start time= 29 capacity type= 2
(0,1)->(4,9)->(5,17)->(0,22)->(5,28)->(5,29)->(2,34)->(6,40)->(4,46)->(0,1):1

artificial: false set: [400, 544, 18, 292, 758, 265, 106, 171, 461, 431] start node= 5 start time= 48 capacity type= 2
(0,3)->(0,4)->(3,9)->(4,17)->(4,18)->(5,26)->(2,31)->(3,37)->(1,42)->(5,48)->(0,3):1

artificial: false set: [672, 486, 630, 343, 105, 154, 76, 205, 525, 461] start node= 5 start time= 26 capacity type= 2
(6,3)->(4,9)->(1,14)->(2,21)->(5,26)->(2,31)->(2,32)->(1,39)->(1,40)->(5,46)->(6,3):1

artificial: false set: [384, 530, 35, 263, 104, 220, 652, 765, 429, 766, 271] start node= 4 start time= 25 capacity type= 2
(3,3)->(2,11)->(2,12)->(6,18)->(4,24)->(4,25)->(4,26)->(3,32)->(1,37)->(5,43)->(0,48)->(3,3):1

artificial: false set: [193, 131, 100, 6, 678, 392, 463, 272, 692, 693, 694, 695, 696, 697] start node= 1 start time= 26 capacity type= 1
(3,1)->(3,2)->(3,3)->(3,4)->(3,5)->(3,6)->(3,7)->(2,15)->(0,20)->(1,26)->(5,32)->(2,37)->(2,38)->(4,45)->(3,1):1

Column Generation Based Heuristic Time= 3599903
javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:465)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceB_M.runBranchAndPrice(BranchAndPriceB_M.java:248)
	at SNDRCSolver.<init>(SNDRCSolver.java:96)
	at SNDRCSolver.main(SNDRCSolver.java:231)
================ Solution ================
BAP terminated with objective : 52808
Total Number of iterations: 100
Total Number of processed nodes: 8
Total Time spent on master problems: 32386571 Total time spent on pricing problems: 4481
Best bound : 51483.01
[4, 6, 13, 18, 32, 35, 36, 47, 60, 63, 69, 74, 76, 79, 85, 95, 100, 104, 105, 106, 111, 114, 120, 124, 129, 131, 141, 144, 152, 154, 167, 170, 171, 186, 193, 196, 203, 205, 214, 220, 227, 243, 255, 263, 265, 271, 272, 292, 304, 311, 317, 321, 332, 338, 341, 343, 350, 358, 371, 384, 392, 397, 400, 403, 420, 427, 429, 431, 433, 457, 459, 461, 462, 463, 471, 483, 486, 492, 501, 503, 506, 508, 519, 525, 530, 531, 532, 537]
The number of service edges used= 88

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [129, 4, 196, 501, 358, 170, 317, 79] start node= 1 start time= 20 capacity type= 2
(4,3)->(2,9)->(0,14)->(1,20)->(2,27)->(3,33)->(6,41)->(2,46)->(4,3):0.40217847597132483

artificial: false set: [304, 341, 519, 120, 152, 74, 203, 459] start node= 5 start time= 21 capacity type= 2
(4,4)->(1,9)->(2,16)->(5,21)->(2,26)->(1,33)->(6,40)->(3,46)->(4,4):0.10345404018054763

artificial: false set: [144, 483, 243, 503, 167, 492, 63, 111] start node= 1 start time= 7 capacity type= 2
(2,0)->(1,7)->(6,14)->(2,19)->(3,25)->(0,32)->(5,38)->(6,45)->(2,0):0.0

artificial: false set: [114, 403, 531, 506, 427, 124, 13, 255] start node= 1 start time= 15 capacity type= 2
(6,4)->(3,10)->(1,15)->(6,22)->(4,28)->(5,36)->(0,41)->(1,47)->(6,4):0.5019778033454287

artificial: false set: [532, 69, 85, 311, 471, 508, 141, 350] start node= 1 start time= 35 capacity type= 2
(5,3)->(6,10)->(3,16)->(6,24)->(4,30)->(1,35)->(2,42)->(0,47)->(5,3):0.0

artificial: false set: [32, 321, 114, 403, 531, 506, 427, 255] start node= 1 start time= 15 capacity type= 2
(6,4)->(3,10)->(1,15)->(6,22)->(4,28)->(5,36)->(0,41)->(3,46)->(6,4):0.6512319851314272

artificial: false set: [433, 371, 214, 806, 457, 186, 332, 95, 47] start node= 5 start time= 15 capacity type= 2
(5,2)->(1,9)->(5,15)->(5,16)->(2,21)->(4,28)->(0,33)->(4,41)->(2,47)->(5,2):0.0

artificial: false set: [338, 819, 227, 420, 36, 537, 60, 397, 462] start node= 5 start time= 29 capacity type= 2
(0,1)->(4,9)->(5,17)->(0,22)->(5,28)->(5,29)->(2,34)->(6,40)->(4,46)->(0,1):0.0

artificial: false set: [400, 544, 18, 292, 758, 265, 106, 171, 461, 431] start node= 5 start time= 48 capacity type= 2
(0,3)->(0,4)->(3,9)->(4,17)->(4,18)->(5,26)->(2,31)->(3,37)->(1,42)->(5,48)->(0,3):0.0

artificial: false set: [672, 486, 630, 343, 105, 154, 76, 205, 525, 461] start node= 5 start time= 26 capacity type= 2
(6,3)->(4,9)->(1,14)->(2,21)->(5,26)->(2,31)->(2,32)->(1,39)->(1,40)->(5,46)->(6,3):0.0

artificial: false set: [384, 530, 35, 263, 104, 220, 652, 765, 429, 766, 271] start node= 4 start time= 25 capacity type= 2
(3,3)->(2,11)->(2,12)->(6,18)->(4,24)->(4,25)->(4,26)->(3,32)->(1,37)->(5,43)->(0,48)->(3,3):0.0

artificial: false set: [193, 131, 100, 6, 678, 392, 463, 272, 692, 693, 694, 695, 696, 697] start node= 1 start time= 26 capacity type= 1
(3,1)->(3,2)->(3,3)->(3,4)->(3,5)->(3,6)->(3,7)->(2,15)->(0,20)->(1,26)->(5,32)->(2,37)->(2,38)->(4,45)->(3,1):0.0

Total time= 36002564
