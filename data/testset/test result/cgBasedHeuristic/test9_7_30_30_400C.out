number of service arcs=900
number of holding arcs=210

without cut;time compress=3; branch sort=1

Yes
323

Time of first LP solve= 64147

There are 2186 columns added to the model.

Tried aggregator 2 times.
MIP Presolve eliminated 39526 rows and 342 columns.
Aggregator did 19307 substitutions.
Reduced MIP has 25511 rows, 68861 columns, and 193962 nonzeros.
Reduced MIP has 232 binaries, 1780 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.21 sec. (143.18 ticks)
Probing time = 0.09 sec. (3.29 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 280 rows and 781 columns.
Reduced MIP has 25231 rows, 68080 columns, and 191777 nonzeros.
Reduced MIP has 232 binaries, 1780 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.15 sec. (87.07 ticks)
Probing time = 0.10 sec. (3.61 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 7.25 sec. (2354.09 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    80582.4533    50                  80582.4533       45         
      0     0    80593.9110    51                   Cuts: 314     1937         
      0     0    80597.4670    50                   Cuts: 332     3281         
      0     0    80602.4590    52                MIRcuts: 310     4384         
      0     0    80602.6930    44                   Cuts: 312     5585         
      0     0    80604.6861    46                MIRcuts: 264     7074         
      0     0    80609.1070    45                   Cuts: 300     9007         
Heuristic still looking.
*     0+    0                       110429.0000    80609.1070            27.00%
      0     2    80609.1070    45   110429.0000    80609.1070     9007   27.00%
Elapsed time = 69.66 sec. (26893.13 ticks, tree = 0.00 MB, solutions = 1)
      1     3    80624.5482    49   110429.0000    80609.1070    10334   27.00%
      2     4    80611.3644    48   110429.0000    80609.1070    12160   27.00%
      3     5    80612.3645    51   110429.0000    80611.3644    12704   27.00%
      4     6    80716.6682    42   110429.0000    80611.3644    13782   27.00%
      7     9    80716.6682    44   110429.0000    80611.3644    21034   27.00%
      9    11    80716.8407    35   110429.0000    80611.3644    27144   27.00%
     10    12    80623.1103    43   110429.0000    80612.0767    38455   27.00%
     13    15    80640.8682    50   110429.0000    80612.0767    70335   27.00%
     14    16    80723.5311    40   110429.0000    80612.0767    73517   27.00%
     16    18    80623.3976    46   110429.0000    80612.3210    77398   27.00%
Elapsed time = 104.91 sec. (43664.85 ticks, tree = 0.00 MB, solutions = 1)
     20    22    80627.2196    41   110429.0000    80612.3210    83318   27.00%
     24    26    80628.3395    42   110429.0000    80612.3645    86391   27.00%
     28    30    80633.9852    42   110429.0000    80612.3645    90690   27.00%
     32    34    80628.3416    40   110429.0000    80612.3645    95631   27.00%
     36    38    80632.1104    39   110429.0000    80612.3645    97782   27.00%
     40    42    80636.0977    41   110429.0000    80612.3645   102065   27.00%
     49    51    80639.5969    39   110429.0000    80612.3645   109192   27.00%
     57    59    80647.3000    46   110429.0000    80612.3645   114705   27.00%
     61    63    80698.8324    39   110429.0000    80612.3645   118482   27.00%
     73    75    80700.8150    40   110429.0000    80612.3645   126492   27.00%
Elapsed time = 154.64 sec. (59784.76 ticks, tree = 0.00 MB, solutions = 1)
     80    82    80756.9864    44   110429.0000    80612.3645   132590   27.00%
     82    84    80856.6614    39   110429.0000    80612.3645   134710   27.00%
     87    89    80644.5732    44   110429.0000    80612.3645   138263   27.00%
    121   123    80737.1057    51   110429.0000    80612.3645   162163   27.00%
    125   127    80738.1770    38   110429.0000    80612.3645   165076   27.00%
    139   141    80658.1087    44   110429.0000    80612.3645   175607   27.00%
    143   145    80760.3415    43   110429.0000    80612.3645   177999   27.00%
    151   153    80673.0895    40   110429.0000    80612.3645   184621   27.00%
    155   157    80789.7222    45   110429.0000    80612.3645   190243   27.00%
    172   174    80673.6515    41   110429.0000    80612.3645   208196   27.00%
Elapsed time = 252.86 sec. (87672.51 ticks, tree = 5.89 MB, solutions = 1)
    176   178    80688.1590    42   110429.0000    80612.3645   215277   27.00%
    180   182    80678.5920    41   110429.0000    80612.3645   217310   27.00%
    184   186    80793.8749    35   110429.0000    80612.3645   223835   27.00%
    188   190    80694.3678    41   110429.0000    80612.3645   227432   27.00%
    192   194    80680.2563    42   110429.0000    80612.3645   229739   27.00%
*   198+  198                        84547.0000    80612.3645             4.65%
    223   225    81022.8050    29    84547.0000    80612.3645   245994    4.65%
    230   232    80985.9062    34    84547.0000    80612.3645   250165    4.65%
    237   239    80717.0133    36    84547.0000    80612.3645   253680    4.65%
    245   247    80725.1825    35    84547.0000    80612.3645   257387    4.65%
*   246+  246                        81930.0000    80612.3645             1.61%
    246   248    81190.1502    32    81930.0000    80612.3645   257625    1.61%
Elapsed time = 302.51 sec. (102683.34 ticks, tree = 15.02 MB, solutions = 2)
    258   260    81238.7760    30    81930.0000    80612.3645   263599    1.61%
    270   272    81254.3196    29    81930.0000    80612.3645   269496    1.61%
    274   276    81333.8300    24    81930.0000    80612.3645   271395    1.61%
    288   290    80759.2953    36    81930.0000    80612.3645   278036    1.61%
    318   320    80776.0350    36    81930.0000    80612.3645   286601    1.61%
    319   321    81342.2400    20    81930.0000    80612.3645   286883    1.61%
*   321+  321                        81660.0000    80612.3645             1.28%
    338   338    80846.4778    36    81660.0000    80612.3645   294166    1.28%
    342   342    80842.2343    36    81660.0000    80612.3645   294845    1.28%
    354   352    80905.5564    37    81660.0000    80612.3645   300102    1.28%
    362   358    80912.9191    31    81660.0000    80612.3645   304820    1.28%
Elapsed time = 352.64 sec. (118275.32 ticks, tree = 41.39 MB, solutions = 5)
    374   368    80972.7018    25    81660.0000    80612.3645   308142    1.28%
    468   436    80988.2524    30    81660.0000    80612.3645   330216    1.28%
    472   440    80991.0000    29    81660.0000    80612.3645   331658    1.28%
    488   454    81130.8400    22    81660.0000    80612.3645   335407    1.28%
    508   466    81198.7200    21    81660.0000    80612.3645   339949    1.28%
    512   470    81434.5200    13    81660.0000    80612.3645   341403    1.28%
    524   478    81459.2400    17    81660.0000    80612.3645   344242    1.28%
    540   490    81559.4400    14    81660.0000    80612.3645   347979    1.28%
    614   522    80687.7363    42    81660.0000    80612.3645   370211    1.28%
    615   523    80691.9718    45    81660.0000    80612.3645   371012    1.28%
Elapsed time = 401.91 sec. (132978.65 ticks, tree = 101.07 MB, solutions = 6)
    619   525    80689.1535    42    81660.0000    80612.3645   373336    1.28%
    622   528    80770.5095    36    81660.0000    80612.3645   374571    1.28%
    626   530    80793.3374    42    81660.0000    80612.3645   377866    1.28%
*   627+  529                        81609.0000    80612.3645             1.22%
    627   531    80742.1767    44    81609.0000    80612.3645   378225    1.22%
    799   521    80642.3709    52    81609.0000    80612.3645   406063    1.22%
    801   523    80755.0466    41    81609.0000    80612.3645   409480    1.22%
    808   530    80821.5733    48    81609.0000    80612.3645   414248    1.22%
    812   532    80802.5663    42    81609.0000    80612.3645   417078    1.22%
    813   533    80879.7200    41    81609.0000    80612.3645   418750    1.22%
    817   537    80894.5650    35    81609.0000    80612.3645   421398    1.22%
Elapsed time = 522.05 sec. (209109.79 ticks, tree = 97.85 MB, solutions = 7)
    819   539    80655.9706    48    81609.0000    80612.3645   423154    1.22%
    843   559    80826.9221    36    81609.0000    80613.4868   439688    1.22%
    847   563    80929.9428    37    81609.0000    80613.4868   443931    1.22%
    858   574    80670.8827    48    81609.0000    80613.4868   450992    1.22%
    862   578    80764.4897    44    81609.0000    80613.4868   451992    1.22%
    865   581    80640.9103    48    81609.0000    80613.4868   453614    1.22%
    899   615    81166.0200    31    81609.0000    80613.4868   476595    1.22%
    903   619    81171.4476    29    81609.0000    80613.4868   480417    1.22%
    911   627    81226.7052    31    81609.0000    80613.4868   487875    1.22%
    919   635    81226.7052    31    81609.0000    80613.4868   494714    1.22%
Elapsed time = 597.90 sec. (232446.35 ticks, tree = 121.31 MB, solutions = 7)
    927   643    81174.8900    28    81609.0000    80613.4868   501833    1.22%
    932   648    80657.5297    52    81609.0000    80613.4868   505032    1.22%
    936   652    80699.8801    48    81609.0000    80613.4868   508600    1.22%
    960   676    81189.4600    26    81609.0000    80613.4868   520518    1.22%
    965   681    80676.8143    52    81609.0000    80613.4868   525165    1.22%
    969   685    80691.6759    46    81609.0000    80613.4868   527498    1.22%
    973   689    80693.3952    42    81609.0000    80613.4868   531593    1.22%
    978   694    80987.7200    39    81609.0000    80613.4868   538229    1.22%
    982   698    80932.5966    37    81609.0000    80613.4868   541334    1.22%
    986   702    80949.4956    32    81609.0000    80613.4868   544929    1.22%
Elapsed time = 648.77 sec. (248226.96 ticks, tree = 137.34 MB, solutions = 7)
    990   706    80963.5014    35    81609.0000    80613.4868   548111    1.22%
    994   708    80968.3172    39    81609.0000    80613.4868   550616    1.22%
   1129   745    80690.4959    49    81609.0000    80613.4868   571952    1.22%
   1134   750    80772.0439    43    81609.0000    80613.4868   576517    1.22%
   1139   755    81047.4736    40    81609.0000    80613.4868   581412    1.22%
   1143   759    81006.2133    36    81609.0000    80613.4868   584690    1.22%
   1147   763    81055.4933    32    81609.0000    80613.4868   587928    1.22%
   1155   771    81075.0800    33    81609.0000    80613.4868   593320    1.22%
   1163   779    81079.6550    34    81609.0000    80613.4868   599799    1.22%
   1179   795    81122.4400    35    81609.0000    80613.4868   614796    1.22%
Elapsed time = 708.45 sec. (266020.85 ticks, tree = 155.25 MB, solutions = 7)
   1193   809    80809.6200    45    81609.0000    80613.4868   624394    1.22%
   1209   825    80873.5192    37    81609.0000    80613.4868   637336    1.22%
   1273   889    81058.1686    33    81609.0000    80613.4868   672441    1.22%
   1279   895    80754.9636    49    81609.0000    80613.4868   673923    1.22%
   1311   927    80760.1935    47    81609.0000    80613.4868   687090    1.22%
   1399   998    80902.5166    44    81609.0000    80613.4868   718917    1.22%
   1411  1006    80927.1520    46    81609.0000    80613.4868   724123    1.22%
   1435  1030    80941.7546    41    81609.0000    80613.4868   739083    1.22%
*  1440+ 1033                        81588.0000    80613.4868             1.19%
   1593  1075    80786.9189    52    81588.0000    80614.2467   781562    1.19%
   1613  1095    80790.4742    47    81588.0000    80614.2467   792657    1.19%
Elapsed time = 914.07 sec. (328983.11 ticks, tree = 239.66 MB, solutions = 8)
   1629  1111    80795.4773    50    81588.0000    80614.2467   803155    1.19%
   1640  1122    80745.9669    57    81588.0000    80614.2467   811582    1.19%
   1684  1166    80772.0080    53    81588.0000    80614.2467   837330    1.19%
   1701  1183    80803.6546    56    81588.0000    80614.2467   845747    1.19%
   1760  1242    80639.4822    55    81588.0000    80624.5010   887561    1.18%
   1775  1257    80738.6406    43    81588.0000    80624.5010   898361    1.18%
   1800  1282    80650.5371    46    81588.0000    80624.5010   910286    1.18%
   1836  1318    80679.0263    43    81588.0000    80624.5010   926911    1.18%
   1852  1334    80713.8346    45    81588.0000    80624.5010   936927    1.18%
   1896  1378    80717.0543    47    81588.0000    80624.5010   960339    1.18%
Elapsed time = 1109.46 sec. (388961.80 ticks, tree = 300.36 MB, solutions = 8)
   1914  1396    80754.3589    59    81588.0000    80624.5010   973819    1.18%
   1934  1416    80757.7000    57    81588.0000    80624.5010   984179    1.18%
   1954  1436    80761.3689    53    81588.0000    80624.5010   994678    1.18%
   1974  1456    80764.0483    56    81588.0000    80624.5010  1006205    1.18%
   2006  1488    80775.8923    47    81588.0000    80624.5010  1024743    1.18%
*  2023+ 1503                        81478.0000    80624.5010             1.05%
*  2023+ 1503                        81466.0000    80624.5010             1.03%
*  2023+ 1503                        81399.0000    80624.5010             0.95%
   2023  1505    80777.3154    48    81399.0000    80624.5010  1035995    0.95%
   2164  1494    80780.1418    50    81399.0000    80624.5010  1092687    0.95%
   2189  1515    80840.2667    51    81399.0000    80624.5010  1103897    0.95%
   2217  1537    80848.6200    53    81399.0000    80624.5010  1115249    0.95%
   2244  1561    80800.8181    43    81399.0000    80624.5010  1132498    0.95%
Elapsed time = 1366.62 sec. (495134.81 ticks, tree = 255.09 MB, solutions = 11)
   2256  1573    80820.3832    43    81399.0000    80624.5010  1139331    0.95%
   2280  1597    80831.2541    47    81399.0000    80624.5010  1151382    0.95%
   2318  1635    80764.4919    41    81399.0000    80624.5010  1171758    0.95%
   2332  1649    80839.3742    42    81399.0000    80624.5010  1178810    0.95%
   2368  1685    80855.8654    49    81399.0000    80624.5010  1197440    0.95%
   2392  1709    80862.3272    49    81399.0000    80624.5010  1213452    0.95%
   2421  1738    80948.5072    47    81399.0000    80624.5010  1225848    0.95%
   2441  1758    80958.8605    56    81399.0000    80624.5010  1237979    0.95%
   2483  1800    80646.1476    52    81399.0000    80646.1476  1309578    0.92%
   2486  1801    80648.9533    49    81399.0000    80647.8674  1311564    0.92%
Elapsed time = 1678.38 sec. (620764.56 ticks, tree = 310.79 MB, solutions = 11)
   2488  1802    80648.6380    46    81399.0000    80647.9948  1314015    0.92%
   2494  1805    80649.4546    44    81399.0000    80648.1863  1320851    0.92%
   2499  1808    80709.2206    44    81399.0000    80648.1863  1357824    0.92%
   2504  1811    80651.4299    42    81399.0000    80648.1863  1372610    0.92%
   2507  1813    80683.3475    53    81399.0000    80648.1863  1374894    0.92%
*  2509+ 1216                        81390.0000    80648.1863             0.91%
   2516  1224    80687.6353    56    81390.0000    80648.1863  1386680    0.91%
   2523  1229    80693.7638    42    81390.0000    80648.1863  1393191    0.91%
   2531  1232    80687.1206    52    81390.0000    80648.1863  1402101    0.91%
   2547  1243    80681.6848    48    81390.0000    80648.1863  1410742    0.91%
   2567  1255    80682.8928    43    81390.0000    80648.1863  1422798    0.91%
Elapsed time = 1804.92 sec. (668848.53 ticks, tree = 202.29 MB, solutions = 12)
   2585  1265    80714.8282    45    81390.0000    80648.1863  1435062    0.91%
   2597  1273    80715.4792    44    81390.0000    80648.1863  1444763    0.91%
   2604  1278    80693.2858    54    81390.0000    80648.1863  1450462    0.91%
   2617  1285    80693.4954    51    81390.0000    80648.1863  1466796    0.91%
   2625  1290    80715.8056    43    81390.0000    80648.1863  1474268    0.91%
   2637  1300    80696.6417    51    81390.0000    80648.1863  1483994    0.91%
   2660  1314    80676.9728    47    81390.0000    80648.1863  1499171    0.91%
   2696  1334    80732.8011    48    81390.0000    80648.1863  1530933    0.91%
   2745  1363    80764.9272    40    81390.0000    80648.1863  1568347    0.91%
   2759  1369    80703.3423    50    81390.0000    80648.1863  1580711    0.91%
Elapsed time = 2002.05 sec. (732330.95 ticks, tree = 200.46 MB, solutions = 12)
   2771  1376    80810.2186    46    81390.0000    80648.1863  1594950    0.91%
   2800  1391    80717.8181    48    81390.0000    80648.1863  1611627    0.91%
   2823  1405    80785.6985    44    81390.0000    80648.1863  1627289    0.91%
   2852  1423    80784.1708    50    81390.0000    80648.1863  1651586    0.91%
   2875  1431    80741.0811    43    81390.0000    80648.1863  1665884    0.91%
   2888  1440    80792.9098    41    81390.0000    80648.1863  1676446    0.91%
   2908  1452    80818.1251    47    81390.0000    80648.1863  1691961    0.91%
   2946  1479    80822.8486    44    81390.0000    80648.1863  1710224    0.91%
   2954  1485    81056.6233    42    81390.0000    80648.1863  1718514    0.91%
   3008  1514    80804.0213    43    81390.0000    80648.1863  1745940    0.91%
Elapsed time = 2158.79 sec. (779534.82 ticks, tree = 188.09 MB, solutions = 12)
   3022  1523    81178.1708    37    81390.0000    80648.1863  1756089    0.91%
   3039  1531    80830.3444    37    81390.0000    80648.1863  1762340    0.91%
   3063  1545    80933.2206    34    81390.0000    80648.1863  1782583    0.91%
   3130  1582    81169.3036    40    81390.0000    80648.1863  1815125    0.91%
   3162  1597    80847.6901    41    81390.0000    80648.1863  1833719    0.91%
   3194  1613    81281.7828    37    81390.0000    80648.1863  1847849    0.91%
   3241  1632    81130.8920    37    81390.0000    80648.1863  1877298    0.91%
   3249  1634    80853.9600    36    81390.0000    80648.1863  1883552    0.91%
   3304  1656    81296.7822    27    81390.0000    80648.1863  1917173    0.91%
*  3315+ 1364                        81378.0000    80648.1863             0.90%
   3315  1366    80669.9802    45    81378.0000    80648.1863  1921737    0.90%
Elapsed time = 2363.65 sec. (846513.73 ticks, tree = 119.44 MB, solutions = 12)
   3420  1381    80686.2698    54    81378.0000    80648.1863  1980653    0.90%
   3436  1389    80694.6114    42    81378.0000    80648.1863  1989871    0.90%
   3467  1398        cutoff          81378.0000    80648.1863  2007831    0.90%
   3562  1373    80663.3195    43    81378.0000    80648.1863  2032514    0.90%
   3567  1374    80767.9679    42    81378.0000    80650.5224  2035485    0.89%
   3594  1392    80886.5284    47    81378.0000    80650.5224  2050055    0.89%
   3634  1410    81006.2901    39    81378.0000    80650.5224  2074704    0.89%
   3666  1425    80858.7999    34    81378.0000    80650.5224  2103533    0.89%
   3682  1433    80807.6782    38    81378.0000    80650.5224  2121420    0.89%
   3698  1441    80817.9953    38    81378.0000    80650.5224  2136635    0.89%
Elapsed time = 2524.56 sec. (890823.51 ticks, tree = 89.70 MB, solutions = 13)
   3711  1447    80713.9122    47    81378.0000    80650.5224  2146810    0.89%
   3755  1468    80825.1145    45    81378.0000    80650.5224  2170721    0.89%
   3763  1471    80844.8193    43    81378.0000    80650.5224  2180265    0.89%
   3779  1479    80907.1032    36    81378.0000    80650.5224  2190896    0.89%
   3807  1492    80872.1092    41    81378.0000    80650.5224  2207998    0.89%
   3823  1500    80882.9137    42    81378.0000    80650.5224  2217551    0.89%
   3881  1524    80709.7380    44    81378.0000    80650.5224  2256609    0.89%
   3901  1535    80713.6556    46    81378.0000    80650.5224  2271517    0.89%
   3921  1543    80724.5723    41    81378.0000    80650.5224  2281312    0.89%
   3937  1551    80747.1057    44    81378.0000    80650.5224  2291109    0.89%
Elapsed time = 2680.04 sec. (932839.21 ticks, tree = 74.12 MB, solutions = 13)
   3997  1578    80992.3891    36    81378.0000    80650.5224  2322966    0.89%
*  4019+ 1505                        81372.0000    80650.5224             0.89%
*  4019+ 1458                        81371.0000    80650.5224             0.89%
*  4019+ 1426                        81353.0000    80650.5224             0.86%
   4019  1428    80756.6152    49    81353.0000    80650.5224  2335963    0.86%
   4143  1432    80706.3707    54    81353.0000    80650.5224  2411980    0.86%
   4176  1460    81054.5029    40    81353.0000    80650.5224  2431731    0.86%
   4191  1475    80755.6087    50    81353.0000    80650.5224  2441739    0.86%
   4228  1512    81086.9247    39    81353.0000    80650.5224  2458263    0.86%
   4248  1532    81186.2057    39    81353.0000    80650.5224  2470687    0.86%
   4295  1579    81108.0527    34    81353.0000    80652.4055  2500585    0.86%
   4315  1599    81130.8113    35    81353.0000    80652.4055  2514647    0.86%
   4349  1633    80775.6481    41    81353.0000    80652.4055  2531975    0.86%
Elapsed time = 2891.82 sec. (992685.29 ticks, tree = 37.12 MB, solutions = 16)
   4365  1647    80821.2160    42    81353.0000    80652.4055  2546019    0.86%
   4385  1663    81035.0920    47    81353.0000    80652.4055  2556270    0.86%
*  4484+ 1737                        81340.0000    80652.4055             0.85%
   4484  1739    80836.0000    47    81340.0000    80652.4055  2598449    0.85%
   4499  1754    80665.9643    48    81340.0000    80652.4055  2607624    0.85%
   4531  1786    80686.6829    35    81340.0000    80652.4055  2632554    0.85%
   4589  1817    81220.9222    37    81340.0000    80652.4055  2674121    0.85%
   4604  1832    80872.9440    40    81340.0000    80652.4055  2683871    0.85%
   4657  1878    80693.2731    46    81340.0000    80652.4055  2716051    0.85%
   4685  1906    80714.2263    42    81340.0000    80652.4055  2741355    0.85%
   4717  1936    80723.8243    43    81340.0000    80652.4055  2759804    0.85%
Elapsed time = 3119.25 sec. (1052972.51 ticks, tree = 41.97 MB, solutions = 17)
   4771  1988    80747.3115    49    81340.0000    80652.4055  2790392    0.85%
   4797  2001    81027.7708    47    81340.0000    80652.4055  2804184    0.85%
   4825  2017    81029.7958    49    81340.0000    80652.4055  2812392    0.85%
   4857  2037    81133.0280    42    81340.0000    80652.4055  2832671    0.85%
   4891  2051    81172.8132    49    81340.0000    80652.4055  2851435    0.85%
   4927  2072    81310.8895    40    81340.0000    80652.4055  2872049    0.85%
   5024  2122    80836.1512    44    81340.0000    80653.2287  2912103    0.84%
   5037  2135    80899.7832    48    81340.0000    80653.2287  2919226    0.84%
*  5051+ 2147                        81212.0000    80653.2287             0.69%
   5051  2149    80901.0365    44    81212.0000    80653.2287  2933278    0.69%
   5138  2108    80906.9618    41    81212.0000    80654.1339  3020578    0.69%
Elapsed time = 3509.76 sec. (1247971.87 ticks, tree = 47.10 MB, solutions = 18)
   5157  2127    80814.2396    57    81212.0000    80654.1339  3041871    0.69%

Mixed integer rounding cuts applied:  682
Gomory fractional cuts applied:  5

Root node processing (before b&c):
  Real time             =   69.62 sec. (26882.47 ticks)
Parallel b&c, 4 threads:
  Real time             = 3464.42 sec. (1228441.83 ticks)
  Sync time (average)   =  288.41 sec.
  Wait time (average)   =  288.72 sec.
                          ------------
Total (root+branch&cut) = 3534.04 sec. (1255324.30 ticks)
optimal objective= 81212.0

artificial: false set: [2, 85, 103, 58, 62] start node= 1 start time= 12 capacity type= 2
(2,1)->(0,6)->(1,12)->(2,18)->(1,25)->(2,1):1

artificial: false set: [225, 2, 58, 28, 93] start node= 5 start time= 1 capacity type= 2
(5,1)->(0,6)->(1,12)->(2,18)->(0,23)->(5,1):1

artificial: false set: [161, 4, 116, 88, 60] start node= 1 start time= 19 capacity type= 2
(3,0)->(2,8)->(0,13)->(1,19)->(2,25)->(3,0):2

artificial: false set: [84, 7, 57, 92, 236] start node= 5 start time= 3 capacity type= 2
(5,3)->(1,11)->(2,17)->(0,22)->(1,28)->(5,3):1

artificial: false set: [103, 153, 58, 107, 62] start node= 1 start time= 25 capacity type= 2
(2,1)->(3,6)->(1,12)->(2,18)->(1,25)->(2,1):1

artificial: false set: [0, 233, 44, 221, 14] start node= 1 start time= 6 capacity type= 2
(0,0)->(1,6)->(0,13)->(4,19)->(5,25)->(0,0):1

artificial: false set: [49, 20, 228, 5, 215] start node= 5 start time= 11 capacity type= 2
(4,5)->(5,11)->(0,16)->(1,22)->(0,29)->(4,5):1

artificial: false set: [64, 177, 69, 200, 153] start node= 4 start time= 24 capacity type= 1
(1,0)->(3,6)->(1,12)->(3,18)->(4,24)->(1,0):1

artificial: false set: [179, 67, 71, 155, 191] start node= 4 start time= 0 capacity type= 1
(4,0)->(1,6)->(3,12)->(1,18)->(3,24)->(4,0):1

artificial: false set: [256, 224, 17, 154, 47] start node= 4 start time= 29 capacity type= 1
(5,5)->(3,10)->(1,16)->(0,23)->(4,29)->(5,5):1

artificial: false set: [34, 226, 181, 73, 284] start node= 5 start time= 5 capacity type= 2
(3,0)->(5,5)->(0,10)->(6,18)->(1,24)->(3,0):1

artificial: false set: [49, 20, 215, 283, 269] start node= 4 start time= 5 capacity type= 1
(4,5)->(5,11)->(6,16)->(1,22)->(0,29)->(4,5):1

artificial: false set: [82, 197, 314, 234, 31] start node= 4 start time= 16 capacity type= 1
(0,2)->(6,10)->(4,16)->(1,22)->(5,27)->(0,2):1

artificial: false set: [241, 84, 313, 267, 219] start node= 4 start time= 14 capacity type= 2
(5,3)->(6,8)->(4,14)->(5,20)->(1,28)->(5,3):1

artificial: false set: [0, 67, 233, 221, 461, 175] start node= 4 start time= 18 capacity type= 2
(0,0)->(1,6)->(3,12)->(4,18)->(4,19)->(5,25)->(0,0):1

artificial: false set: [0, 67, 233, 221, 461, 175] start node= 5 start time= 25 capacity type= 2
(0,0)->(1,6)->(3,12)->(4,18)->(4,19)->(5,25)->(0,0):1

artificial: false set: [320, 273, 202, 219, 173] start node= 4 start time= 1 capacity type= 2
(4,1)->(3,8)->(4,14)->(5,20)->(6,25)->(4,1):1

artificial: false set: [245, 262, 87, 24, 492, 189] start node= 5 start time= 19 capacity type= 2
(5,0)->(2,6)->(0,11)->(5,19)->(5,20)->(3,25)->(5,0):1

artificial: false set: [288, 149, 184, 298, 109, 271] start node= 5 start time= 16 capacity type= 2
(6,1)->(2,6)->(3,11)->(5,16)->(6,21)->(2,26)->(6,1):2

artificial: false set: [193, 20, 250, 350, 94, 78, 351] start node= 4 start time= 5 capacity type= 1
(4,5)->(1,11)->(5,16)->(2,22)->(0,27)->(0,28)->(0,29)->(4,5):1

artificial: false set: [304, 82, 500, 156, 141, 254] start node= 1 start time= 22 capacity type= 1
(2,4)->(6,9)->(3,16)->(1,22)->(5,27)->(5,28)->(2,4):1

artificial: false set: [306, 179, 436, 269, 77, 191] start node= 4 start time= 0 capacity type= 1
(4,0)->(1,6)->(5,11)->(6,16)->(3,23)->(3,24)->(4,0):2

artificial: false set: [65, 274, 457, 220, 173, 286] start node= 4 start time= 14 capacity type= 1
(1,2)->(3,8)->(4,14)->(4,15)->(5,21)->(6,26)->(1,2):3

artificial: false set: [128, 259, 215, 186, 252, 447] start node= 4 start time= 4 capacity type= 2
(4,4)->(4,5)->(5,11)->(3,16)->(5,21)->(2,27)->(4,4):1

artificial: false set: [400, 289, 276, 294, 136, 504, 142] start node= 5 start time= 26 capacity type= 2
(6,1)->(6,2)->(2,7)->(6,12)->(2,17)->(2,18)->(5,26)->(6,1):1

artificial: false set: [292, 133, 262, 473, 266, 474, 189] start node= 5 start time= 1 capacity type= 2
(5,0)->(5,1)->(5,2)->(6,7)->(2,12)->(5,20)->(3,25)->(5,0):1

Column Generation Based Heuristic Time= 3599460
javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:465)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceB_M.runBranchAndPrice(BranchAndPriceB_M.java:248)
	at SNDRCSolver.<init>(SNDRCSolver.java:96)
	at SNDRCSolver.main(SNDRCSolver.java:231)
================ Solution ================
BAP terminated with objective : 81212
Total Number of iterations: 1228
Total Number of processed nodes: 110
Total Time spent on master problems: 32317976 Total time spent on pricing problems: 17799
Best bound : 80545.44000000005
[0, 2, 4, 5, 7, 14, 17, 20, 24, 28, 31, 34, 44, 47, 49, 57, 58, 60, 62, 64, 65, 67, 69, 71, 73, 77, 78, 82, 84, 85, 87, 88, 92, 93, 94, 103, 107, 109, 116, 128, 133, 136, 141, 142, 149, 153, 154, 155, 156, 161, 173, 175, 177, 179, 181, 184, 186, 189, 191, 193, 197, 200, 202, 215, 219, 220, 221, 224, 225, 226, 228, 233, 234, 236, 241, 245, 250, 252, 254, 256, 259, 262, 266, 267, 269, 271, 273, 274, 276, 283, 284, 286, 288, 289, 292, 294, 298, 304, 306, 313, 314, 320]
The number of service edges used= 102

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [2, 85, 103, 58, 62] start node= 1 start time= 12 capacity type= 2
(2,1)->(0,6)->(1,12)->(2,18)->(1,25)->(2,1):1.51

artificial: false set: [225, 2, 58, 28, 93] start node= 5 start time= 1 capacity type= 2
(5,1)->(0,6)->(1,12)->(2,18)->(0,23)->(5,1):1.3876923076923096

artificial: false set: [161, 4, 116, 88, 60] start node= 1 start time= 19 capacity type= 2
(3,0)->(2,8)->(0,13)->(1,19)->(2,25)->(3,0):0.7774358974358986

artificial: false set: [84, 7, 57, 92, 236] start node= 5 start time= 3 capacity type= 2
(5,3)->(1,11)->(2,17)->(0,22)->(1,28)->(5,3):0.7066666666666648

artificial: false set: [103, 153, 58, 107, 62] start node= 1 start time= 25 capacity type= 2
(2,1)->(3,6)->(1,12)->(2,18)->(1,25)->(2,1):0.0

artificial: false set: [0, 233, 44, 221, 14] start node= 1 start time= 6 capacity type= 2
(0,0)->(1,6)->(0,13)->(4,19)->(5,25)->(0,0):0.34076923076923193

artificial: false set: [49, 20, 228, 5, 215] start node= 5 start time= 11 capacity type= 2
(4,5)->(5,11)->(0,16)->(1,22)->(0,29)->(4,5):1.4312820512820514

artificial: false set: [64, 177, 69, 200, 153] start node= 4 start time= 24 capacity type= 1
(1,0)->(3,6)->(1,12)->(3,18)->(4,24)->(1,0):0.0

artificial: false set: [179, 67, 71, 155, 191] start node= 4 start time= 0 capacity type= 1
(4,0)->(1,6)->(3,12)->(1,18)->(3,24)->(4,0):0.0

artificial: false set: [256, 224, 17, 154, 47] start node= 4 start time= 29 capacity type= 1
(5,5)->(3,10)->(1,16)->(0,23)->(4,29)->(5,5):0.0

artificial: false set: [34, 226, 181, 73, 284] start node= 5 start time= 5 capacity type= 2
(3,0)->(5,5)->(0,10)->(6,18)->(1,24)->(3,0):0.5915384615384618

artificial: false set: [49, 20, 215, 283, 269] start node= 4 start time= 5 capacity type= 1
(4,5)->(5,11)->(6,16)->(1,22)->(0,29)->(4,5):0.0

artificial: false set: [82, 197, 314, 234, 31] start node= 4 start time= 16 capacity type= 1
(0,2)->(6,10)->(4,16)->(1,22)->(5,27)->(0,2):0.0

artificial: false set: [241, 84, 313, 267, 219] start node= 4 start time= 14 capacity type= 2
(5,3)->(6,8)->(4,14)->(5,20)->(1,28)->(5,3):0.41000000000000003

artificial: false set: [0, 67, 233, 221, 461, 175] start node= 4 start time= 18 capacity type= 2
(0,0)->(1,6)->(3,12)->(4,18)->(4,19)->(5,25)->(0,0):0.0

artificial: false set: [0, 67, 233, 221, 461, 175] start node= 5 start time= 25 capacity type= 2
(0,0)->(1,6)->(3,12)->(4,18)->(4,19)->(5,25)->(0,0):0.0

artificial: false set: [320, 273, 202, 219, 173] start node= 4 start time= 1 capacity type= 2
(4,1)->(3,8)->(4,14)->(5,20)->(6,25)->(4,1):0.66

artificial: false set: [245, 262, 87, 24, 492, 189] start node= 5 start time= 19 capacity type= 2
(5,0)->(2,6)->(0,11)->(5,19)->(5,20)->(3,25)->(5,0):0.0

artificial: false set: [288, 149, 184, 298, 109, 271] start node= 5 start time= 16 capacity type= 2
(6,1)->(2,6)->(3,11)->(5,16)->(6,21)->(2,26)->(6,1):2.786666666666667

artificial: false set: [193, 20, 250, 350, 94, 78, 351] start node= 4 start time= 5 capacity type= 1
(4,5)->(1,11)->(5,16)->(2,22)->(0,27)->(0,28)->(0,29)->(4,5):0.0

artificial: false set: [304, 82, 500, 156, 141, 254] start node= 1 start time= 22 capacity type= 1
(2,4)->(6,9)->(3,16)->(1,22)->(5,27)->(5,28)->(2,4):0.0

artificial: false set: [306, 179, 436, 269, 77, 191] start node= 4 start time= 0 capacity type= 1
(4,0)->(1,6)->(5,11)->(6,16)->(3,23)->(3,24)->(4,0):1.895897435897435

artificial: false set: [65, 274, 457, 220, 173, 286] start node= 4 start time= 14 capacity type= 1
(1,2)->(3,8)->(4,14)->(4,15)->(5,21)->(6,26)->(1,2):1.8112820512820516

artificial: false set: [128, 259, 215, 186, 252, 447] start node= 4 start time= 4 capacity type= 2
(4,4)->(4,5)->(5,11)->(3,16)->(5,21)->(2,27)->(4,4):0.0

artificial: false set: [400, 289, 276, 294, 136, 504, 142] start node= 5 start time= 26 capacity type= 2
(6,1)->(6,2)->(2,7)->(6,12)->(2,17)->(2,18)->(5,26)->(6,1):0.0

artificial: false set: [292, 133, 262, 473, 266, 474, 189] start node= 5 start time= 1 capacity type= 2
(5,0)->(5,1)->(5,2)->(6,7)->(2,12)->(5,20)->(3,25)->(5,0):0.42999999999999994

Total time= 36001964
