number of service arcs=900
number of holding arcs=210

Yes
207

javax.naming.TimeLimitExceededException
	at cg.master.Master.solveMasterProblem(Master.java:414)
	at org.jorlib.frameworks.columnGeneration.master.AbstractMaster.solve(AbstractMaster.java:152)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.invokeMaster(ColGen.java:271)
	at org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.solve(ColGen.java:224)
	at org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.solveBAPNode(AbstractBranchAndPrice.java:342)
	at bap.BranchAndPriceB_M.runBranchAndPrice(BranchAndPriceB_M.java:239)
	at SNDRCSolver.<init>(SNDRCSolver.java:93)
	at SNDRCSolver.main(SNDRCSolver.java:228)
================ Solution ================
BAP terminated with objective : 36534
Total Number of iterations: 183
Total Number of processed nodes: 11
Total Time spent on master problems: 4453756 Total time spent on pricing problems: 2376
Best bound : 34356.47
[1, 3, 7, 8, 10, 12, 14, 16, 20, 26, 27, 28, 29, 31, 36, 42, 48, 52, 55, 59, 64, 67, 68, 70, 75, 78, 82, 86, 89, 99, 101, 102, 106, 109, 115, 120, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 138, 141, 142, 143, 146, 147, 148, 152, 154, 156, 159, 161, 163, 165, 171, 175, 179, 180, 181, 182, 184, 191, 192, 195, 197, 198, 200, 206]
The number of service edges used= 74

Solution is optimal: false
Columns (only non-zero columns are returned):
artificial: false set: [16, 257, 146, 131, 341, 86, 200] start node= 4 start time= 14 capacity type= 1
(0,4)->(3,9)->(4,14)->(4,15)->(1,20)->(1,21)->(6,29)->(0,4):1.0

artificial: false set: [353, 354, 198, 120, 10, 28, 142] start node= 4 start time= 27 capacity type= 1
(0,5)->(2,10)->(6,16)->(0,21)->(4,26)->(4,27)->(4,28)->(0,5):1.0

artificial: false set: [352, 353, 242, 354, 355, 356, 133, 102, 55, 315, 143, 351] start node= 4 start time= 24 capacity type= 1
(4,0)->(1,5)->(1,6)->(2,11)->(3,18)->(3,19)->(4,24)->(4,25)->(4,26)->(4,27)->(4,28)->(4,29)->(4,0):1.0

artificial: false set: [336, 161, 337, 130, 152, 109, 335] start node= 4 start time= 8 capacity type= 1
(3,3)->(4,8)->(4,9)->(4,10)->(4,11)->(2,18)->(4,26)->(3,3):1.0

artificial: false set: [304, 305, 306, 132, 342, 135, 343, 344, 156, 159] start node= 4 start time= 0 capacity type= 1
(4,0)->(3,7)->(3,8)->(3,9)->(3,10)->(4,15)->(4,16)->(4,17)->(4,18)->(3,25)->(4,0):1.0

artificial: false set: [227, 228, 294, 295, 296, 106, 138, 267, 268, 269, 14, 338, 339] start node= 4 start time= 11 capacity type= 1
(2,0)->(2,1)->(2,2)->(2,3)->(4,11)->(4,12)->(4,13)->(0,20)->(0,21)->(0,22)->(2,27)->(2,28)->(2,29)->(2,0):1.0

artificial: false set: [67, 147, 70, 246, 247, 248, 344, 345, 346, 347, 124, 348] start node= 4 start time= 17 capacity type= 1
(3,3)->(1,9)->(1,10)->(1,11)->(1,12)->(4,17)->(4,18)->(4,19)->(4,20)->(4,21)->(4,22)->(1,27)->(3,3):1.0

artificial: false set: [128, 64, 52, 101, 126] start node= 1 start time= 0 capacity type= 2
(1,0)->(2,5)->(3,12)->(1,18)->(3,24)->(1,0):1.0

artificial: false set: [48, 1, 200, 42, 415] start node= 1 start time= 12 capacity type= 2
(0,4)->(1,12)->(0,20)->(6,28)->(6,29)->(0,4):1.0

artificial: false set: [99, 181, 154, 27, 75] start node= 1 start time= 6 capacity type= 2
(1,6)->(5,11)->(0,17)->(4,22)->(2,29)->(1,6):1.0

artificial: false set: [240, 82, 148, 20, 197, 134, 239] start node= 1 start time= 2 capacity type= 2
(1,2)->(1,3)->(1,4)->(6,12)->(0,17)->(3,22)->(4,27)->(1,2):1.0

artificial: false set: [257, 258, 3, 195, 294, 391, 392, 393, 123, 59] start node= 1 start time= 21 capacity type= 2
(6,4)->(6,5)->(6,6)->(6,7)->(0,12)->(1,20)->(1,21)->(1,22)->(2,27)->(2,28)->(6,4):1.0

artificial: false set: [197, 27, 171, 29, 141] start node= 4 start time= 4 capacity type= 2
(4,4)->(6,12)->(0,17)->(4,22)->(0,29)->(4,4):1.0

artificial: false set: [16, 131, 165, 200, 415, 191] start node= 5 start time= 20 capacity type= 2
(0,4)->(3,9)->(4,14)->(5,20)->(6,28)->(6,29)->(0,4):1.0

artificial: false set: [179, 36, 373, 182, 374, 375, 215, 31] start node= 5 start time= 2 capacity type= 2
(5,2)->(0,8)->(0,9)->(5,16)->(5,17)->(5,18)->(5,19)->(0,25)->(5,2):1.0

artificial: false set: [115, 8, 184, 89, 12, 381] start node= 5 start time= 25 capacity type= 2
(0,1)->(2,6)->(0,13)->(2,18)->(5,24)->(5,25)->(0,1):1.0

artificial: false set: [192, 3, 195, 392, 393, 382, 78, 383] start node= 5 start time= 26 capacity type= 2
(6,5)->(6,6)->(6,7)->(0,12)->(1,20)->(5,25)->(5,26)->(5,27)->(6,5):1.0

artificial: false set: [163, 68, 372, 373, 182, 374, 7, 375, 232] start node= 5 start time= 15 capacity type= 2
(1,4)->(4,9)->(5,15)->(5,16)->(5,17)->(5,18)->(5,19)->(0,25)->(0,26)->(1,4):1.0

artificial: false set: [180, 358, 359, 360, 361, 26, 362, 412, 206, 175] start node= 5 start time= 1 capacity type= 2
(5,1)->(5,2)->(5,3)->(5,4)->(5,5)->(5,6)->(0,12)->(4,17)->(6,25)->(6,26)->(5,1):1.0

Total time= 18006051
